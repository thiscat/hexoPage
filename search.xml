<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>生成手机号系统</title>
      <link href="/posts/3c50be18.html"/>
      <url>/posts/3c50be18.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><p>生成目前可能存在的所有手机号</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">调度表： phone<span class="emphasis">_tasks</span></span><br><span class="line"><span class="emphasis">字段：start_number end_</span>number status</span><br><span class="line"></span><br><span class="line">手机号表: phone<span class="emphasis">_numbers</span></span><br><span class="line"><span class="emphasis">字段：phone_number status created_at updated_</span>at</span><br><span class="line"></span><br><span class="line">1. 先将最小的手机号（13000000000）， 到最大手机号（19999999999），循环处理，切割成多份，写入start<span class="emphasis">_number和end_number。同时将任务写入到redis中</span></span><br><span class="line"><span class="emphasis">2. 任务调度类，将调度表查找出未被调用的任务。</span></span><br><span class="line"><span class="emphasis">3. 调用redis锁，防止重复调用任务，根据start_number和end_</span>number开始循环，同时对循环中的num进行验证是否符合规则并且redis和数据库中都不存在过</span><br><span class="line">4. 批量写入数据库中</span><br></pre></td></tr></table></figure><h1 id="一、代码实现"><a href="#一、代码实现" class="headerlink" title="一、代码实现"></a>一、代码实现</h1><h2 id="1-初始化"><a href="#1-初始化" class="headerlink" title="1. 初始化"></a>1. 初始化</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TaskInitializer</span> </span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="variable constant_">CHUNK_SIZE</span> = <span class="number">1000000</span>; <span class="comment">// 每个任务包含号码量</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">initialize</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$redis</span> = <span class="title class_">Redis</span>::<span class="title function_ invoke__">connection</span>();</span><br><span class="line">        <span class="variable">$maxNumber</span> = <span class="number">19999999999</span>; <span class="comment">// 最大的手机号</span></span><br><span class="line">        <span class="variable">$current</span> = <span class="number">13000000000</span>; <span class="comment">// 最开始的手机号</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (<span class="variable">$current</span> &lt;= <span class="variable">$maxNumber</span>) &#123;</span><br><span class="line">            <span class="variable">$end</span> = <span class="title function_ invoke__">min</span>(<span class="variable">$current</span> + <span class="built_in">self</span>::<span class="variable constant_">CHUNK_SIZE</span> - <span class="number">1</span>, <span class="variable">$maxNumber</span>);</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 同时写入数据库和Redis</span></span><br><span class="line">            DB::<span class="title function_ invoke__">table</span>(<span class="string">&#x27;phone_tasks&#x27;</span>)-&gt;<span class="title function_ invoke__">insert</span>([</span><br><span class="line">                <span class="string">&#x27;start_number&#x27;</span> =&gt; <span class="variable">$current</span>,</span><br><span class="line">                <span class="string">&#x27;end_number&#x27;</span> =&gt; <span class="variable">$end</span>,</span><br><span class="line">                <span class="string">&#x27;status&#x27;</span> =&gt; <span class="number">0</span></span><br><span class="line">            ]);</span><br><span class="line"></span><br><span class="line">            <span class="variable">$redis</span>-&gt;<span class="title function_ invoke__">rpush</span>(<span class="string">&#x27;phone_tasks&#x27;</span>, <span class="string">&quot;<span class="subst">&#123;$current&#125;</span>:<span class="subst">&#123;$end&#125;</span>&quot;</span>);</span><br><span class="line">            </span><br><span class="line">            <span class="variable">$current</span> = <span class="variable">$end</span> + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-分布式任务处理器"><a href="#2-分布式任务处理器" class="headerlink" title="2. 分布式任务处理器"></a>2. 分布式任务处理器</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// app/Services/TaskProcessor.php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TaskProcessor</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="variable constant_">LOCK_TIMEOUT</span> = <span class="number">300</span>; <span class="comment">// 5分钟锁超时</span></span><br><span class="line">    <span class="keyword">const</span> <span class="variable constant_">BATCH_SIZE</span> = <span class="number">5000</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">process</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">            <span class="variable">$task</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">fetchTask</span>();</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$task</span>) &#123;</span><br><span class="line">                <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">handleTask</span>(<span class="variable">$task</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="title function_ invoke__">usleep</span>(<span class="number">100000</span>); <span class="comment">// 100ms间隔</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">fetchTask</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$redis</span> = <span class="title class_">Redis</span>::<span class="title function_ invoke__">connection</span>();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 优先处理失败任务</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$failedTask</span> = <span class="variable">$redis</span>-&gt;<span class="title function_ invoke__">zrange</span>(<span class="string">&#x27;phone_failed_tasks&#x27;</span>, <span class="number">0</span>, <span class="number">0</span>)) &#123;</span><br><span class="line">            <span class="variable">$taskStr</span> = <span class="title function_ invoke__">array_shift</span>(<span class="variable">$failedTask</span>);</span><br><span class="line">            <span class="variable">$redis</span>-&gt;<span class="title function_ invoke__">zrem</span>(<span class="string">&#x27;phone_failed_tasks&#x27;</span>, <span class="variable">$taskStr</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="title function_ invoke__">explode</span>(<span class="string">&#x27;:&#x27;</span>, <span class="variable">$taskStr</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取新任务</span></span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">explode</span>(<span class="string">&#x27;:&#x27;</span>, <span class="variable">$redis</span>-&gt;<span class="title function_ invoke__">lpop</span>(<span class="string">&#x27;phone_tasks&#x27;</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">handleTask</span>(<span class="params"><span class="variable">$task</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        [<span class="variable">$start</span>, <span class="variable">$end</span>] = <span class="variable">$task</span>;</span><br><span class="line">        <span class="variable">$lockKey</span> = <span class="string">&quot;phone_lock:<span class="subst">&#123;$start&#125;</span>-<span class="subst">&#123;$end&#125;</span>&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">acquireLock</span>(<span class="variable">$lockKey</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">updateTaskStatus</span>(<span class="variable">$start</span>, <span class="variable">$end</span>, <span class="number">1</span>);</span><br><span class="line">            </span><br><span class="line">            <span class="variable">$current</span> = <span class="variable">$start</span>;</span><br><span class="line">            <span class="keyword">while</span> (<span class="variable">$current</span> &lt;= <span class="variable">$end</span>) &#123;</span><br><span class="line">                <span class="variable">$batch</span> = [];</span><br><span class="line">                <span class="variable">$batchEnd</span> = <span class="title function_ invoke__">min</span>(<span class="variable">$current</span> + <span class="built_in">self</span>::<span class="variable constant_">BATCH_SIZE</span> - <span class="number">1</span>, <span class="variable">$end</span>);</span><br><span class="line">                </span><br><span class="line">                <span class="comment">// 生成写入的数据列表</span></span><br><span class="line">                <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">generateBatch</span>(<span class="variable">$current</span>, <span class="variable">$batchEnd</span>, <span class="variable">$batch</span>);</span><br><span class="line">                <span class="comment">// 批量写入</span></span><br><span class="line">                <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">bulkInsert</span>(<span class="variable">$batch</span>);</span><br><span class="line">                </span><br><span class="line">                <span class="variable">$current</span> = <span class="variable">$batchEnd</span> + <span class="number">1</span>;</span><br><span class="line">                <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">updateProgress</span>(<span class="variable">$start</span>, <span class="variable">$end</span>, <span class="variable">$current</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">updateTaskStatus</span>(<span class="variable">$start</span>, <span class="variable">$end</span>, <span class="number">2</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (\<span class="built_in">Exception</span> <span class="variable">$e</span>) &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">handleFailure</span>(<span class="variable">$start</span>, <span class="variable">$end</span>, <span class="variable">$e</span>);</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">releaseLock</span>(<span class="variable">$lockKey</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">acquireLock</span>(<span class="params"><span class="variable">$lockKey</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$redis</span> = <span class="title class_">Redis</span>::<span class="title function_ invoke__">connection</span>();</span><br><span class="line">        <span class="variable">$workerId</span> = <span class="title function_ invoke__">config</span>(<span class="string">&#x27;app.worker_id&#x27;</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$redis</span>-&gt;<span class="title function_ invoke__">set</span>(</span><br><span class="line">            <span class="variable">$lockKey</span>, </span><br><span class="line">            <span class="string">&quot;<span class="subst">&#123;$workerId&#125;</span>:&quot;</span>.<span class="title function_ invoke__">time</span>(), </span><br><span class="line">            <span class="string">&#x27;EX&#x27;</span>, <span class="built_in">self</span>::<span class="variable constant_">LOCK_TIMEOUT</span>, </span><br><span class="line">            <span class="string">&#x27;NX&#x27;</span></span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">generateBatch</span>(<span class="params"><span class="variable">$start</span>, <span class="variable">$end</span>, &amp;<span class="variable">$batch</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="variable">$num</span> = <span class="variable">$start</span>; <span class="variable">$num</span> &lt;= <span class="variable">$end</span>; <span class="variable">$num</span>++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">isValidNumber</span>(<span class="variable">$num</span>) &amp;&amp; !<span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">isNumberExists</span>(<span class="variable">$num</span>)) &#123;</span><br><span class="line">                <span class="variable">$batch</span>[] = [</span><br><span class="line">                    <span class="string">&#x27;phone_number&#x27;</span> =&gt; <span class="variable">$num</span>,</span><br><span class="line">                    <span class="string">&#x27;status&#x27;</span> =&gt; <span class="number">0</span>,</span><br><span class="line">                    <span class="string">&#x27;created_at&#x27;</span> =&gt; <span class="title function_ invoke__">now</span>(),</span><br><span class="line">                    <span class="string">&#x27;updated_at&#x27;</span> =&gt; <span class="title function_ invoke__">now</span>()</span><br><span class="line">                ];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">bulkInsert</span>(<span class="params"><span class="variable">$batch</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$batch</span>)) &#123;</span><br><span class="line">            DB::<span class="title function_ invoke__">table</span>(<span class="string">&#x27;phone_numbers&#x27;</span>)-&gt;<span class="title function_ invoke__">insertOrIgnore</span>(<span class="variable">$batch</span>);</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 更新Redis缓存</span></span><br><span class="line">            <span class="title class_">Redis</span>::<span class="title function_ invoke__">pipeline</span>(function (<span class="variable">$pipe</span>) <span class="keyword">use</span> ($<span class="title">batch</span>) &#123;</span><br><span class="line">                <span class="title">foreach</span> ($<span class="title">batch</span> <span class="keyword">as</span> $<span class="title">item</span>) &#123;</span><br><span class="line">                    $<span class="title">pipe</span>-&gt;<span class="title">sadd</span>(&#x27;<span class="title">phone_exist_set</span>&#x27;, $<span class="title">item</span>[&#x27;<span class="title">phone_number</span>&#x27;]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 验证规则</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">isValidNumber</span>(<span class="params"><span class="variable">$number</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$str</span> = <span class="title function_ invoke__">str_pad</span>(<span class="variable">$number</span>, <span class="number">11</span>, <span class="string">&#x27;0&#x27;</span>, STR_PAD_LEFT);</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^1[3-9]\d&#123;9&#125;$/&#x27;</span>, <span class="variable">$str</span>); <span class="comment">// 实际校验规则</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">isNumberExists</span>(<span class="params"><span class="variable">$number</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// 先查Redis缓存</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="title class_">Redis</span>::<span class="title function_ invoke__">sismember</span>(<span class="string">&#x27;phone_exist_set&#x27;</span>, <span class="variable">$number</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 再查数据库</span></span><br><span class="line">        <span class="variable">$exists</span> = DB::<span class="title function_ invoke__">table</span>(<span class="string">&#x27;phone_numbers&#x27;</span>)</span><br><span class="line">            -&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;phone_number&#x27;</span>, <span class="variable">$number</span>)</span><br><span class="line">            -&gt;<span class="title function_ invoke__">exists</span>();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 更新缓存</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$exists</span>) &#123;</span><br><span class="line">            <span class="title class_">Redis</span>::<span class="title function_ invoke__">sadd</span>(<span class="string">&#x27;phone_exist_set&#x27;</span>, <span class="variable">$number</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$exists</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">handleFailure</span>(<span class="params"><span class="variable">$start</span>, <span class="variable">$end</span>, <span class="variable">$exception</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$redis</span> = <span class="title class_">Redis</span>::<span class="title function_ invoke__">connection</span>();</span><br><span class="line">        <span class="variable">$taskStr</span> = <span class="string">&quot;<span class="subst">&#123;$start&#125;</span>:<span class="subst">&#123;$end&#125;</span>&quot;</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 记录失败次数</span></span><br><span class="line">        <span class="variable">$retryCount</span> = <span class="variable">$redis</span>-&gt;<span class="title function_ invoke__">zscore</span>(<span class="string">&#x27;phone_failed_tasks&#x27;</span>, <span class="variable">$taskStr</span>) ?: <span class="number">0</span>;</span><br><span class="line">        <span class="variable">$redis</span>-&gt;<span class="title function_ invoke__">zadd</span>(<span class="string">&#x27;phone_failed_tasks&#x27;</span>, <span class="variable">$retryCount</span> + <span class="number">1</span>, <span class="variable">$taskStr</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 更新数据库状态</span></span><br><span class="line">        DB::<span class="title function_ invoke__">table</span>(<span class="string">&#x27;phone_tasks&#x27;</span>)</span><br><span class="line">            -&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;start_number&#x27;</span>, <span class="variable">$start</span>)</span><br><span class="line">            -&gt;<span class="title function_ invoke__">where</span>(<span class="string">&#x27;end_number&#x27;</span>, <span class="variable">$end</span>)</span><br><span class="line">            -&gt;<span class="title function_ invoke__">update</span>([</span><br><span class="line">                <span class="string">&#x27;status&#x27;</span> =&gt; <span class="number">3</span>,</span><br><span class="line">                <span class="string">&#x27;error_message&#x27;</span> =&gt; <span class="title function_ invoke__">substr</span>(<span class="variable">$exception</span>-&gt;<span class="title function_ invoke__">getMessage</span>(), <span class="number">0</span>, <span class="number">255</span>)</span><br><span class="line">            ]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>面试总结</title>
      <link href="/posts/27a6e4df.html"/>
      <url>/posts/27a6e4df.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="一、mysql"><a href="#一、mysql" class="headerlink" title="一、mysql"></a>一、mysql</h1><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1.</span> 考虑到业务后续发展，设计好结构以及后续数据量变大后分表</span><br><span class="line"><span class="bullet">2.</span> 索引需要符合最左原则</span><br><span class="line"><span class="bullet">3.</span> 按照使用频率顺序创建符合索引</span><br></pre></td></tr></table></figure><h1 id="二、高并发"><a href="#二、高并发" class="headerlink" title="二、高并发"></a>二、高并发</h1><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">负载均衡：依赖nginx ip_hash，根据<span class="built_in">ip</span>访问不同的服务器。或者使用阿里云等平台负载均衡 + 弹性伸缩</span><br><span class="line"><span class="symbol">mysql</span>：主从复制，或者使用集群</span><br><span class="line"><span class="symbol">redis</span>：根据业务拆分redis，或者后续需要的情况下使用主从 + 哨兵（故障转移），或者集群处理</span><br></pre></td></tr></table></figure><h1 id="项目"><a href="#项目" class="headerlink" title="项目"></a>项目</h1><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">代码需要考虑到解耦</span><br></pre></td></tr></table></figure><h1 id="项目经验简述"><a href="#项目经验简述" class="headerlink" title="项目经验简述"></a>项目经验简述</h1><p>手机号系统</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">调度表： phone<span class="emphasis">_tasks</span></span><br><span class="line"><span class="emphasis">字段：start_number end_</span>number status</span><br><span class="line"></span><br><span class="line">手机号表: phone<span class="emphasis">_numbers</span></span><br><span class="line"><span class="emphasis">字段：phone_number status created_at updated_</span>at</span><br><span class="line"></span><br><span class="line">1. 先将最小的手机号（13000000000）， 到最大手机号（19999999999），循环处理，切割成多份，写入start<span class="emphasis">_number和end_number。同时将任务写入到redis中</span></span><br><span class="line"><span class="emphasis">2. 任务调度类，将调度表查找出未被调用的任务。</span></span><br><span class="line"><span class="emphasis">3. 调用redis锁，防止重复调用任务，根据start_number和end_</span>number开始循环，同时对循环中的num进行验证是否符合规则并且redis和数据库中都不存在过</span><br><span class="line">4. 批量写入数据库中</span><br><span class="line">5. 针对执行错误的数据写入到redis list中，后续执行时优先处理此块数据</span><br></pre></td></tr></table></figure><p>爬虫分布式系统</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE TABLE</span> spider_scheduler.`ss_task` (</span><br><span class="line">  `id` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">NOT NULL</span> AUTO_INCREMENT,</span><br><span class="line">  `taskID` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">NOT NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;数字ID，主要用来区分父子任务,1-3位为一级，4-5位为二级，6-7位为三级&#x27;</span>,</span><br><span class="line">  `taskNo` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">NOT NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;任务编号-可以识别的编号:如maitianSell,danxiaSell&#x27;</span>,</span><br><span class="line">  `taskName` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">NOT NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;任务名称&#x27;</span>,</span><br><span class="line">  `taskType` enum(<span class="string">&#x27;cat&#x27;</span>,<span class="string">&#x27;cat1&#x27;</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;归属项目&#x27;</span>,</span><br><span class="line">  `taskHeaders` text COMMENT <span class="string">&#x27;该任务的必需的headers&#x27;</span>,</span><br><span class="line">  `taskMethod` enum(<span class="string">&#x27;post&#x27;</span>,<span class="string">&#x27;get&#x27;</span>,<span class="string">&#x27;put&#x27;</span>) <span class="keyword">NOT NULL</span> COMMENT <span class="string">&#x27;请求方式&#x27;</span>,</span><br><span class="line">  `taskReqDataTpye` enum(<span class="string">&#x27;form-data&#x27;</span>,<span class="string">&#x27;raw&#x27;</span>,<span class="string">&#x27;x-www-form-urlencoded&#x27;</span>,<span class="string">&#x27;binary&#x27;</span>,<span class="string">&#x27;json&#x27;</span>,<span class="string">&#x27;text/html&#x27;</span>) <span class="keyword">NOT NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;form-data&#x27;</span> COMMENT <span class="string">&#x27;请求数据类型 text/html不使用json方式&#x27;</span>,</span><br><span class="line">  `taskRequestCount` tinyint(<span class="number">3</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;16&#x27;</span> COMMENT <span class="string">&#x27;并发量&#x27;</span>,</span><br><span class="line">  `taskDownloadDelay` <span class="type">float</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0.5&#x27;</span> COMMENT <span class="string">&#x27;采集延迟，每次并发延迟&#x27;</span>,</span><br><span class="line">  `taskDownloadTimeout` <span class="type">int</span>(<span class="number">3</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;10&#x27;</span> COMMENT <span class="string">&#x27;请求超时时间，针对有些特别卡的网站可以设置超时时间长一些&#x27;</span>,</span><br><span class="line">  `taskProxy` tinyint(<span class="number">1</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;0为不开启代理，1为开启每次换ip代码，2为5分钟换一次ip代理&#x27;</span>,</span><br><span class="line">  `taskDb` <span class="type">varchar</span>(<span class="number">150</span>) <span class="keyword">NOT NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;采集后写入的数据库:示例mysql://userName:userPW@ip:port/dbName&#x27;</span>,</span><br><span class="line">  `taskUrl` <span class="type">varchar</span>(<span class="number">500</span>) <span class="keyword">NOT NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;目标URL,不带参数&#x27;</span>,</span><br><span class="line">  `taskStatus` tinyint(<span class="number">1</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;1&#x27;</span> COMMENT <span class="string">&#x27;任务状态，1为启动，0为禁用&#x27;</span>,</span><br><span class="line">  `ver` tinyint(<span class="number">3</span>) <span class="keyword">NOT NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;101&#x27;</span> COMMENT <span class="string">&#x27;数据版本&#x27;</span>,</span><br><span class="line">  `createTime` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `updateTime` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  <span class="keyword">PRIMARY KEY</span> (`id`,`taskNo`),</span><br><span class="line">  <span class="keyword">UNIQUE</span> KEY `taskNo` (`taskNo`) <span class="keyword">USING</span> BTREE</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB AUTO_INCREMENT<span class="operator">=</span><span class="number">1</span> <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8 COMMENT<span class="operator">=</span><span class="string">&#x27;爬虫任务 &#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE TABLE</span> `ss_task_url` (</span><br><span class="line">  `id` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">NOT NULL</span> AUTO_INCREMENT,</span><br><span class="line">  `SSID` <span class="type">varchar</span>(<span class="number">32</span>) <span class="keyword">NOT NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;唯一标识：md5(taskNo+urlParam)&#x27;</span>,</span><br><span class="line">  `taskNo` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">NOT NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;关联ss_task表中的taskNo&#x27;</span>,</span><br><span class="line">  `SSIDStr` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;链接标识:如hid,uid等&#x27;</span>,</span><br><span class="line">  `parentSSID` <span class="type">varchar</span>(<span class="number">32</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;父ID&#x27;</span>,</span><br><span class="line">  `topParentSSID` <span class="type">varchar</span>(<span class="number">32</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;顶级父类id。例如新房图片-&gt;图片详情-&gt;新房基础信息，顶级父类id就等于新房基础信息的ssid&#x27;</span>,</span><br><span class="line">  `urlParam` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;url参数值，按顺序，“|”隔开如:3501|fz&#x27;</span>,</span><br><span class="line">  `otherAct` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;用&quot;|&quot;隔开各参数，其他自定义传值参数,如有些url中不带城市，但数据库字段中需要城市&#x27;</span>,</span><br><span class="line">  `isGet` tinyint(<span class="number">1</span>) <span class="keyword">NOT NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;抓取状态,0为未抓,1为已抓取成功,2为待更新,3为更新成功,7为标识链接不存在（如枚举的链接不存在,或者已下架过期）,8为抓取失败,9为更新失败&#x27;</span>,</span><br><span class="line">  `status` tinyint(<span class="number">1</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span> COMMENT <span class="string">&#x27;2为资源下载完成或子任务已完成,&#x27;</span>,</span><br><span class="line">  `createTime` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span>,</span><br><span class="line">  `updateTime` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY KEY</span> (`id`,`SSID`),</span><br><span class="line">  <span class="keyword">UNIQUE</span> KEY `SSID` (`SSID`),</span><br><span class="line">  <span class="keyword">UNIQUE</span> KEY `id` (`id`) <span class="keyword">USING</span> BTREE,</span><br><span class="line">  KEY `parentSSID` (`parentSSID`),</span><br><span class="line">  KEY `topParentSSID` (`topParentSSID`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB AUTO_INCREMENT<span class="operator">=</span><span class="number">1</span> <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8;</span><br><span class="line"></span><br><span class="line"><span class="number">1.</span> 调用start_requests(支持异步)，</span><br><span class="line"><span class="number">2.</span> 调用调度数据任务类，获取未被执行的任务或不在执行任务队列中的任务数据</span><br><span class="line"><span class="number">3.</span> 调用dataParse，根据不同的任务类型执行不同的代码，并且返回整合后的数据</span><br><span class="line"><span class="number">4.</span> 对数据进行统一清理，并批量入库，如果存在父id，则同步修改父类信息</span><br><span class="line"><span class="number">5.</span> 如果是图片则去除水印后，上传到hadoop中</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> 面试总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>lua优化redis分布式锁</title>
      <link href="/posts/a73d9edf.html"/>
      <url>/posts/a73d9edf.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><p>Lua 脚本能够提升 Redis 分布式锁的性能和可靠性，主要基于以下核心原理：</p><h1 id="一、原子性保证：替代多命令序列"><a href="#一、原子性保证：替代多命令序列" class="headerlink" title="一、原子性保证：替代多命令序列"></a>一、原子性保证：替代多命令序列</h1><h2 id="1-1-原子性保证：替代多命令序列"><a href="#1-1-原子性保证：替代多命令序列" class="headerlink" title="1.1 原子性保证：替代多命令序列"></a>1.1 原子性保证：替代多命令序列</h2><p>传统分布式锁实现需执行多个 Redis 命令（如 EXISTS → HSET → EXPIRE），在高并发场景下可能因网络延迟导致原子性破坏。例如：</p><ol><li>客户端 A 检查锁存在（EXISTS 返回 0）</li><li>客户端 B 抢先获取锁并设置</li><li>客户端 A 继续执行 HSET，覆盖客户端 B 的锁</li></ol><p>Redis 执行 Lua 脚本时会将其作为原子操作，避免中间状态被其他客户端干扰。</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (redis.call(<span class="string">&#x27;EXISTS&#x27;</span>, KEYS[<span class="number">1</span>]) == <span class="number">0</span>) <span class="keyword">then</span></span><br><span class="line">    redis.call(<span class="string">&#x27;HSET&#x27;</span>, KEYS[<span class="number">1</span>], <span class="string">&#x27;client_id&#x27;</span>, ARGV[<span class="number">1</span>], <span class="string">&#x27;reentry&#x27;</span>, <span class="number">1</span>)</span><br><span class="line">    redis.call(<span class="string">&#x27;EXPIRE&#x27;</span>, KEYS[<span class="number">1</span>], ARGV[<span class="number">2</span>])</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h1 id="二、减少网络开销：多命令合并为单次调用"><a href="#二、减少网络开销：多命令合并为单次调用" class="headerlink" title="二、减少网络开销：多命令合并为单次调用"></a>二、减少网络开销：多命令合并为单次调用</h1><p>传统实现需多次客户端与 Redis 服务器的往返通信（如获取锁需 3 次 IO），而 Lua 脚本可将多个命令封装为一次调用。</p><h1 id="三、可靠性增强：原子化锁释放"><a href="#三、可靠性增强：原子化锁释放" class="headerlink" title="三、可靠性增强：原子化锁释放"></a>三、可靠性增强：原子化锁释放</h1><p>释放锁时需验证锁归属并删除，传统实现需两步操作：</p><ul><li>HGET 检查锁是否属于当前客户端</li><li>DEL 删除锁</li></ul><p>若客户端在这两步之间发生阻塞（如 GC），锁可能过期并被其他客户端获取，导致误删。<br>Lua 脚本可将验证和删除合并为原子操作：</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> redis.call(<span class="string">&#x27;HGET&#x27;</span>, KEYS[<span class="number">1</span>], <span class="string">&#x27;client_id&#x27;</span>) == ARGV[<span class="number">1</span>] <span class="keyword">then</span></span><br><span class="line"><span class="keyword">return</span> redis.call(<span class="string">&#x27;DEL&#x27;</span>, KEYS[<span class="number">1</span>])</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>确保只有锁的持有者才能释放锁，避免误删。</p><h1 id="四、可重入锁的原子实现"><a href="#四、可重入锁的原子实现" class="headerlink" title="四、可重入锁的原子实现"></a>四、可重入锁的原子实现</h1><p>实现可重入锁时，需检查锁是否存在、是否属于当前客户端、增加重入计数并续期。这些操作若分步执行，可能在中间状态被其他客户端打断。<br>Lua 脚本可原子化处理整个流程：</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (redis.call(<span class="string">&#x27;EXISTS&#x27;</span>, KEYS[<span class="number">1</span>]) == <span class="number">0</span>) <span class="keyword">then</span></span><br><span class="line">    <span class="comment">-- 锁不存在，创建新锁</span></span><br><span class="line">    redis.call(<span class="string">&#x27;HSET&#x27;</span>, KEYS[<span class="number">1</span>], <span class="string">&#x27;client_id&#x27;</span>, ARGV[<span class="number">1</span>], <span class="string">&#x27;reentry&#x27;</span>, <span class="number">1</span>)</span><br><span class="line">    redis.call(<span class="string">&#x27;EXPIRE&#x27;</span>, KEYS[<span class="number">1</span>], ARGV[<span class="number">2</span>])</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line"><span class="keyword">elseif</span> (redis.call(<span class="string">&#x27;HGET&#x27;</span>, KEYS[<span class="number">1</span>], <span class="string">&#x27;client_id&#x27;</span>) == ARGV[<span class="number">1</span>]) <span class="keyword">then</span></span><br><span class="line">    <span class="comment">-- 锁已存在且属于当前客户端，增加重入计数</span></span><br><span class="line">    redis.call(<span class="string">&#x27;HINCRBY&#x27;</span>, KEYS[<span class="number">1</span>], <span class="string">&#x27;reentry&#x27;</span>, <span class="number">1</span>)</span><br><span class="line">    redis.call(<span class="string">&#x27;EXPIRE&#x27;</span>, KEYS[<span class="number">1</span>], ARGV[<span class="number">2</span>])</span><br><span class="line">    <span class="keyword">return</span> <span class="number">2</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="comment">-- 锁被其他客户端持有</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>通过 Lua 脚本，可重入锁的获取逻辑在一个原子操作中完成，避免竞态条件。</p><h1 id="五、内存与性能优化"><a href="#五、内存与性能优化" class="headerlink" title="五、内存与性能优化"></a>五、内存与性能优化</h1><p>Redis 执行 Lua 脚本时会将其缓存，后续相同脚本无需重新编译，减少 CPU 开销。此外，脚本执行期间不会执行其他命令，避免锁操作被中断，提升吞吐量。</p><h1 id="六、适用场景扩展"><a href="#六、适用场景扩展" class="headerlink" title="六、适用场景扩展"></a>六、适用场景扩展</h1><p>Lua 脚本不仅适用于基础锁操作，还可实现复杂逻辑：</p><ol><li>带重试的锁获取：在脚本内实现有限次数重试，减少客户端逻辑。</li><li>条件锁释放：根据业务状态决定是否释放锁，如库存扣减成功后才释放锁。</li><li>批量锁操作：原子化处理多个锁（如获取锁 A 和锁 B），避免死锁。</li></ol><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>Lua 脚本通过原子性保证、减少网络开销、增强可靠性三大核心优势，显著提升 Redis 分布式锁在高并发场景下的性能和稳定性。在实际应用中，合理使用 Lua 脚本可将锁操作的 QPS 提升 3-5 倍，同时降低因竞态条件导致的系统故障率。</p>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试 </tag>
            
            <tag> redis </tag>
            
            <tag> redis面试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php中Redis分布式锁优化</title>
      <link href="/posts/32277a83.html"/>
      <url>/posts/32277a83.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="一、基础原理与问题分析"><a href="#一、基础原理与问题分析" class="headerlink" title="一、基础原理与问题分析"></a>一、基础原理与问题分析</h1><h2 id="1-Redis分布式锁核心问题"><a href="#1-Redis分布式锁核心问题" class="headerlink" title="1. Redis分布式锁核心问题"></a>1. Redis分布式锁核心问题</h2><p>在高并发场景下，PHP使用Redis实现分布式锁会遇到以下典型问题：</p><ol><li>锁竞争激烈：大量请求同时争抢同一个锁</li><li>锁续期困难：PHP无后台线程难以实现自动续期</li><li>锁释放风险：脚本异常退出导致死锁</li><li>性能瓶颈：频繁的Redis通信成为系统瓶颈</li></ol><h2 id="2-关键指标评估"><a href="#2-关键指标评估" class="headerlink" title="2. 关键指标评估"></a>2. 关键指标评估</h2><table><thead><tr><th>指标</th><th>阈值</th><th>监控方法</th></tr></thead><tbody><tr><td>锁等待时间</td><td>&lt; 100ms</td><td>记录获取锁耗时</td></tr><tr><td>锁持有时间</td><td>&lt; 500ms</td><td>记录业务处理时间</td></tr><tr><td>锁竞争失败率</td><td>&lt; 5%</td><td>统计失败请求比例</td></tr><tr><td>Redis QPS</td><td>&lt; 50,000</td><td>Redis监控info commands</td></tr></tbody></table><h1 id="二、优化方案"><a href="#二、优化方案" class="headerlink" title="二、优化方案"></a>二、优化方案</h1><h2 id="1-lua优化redis分布式锁"><a href="#1-lua优化redis分布式锁" class="headerlink" title="1. lua优化redis分布式锁"></a>1. lua优化redis分布式锁</h2><p><a href="/posts/a73d9edf">lua优化redis分布式锁</a> <a href="../../redis/%E6%93%8D%E4%BD%9C/lua%E4%BC%98%E5%8C%96redis%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81.md"></a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AdvancedRedisLock</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$redis</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$lockPrefix</span> = <span class="string">&#x27;lock:&#x27;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$tokenPrefix</span> = <span class="string">&#x27;token:&#x27;</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">Redis <span class="variable">$redis</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;redis = <span class="variable">$redis</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取分布式锁（带重试机制）</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $key       锁键名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> int $ttl          锁过期时间(ms)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> int $timeout      获取超时时间(ms)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> int $retryDelay   重试间隔(ms)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> array|bool       [lock_token, lock_ttl] 或 false</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">acquire</span>(<span class="params"><span class="variable">$key</span>, <span class="variable">$ttl</span> = <span class="number">3000</span>, <span class="variable">$timeout</span> = <span class="number">5000</span>, <span class="variable">$retryDelay</span> = <span class="number">100</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$startTime</span> = <span class="title function_ invoke__">microtime</span>(<span class="literal">true</span>) * <span class="number">1000</span>;</span><br><span class="line">        <span class="variable">$lockKey</span> = <span class="variable language_">$this</span>-&gt;lockPrefix . <span class="variable">$key</span>;</span><br><span class="line">        <span class="variable">$token</span> = <span class="title function_ invoke__">uniqid</span>(<span class="string">&#x27;&#x27;</span>, <span class="literal">true</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 当多个客户端同时竞争同一把锁时，只有一个客户端能成功获取锁，其他客户端需要重试。</span></span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            <span class="comment">// 使用Lua脚本保证原子性</span></span><br><span class="line">            <span class="variable">$lua</span> = <span class="string">&quot;</span></span><br><span class="line"><span class="string">                if redis.call(&#x27;SET&#x27;, KEYS[1], ARGV[1], &#x27;NX&#x27;, &#x27;PX&#x27;, ARGV[2]) then</span></span><br><span class="line"><span class="string">                    redis.call(&#x27;SET&#x27;, KEYS[2], 1, &#x27;PX&#x27;, ARGV[2])</span></span><br><span class="line"><span class="string">                    return &#123;ARGV[1], ARGV[2]&#125;</span></span><br><span class="line"><span class="string">                end</span></span><br><span class="line"><span class="string">                local token = redis.call(&#x27;GET&#x27;, KEYS[1])</span></span><br><span class="line"><span class="string">                if token == ARGV[1] then</span></span><br><span class="line"><span class="string">                    redis.call(&#x27;INCR&#x27;, KEYS[2])</span></span><br><span class="line"><span class="string">                    redis.call(&#x27;PEXPIRE&#x27;, KEYS[1], ARGV[2])</span></span><br><span class="line"><span class="string">                    redis.call(&#x27;PEXPIRE&#x27;, KEYS[2], ARGV[2])</span></span><br><span class="line"><span class="string">                    return &#123;token, redis.call(&#x27;PTTL&#x27;, KEYS[1])&#125;</span></span><br><span class="line"><span class="string">                end</span></span><br><span class="line"><span class="string">                return false</span></span><br><span class="line"><span class="string">            &quot;</span>;</span><br><span class="line">            </span><br><span class="line">            <span class="variable">$result</span> = <span class="variable language_">$this</span>-&gt;redis-&gt;<span class="keyword">eval</span>(</span><br><span class="line">                <span class="variable">$lua</span>,</span><br><span class="line">                [<span class="variable">$lockKey</span>, <span class="variable language_">$this</span>-&gt;tokenPrefix.<span class="variable">$key</span>, <span class="variable">$token</span>, <span class="variable">$ttl</span>],</span><br><span class="line">                <span class="number">2</span> <span class="comment">// 数组前2个为keys，剩余的为argv</span></span><br><span class="line">            );</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$result</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> [</span><br><span class="line">                    <span class="string">&#x27;token&#x27;</span> =&gt; <span class="variable">$result</span>[<span class="number">0</span>],</span><br><span class="line">                    <span class="string">&#x27;ttl&#x27;</span> =&gt; <span class="variable">$result</span>[<span class="number">1</span>]</span><br><span class="line">                ];</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$timeout</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="title function_ invoke__">usleep</span>(<span class="variable">$retryDelay</span> * <span class="number">1000</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">while</span> ((<span class="title function_ invoke__">microtime</span>(<span class="literal">true</span>) * <span class="number">1000</span> - <span class="variable">$startTime</span>) &lt; <span class="variable">$timeout</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 释放分布式锁</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">release</span>(<span class="params"><span class="variable">$key</span>, <span class="variable">$token</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$lua</span> = <span class="string">&quot;</span></span><br><span class="line"><span class="string">            if redis.call(&#x27;GET&#x27;, KEYS[1]) == ARGV[1] then</span></span><br><span class="line"><span class="string">                local counter = redis.call(&#x27;DECR&#x27;, KEYS[2])</span></span><br><span class="line"><span class="string">                if counter &lt;= 0 then</span></span><br><span class="line"><span class="string">                    redis.call(&#x27;DEL&#x27;, KEYS[2])</span></span><br><span class="line"><span class="string">                    return redis.call(&#x27;DEL&#x27;, KEYS[1])</span></span><br><span class="line"><span class="string">                end</span></span><br><span class="line"><span class="string">                return 1</span></span><br><span class="line"><span class="string">            end</span></span><br><span class="line"><span class="string">            return 0</span></span><br><span class="line"><span class="string">        &quot;</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;redis-&gt;<span class="keyword">eval</span>(</span><br><span class="line">            <span class="variable">$lua</span>,</span><br><span class="line">            [<span class="variable language_">$this</span>-&gt;lockPrefix.<span class="variable">$key</span>, <span class="variable language_">$this</span>-&gt;tokenPrefix.<span class="variable">$key</span>, <span class="variable">$token</span>],</span><br><span class="line">            <span class="number">2</span></span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 尝试续期</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">renew</span>(<span class="params"><span class="variable">$key</span>, <span class="variable">$token</span>, <span class="variable">$ttl</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$lua</span> = <span class="string">&quot;</span></span><br><span class="line"><span class="string">            if redis.call(&#x27;GET&#x27;, KEYS[1]) == ARGV[1] then</span></span><br><span class="line"><span class="string">                redis.call(&#x27;PEXPIRE&#x27;, KEYS[1], ARGV[2])</span></span><br><span class="line"><span class="string">                redis.call(&#x27;PEXPIRE&#x27;, KEYS[2], ARGV[2])</span></span><br><span class="line"><span class="string">                return 1</span></span><br><span class="line"><span class="string">            end</span></span><br><span class="line"><span class="string">            return 0</span></span><br><span class="line"><span class="string">        &quot;</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;redis-&gt;<span class="keyword">eval</span>(</span><br><span class="line">            <span class="variable">$lua</span>,</span><br><span class="line">            [<span class="variable language_">$this</span>-&gt;lockPrefix.<span class="variable">$key</span>, <span class="variable language_">$this</span>-&gt;tokenPrefix.<span class="variable">$key</span>, <span class="variable">$token</span>, <span class="variable">$ttl</span>],</span><br><span class="line">            <span class="number">2</span></span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-分段锁高级实现"><a href="#2-分段锁高级实现" class="headerlink" title="2. 分段锁高级实现"></a>2. 分段锁高级实现</h2><p>先读取本地锁，再加入lua优化后的分布式锁</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SegmentLockManager</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$redis</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$segments</span> = <span class="number">32</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$localLocks</span> = [];</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">Redis <span class="variable">$redis</span>, <span class="variable">$segments</span> = <span class="number">32</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;redis = <span class="variable">$redis</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;segments = <span class="variable">$segments</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getSegment</span>(<span class="params"><span class="variable">$resourceId</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">crc32</span>(<span class="variable">$resourceId</span>) % <span class="variable language_">$this</span>-&gt;segments;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">lock</span>(<span class="params"><span class="variable">$resourceId</span>, <span class="variable">$ttl</span> = <span class="number">3000</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$segment</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">getSegment</span>(<span class="variable">$resourceId</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 先尝试本地快速锁</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable language_">$this</span>-&gt;localLocks[<span class="variable">$segment</span>])) &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;localLocks[<span class="variable">$segment</span>][<span class="string">&#x27;count&#x27;</span>]++;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 获取分布式锁</span></span><br><span class="line">        <span class="variable">$lockKey</span> = <span class="string">&quot;segment:lock:<span class="subst">&#123;$segment&#125;</span>&quot;</span>;</span><br><span class="line">        <span class="variable">$token</span> = <span class="title function_ invoke__">uniqid</span>(<span class="string">&#x27;&#x27;</span>, <span class="literal">true</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="variable">$lua</span> = <span class="string">&quot;</span></span><br><span class="line"><span class="string">            if redis.call(&#x27;SET&#x27;, KEYS[1], ARGV[1], &#x27;NX&#x27;, &#x27;PX&#x27;, ARGV[2]) then</span></span><br><span class="line"><span class="string">                return 1</span></span><br><span class="line"><span class="string">            end</span></span><br><span class="line"><span class="string">            return 0</span></span><br><span class="line"><span class="string">        &quot;</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="variable">$locked</span> = <span class="variable language_">$this</span>-&gt;redis-&gt;<span class="keyword">eval</span>(<span class="variable">$lua</span>, [<span class="variable">$lockKey</span>, <span class="variable">$token</span>, <span class="variable">$ttl</span>], <span class="number">1</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$locked</span>) &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;localLocks[<span class="variable">$segment</span>] = [</span><br><span class="line">                <span class="string">&#x27;token&#x27;</span> =&gt; <span class="variable">$token</span>,</span><br><span class="line">                <span class="string">&#x27;count&#x27;</span> =&gt; <span class="number">1</span>,</span><br><span class="line">                <span class="string">&#x27;expire&#x27;</span> =&gt; <span class="title function_ invoke__">microtime</span>(<span class="literal">true</span>) + (<span class="variable">$ttl</span> / <span class="number">1000</span>)</span><br><span class="line">            ];</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">unlock</span>(<span class="params"><span class="variable">$resourceId</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$segment</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">getSegment</span>(<span class="variable">$resourceId</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable language_">$this</span>-&gt;localLocks[<span class="variable">$segment</span>])) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="variable language_">$this</span>-&gt;localLocks[<span class="variable">$segment</span>][<span class="string">&#x27;count&#x27;</span>]--;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;localLocks[<span class="variable">$segment</span>][<span class="string">&#x27;count&#x27;</span>] &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="variable">$lockKey</span> = <span class="string">&quot;segment:lock:<span class="subst">&#123;$segment&#125;</span>&quot;</span>;</span><br><span class="line">            <span class="variable">$token</span> = <span class="variable language_">$this</span>-&gt;localLocks[<span class="variable">$segment</span>][<span class="string">&#x27;token&#x27;</span>];</span><br><span class="line">            </span><br><span class="line">            <span class="variable">$lua</span> = <span class="string">&quot;</span></span><br><span class="line"><span class="string">                if redis.call(&#x27;GET&#x27;, KEYS[1]) == ARGV[1] then</span></span><br><span class="line"><span class="string">                    return redis.call(&#x27;DEL&#x27;, KEYS[1])</span></span><br><span class="line"><span class="string">                end</span></span><br><span class="line"><span class="string">                return 0</span></span><br><span class="line"><span class="string">            &quot;</span>;</span><br><span class="line">            </span><br><span class="line">            <span class="variable language_">$this</span>-&gt;redis-&gt;<span class="keyword">eval</span>(<span class="variable">$lua</span>, [<span class="variable">$lockKey</span>, <span class="variable">$token</span>], <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">unset</span>(<span class="variable language_">$this</span>-&gt;localLocks[<span class="variable">$segment</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-使用Socket通信"><a href="#3-使用Socket通信" class="headerlink" title="3. 使用Socket通信"></a>3. 使用Socket通信</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 更高效的Socket通信方式</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">redissonLock</span>(<span class="params"><span class="variable">$command</span>, <span class="variable">$lockName</span>, <span class="variable">$ttl</span> = <span class="literal">null</span></span>) </span>&#123;</span><br><span class="line"><span class="variable">$socket</span> = <span class="title function_ invoke__">fsockopen</span>(<span class="string">&#x27;redisson-service&#x27;</span>, <span class="number">12345</span>);</span><br><span class="line"><span class="keyword">if</span> (!<span class="variable">$socket</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$data</span> = [</span><br><span class="line">        <span class="string">&#x27;command&#x27;</span> =&gt; <span class="variable">$command</span>,</span><br><span class="line">        <span class="string">&#x27;lockName&#x27;</span> =&gt; <span class="variable">$lockName</span>,</span><br><span class="line">        <span class="string">&#x27;ttl&#x27;</span> =&gt; <span class="variable">$ttl</span></span><br><span class="line">    ];</span><br><span class="line">    </span><br><span class="line">    <span class="title function_ invoke__">fwrite</span>(<span class="variable">$socket</span>, <span class="title function_ invoke__">json_encode</span>(<span class="variable">$data</span>).<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="variable">$response</span> = <span class="title function_ invoke__">fgets</span>(<span class="variable">$socket</span>);</span><br><span class="line">    <span class="title function_ invoke__">fclose</span>(<span class="variable">$socket</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">json_decode</span>(<span class="variable">$response</span>)-&gt;success;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="三、替代方案集成"><a href="#三、替代方案集成" class="headerlink" title="三、替代方案集成"></a>三、替代方案集成</h1><h2 id="1-与ZooKeeper集成"><a href="#1-与ZooKeeper集成" class="headerlink" title="1. 与ZooKeeper集成"></a>1. 与ZooKeeper集成</h2><p>ZooKeeper 保持原子性的原理主要通过原子广播协议（Atomic Broadcast Protocol）和事务日志（Transaction Log）来实现。</p><ul><li>ZAB 保证原子性</li><li>事务日志是一个顺序文件，所有节点做的任务都是一样的，而且是按同样的顺序做，保证了数据的一致性</li></ul><ol><li><p>原子广播协议</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">概述：</span><br><span class="line">ZooKeeper 使用 Zab（ZooKeeper Atomic <span class="keyword">Broadcast）协议来保证分布式环境下数据的原子性。</span></span><br><span class="line"><span class="keyword"></span>在 Zab 协议中，所有的写操作都需要经过一个领导者（Leader）节点来协调和广播。</span><br><span class="line"></span><br><span class="line">工作原理：</span><br><span class="line">当一个客户端发起一个写请求时，该请求会被发送到 ZooKeeper 集群中的某个节点。</span><br><span class="line">如果这个节点是领导者，它会将这个写操作封装成一个事务，并向所有的追随者（Follower）节点广播这个事务。</span><br><span class="line">追随者节点收到事务后，会先将其写入本地的事务日志，然后向领导者发送一个确认消息。</span><br><span class="line">当领导者收到大多数追随者节点的确认消息后，它会向所有的追随者节点发送一个提交消息，通知它们可以将这个事务应用到本地的内存数据库中。</span><br><span class="line">这样，所有的节点都会以相同的顺序执行相同的事务，从而保证了数据的原子性。</span><br></pre></td></tr></table></figure></li><li><p>事务日志</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">概述：</span><br><span class="line">ZooKeeper 使用事务日志来记录所有的写操作。事务日志是一个顺序文件，每个事务在日志中都有一个唯一的编号（Zxid）。</span><br><span class="line"></span><br><span class="line">工作原理：</span><br><span class="line">当一个事务被提交时，它会被写入到事务日志中。</span><br><span class="line">在 ZooKeeper 节点启动时，它会从事务日志中读取所有的事务，并按照 Zxid 的顺序将它们应用到本地的内存数据库中。</span><br><span class="line">这样可以保证在节点重启后，能够恢复到最后一次成功提交的状态，从而保证了数据的原子性。</span><br><span class="line">同时，事务日志也可以用于在集群中进行数据同步，当一个新的节点加入集群时，它可以通过读取其他节点的事务日志来快速同步数据。</span><br></pre></td></tr></table></figure></li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ZookeeperLock</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="variable">$zk</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="variable">$path</span> = <span class="string">&#x27;/locks/&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$host</span> = <span class="string">&#x27;localhost:2181&#x27;</span>, <span class="variable">$timeout</span> = <span class="number">10000</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;zk = <span class="keyword">new</span> <span class="title class_">Zookeeper</span>(<span class="variable">$host</span>, <span class="literal">null</span>, <span class="variable">$timeout</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">lock</span>(<span class="params"><span class="variable">$name</span>, <span class="variable">$timeout</span> = <span class="number">5000</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$lockPath</span> = <span class="variable language_">$this</span>-&gt;path . <span class="variable">$name</span>;</span><br><span class="line">        <span class="variable">$startTime</span> = <span class="title function_ invoke__">microtime</span>(<span class="literal">true</span>) * <span class="number">1000</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 创建临时节点</span></span><br><span class="line">        <span class="variable">$realPath</span> = <span class="variable language_">$this</span>-&gt;zk-&gt;<span class="title function_ invoke__">create</span>(</span><br><span class="line">            <span class="variable">$lockPath</span>,</span><br><span class="line">            <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            [[<span class="string">&#x27;perms&#x27;</span> =&gt; <span class="title class_">Zookeeper</span>::<span class="variable constant_">PERM_ALL</span>, <span class="string">&#x27;scheme&#x27;</span> =&gt; <span class="string">&#x27;world&#x27;</span>, <span class="string">&#x27;id&#x27;</span> =&gt; <span class="string">&#x27;anyone&#x27;</span>]],</span><br><span class="line">            <span class="title class_">Zookeeper</span>::<span class="variable constant_">EPHEMERAL</span></span><br><span class="line">        );</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$realPath</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 等待锁释放</span></span><br><span class="line">        <span class="keyword">while</span> ((<span class="title function_ invoke__">microtime</span>(<span class="literal">true</span>) * <span class="number">1000</span> - <span class="variable">$startTime</span>) &lt; <span class="variable">$timeout</span>) &#123;</span><br><span class="line">            <span class="variable">$children</span> = <span class="variable language_">$this</span>-&gt;zk-&gt;<span class="title function_ invoke__">getChildren</span>(<span class="variable">$this</span>-&gt;path);</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable">$children</span>)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">lock</span>(<span class="variable">$name</span>, <span class="number">0</span>); <span class="comment">// 重试获取</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="title function_ invoke__">usleep</span>(<span class="number">100000</span>); <span class="comment">// 100ms</span></span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">unlock</span>(<span class="params"><span class="variable">$name</span></span>) </span>&#123;</span><br><span class="line">        <span class="comment">// ZooKeeper临时节点会自动释放</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-多级缓存锁方案"><a href="#2-多级缓存锁方案" class="headerlink" title="2. 多级缓存锁方案"></a>2. 多级缓存锁方案</h2><p>在分段式锁基础上，增加APCu共享内存锁</p><ol><li>APCu特点</li></ol><ul><li>键值对缓存<ul><li>存储任意 PHP 变量（如数组、对象、字符串）到共享内存，通过键快速访问。</li></ul></li><li>进程间共享<ul><li>所有 PHP-FPM 进程或 CLI 脚本均可访问同一份缓存数据，无需重复计算。</li></ul></li><li>自动过期机制<ul><li>支持设置缓存项的 TTL（Time-To-Live），到期自动删除，减少内存占用。</li></ul></li><li>原子操作<ul><li>提供 add()、cas()（Compare And Swap）等原子操作，避免竞态条件。</li></ul></li></ul><ol start="2"><li>优缺点</li></ol><ul><li>优点：速度极快，API 简单</li><li>缺点：仅单机有效</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MultiLevelLock</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="variable">$localLocks</span> = [];</span><br><span class="line"><span class="keyword">private</span> <span class="variable">$redisLock</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="variable">$segmentCount</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">Redis <span class="variable">$redis</span>, <span class="variable">$segmentCount</span> = <span class="number">64</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;redisLock = <span class="keyword">new</span> <span class="title class_">AdvancedRedisLock</span>(<span class="variable">$redis</span>);</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;segmentCount = <span class="variable">$segmentCount</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">lock</span>(<span class="params"><span class="variable">$resourceId</span>, <span class="variable">$ttl</span> = <span class="number">3000</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$segment</span> = <span class="title function_ invoke__">crc32</span>(<span class="variable">$resourceId</span>) % <span class="variable language_">$this</span>-&gt;segmentCount;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 第一层：进程内锁</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable language_">$this</span>-&gt;localLocks[<span class="variable">$segment</span>])) &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;localLocks[<span class="variable">$segment</span>][<span class="string">&#x27;count&#x27;</span>]++;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 第二层：共享内存锁（APCu）</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">function_exists</span>(<span class="string">&#x27;apcu_add&#x27;</span>)) &#123;</span><br><span class="line">            <span class="variable">$lockKey</span> = <span class="string">&quot;shm_lock:<span class="subst">&#123;$segment&#125;</span>&quot;</span>;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">apcu_add</span>(<span class="variable">$lockKey</span>, <span class="number">1</span>, <span class="variable">$ttl</span> / <span class="number">1000</span>)) &#123;</span><br><span class="line">                <span class="variable language_">$this</span>-&gt;localLocks[<span class="variable">$segment</span>] = [</span><br><span class="line">                    <span class="string">&#x27;count&#x27;</span> =&gt; <span class="number">1</span>,</span><br><span class="line">                    <span class="string">&#x27;shm&#x27;</span> =&gt; <span class="literal">true</span></span><br><span class="line">                ];</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 第三层：Redis分布式锁</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;redisLock-&gt;<span class="title function_ invoke__">acquire</span>(<span class="string">&quot;global:<span class="subst">&#123;$segment&#125;</span>&quot;</span>, <span class="variable">$ttl</span>)) &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;localLocks[<span class="variable">$segment</span>] = [</span><br><span class="line">                <span class="string">&#x27;count&#x27;</span> =&gt; <span class="number">1</span>,</span><br><span class="line">                <span class="string">&#x27;redis&#x27;</span> =&gt; <span class="literal">true</span></span><br><span class="line">            ];</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">unlock</span>(<span class="params"><span class="variable">$resourceId</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$segment</span> = <span class="title function_ invoke__">crc32</span>(<span class="variable">$resourceId</span>) % <span class="variable language_">$this</span>-&gt;segmentCount;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable language_">$this</span>-&gt;localLocks[<span class="variable">$segment</span>])) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="variable language_">$this</span>-&gt;localLocks[<span class="variable">$segment</span>][<span class="string">&#x27;count&#x27;</span>]--;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;localLocks[<span class="variable">$segment</span>][<span class="string">&#x27;count&#x27;</span>] &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable language_">$this</span>-&gt;localLocks[<span class="variable">$segment</span>][<span class="string">&#x27;shm&#x27;</span>])) &#123;</span><br><span class="line">                <span class="title function_ invoke__">apcu_delete</span>(<span class="string">&quot;shm_lock:<span class="subst">&#123;$segment&#125;</span>&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">elseif</span> (!<span class="keyword">empty</span>(<span class="variable language_">$this</span>-&gt;localLocks[<span class="variable">$segment</span>][<span class="string">&#x27;redis&#x27;</span>])) &#123;</span><br><span class="line">                <span class="variable language_">$this</span>-&gt;redisLock-&gt;<span class="title function_ invoke__">release</span>(<span class="string">&quot;global:<span class="subst">&#123;$segment&#125;</span>&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">unset</span>(<span class="variable language_">$this</span>-&gt;localLocks[<span class="variable">$segment</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="四、生产环境最佳实践"><a href="#四、生产环境最佳实践" class="headerlink" title="四、生产环境最佳实践"></a>四、生产环境最佳实践</h1><h2 id="1-锁监控系统实现"><a href="#1-锁监控系统实现" class="headerlink" title="1. 锁监控系统实现"></a>1. 锁监控系统实现</h2><p>监控锁超出指定时长的，进行告警</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LockMonitor</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="variable">$redis</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="variable">$channel</span> = <span class="string">&#x27;lock_monitor&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">Redis <span class="variable">$redis</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;redis = <span class="variable">$redis</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">startMonitoring</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">// 监控锁过期情况</span></span><br><span class="line">        <span class="variable language_">$this</span>-&gt;redis-&gt;<span class="title function_ invoke__">psubscribe</span>([<span class="string">&#x27;__keyevent@0__:expired&#x27;</span>], function(<span class="variable">$redis</span>, <span class="variable">$pattern</span>, <span class="variable">$channel</span>, <span class="variable">$key</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">strpos</span>(<span class="variable">$key</span>, <span class="string">&#x27;lock:&#x27;</span>) === <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">alert</span>(<span class="string">&quot;Lock expired: <span class="subst">&#123;$key&#125;</span>&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 监控死锁</span></span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">            <span class="variable">$longHeldLocks</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">checkLongHeldLocks</span>();</span><br><span class="line">            <span class="keyword">foreach</span> (<span class="variable">$longHeldLocks</span> <span class="keyword">as</span> <span class="variable">$lock</span>) &#123;</span><br><span class="line">                <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">alert</span>(<span class="string">&quot;Long held lock: <span class="subst">&#123;$lock[&#x27;key&#x27;]&#125;</span> held for <span class="subst">&#123;$lock[&#x27;duration&#x27;]&#125;</span>ms&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="title function_ invoke__">sleep</span>(<span class="number">10</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">checkLongHeldLocks</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$keys</span> = <span class="variable language_">$this</span>-&gt;redis-&gt;<span class="title function_ invoke__">keys</span>(<span class="string">&#x27;lock:*&#x27;</span>);</span><br><span class="line">        <span class="variable">$result</span> = [];</span><br><span class="line">        <span class="variable">$now</span> = <span class="title function_ invoke__">microtime</span>(<span class="literal">true</span>) * <span class="number">1000</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$keys</span> <span class="keyword">as</span> <span class="variable">$key</span>) &#123;</span><br><span class="line">            <span class="variable">$ttl</span> = <span class="variable language_">$this</span>-&gt;redis-&gt;<span class="title function_ invoke__">pttl</span>(<span class="variable">$key</span>);</span><br><span class="line">            <span class="variable">$createdAt</span> = <span class="variable">$now</span> - (<span class="variable language_">$this</span>-&gt;redis-&gt;<span class="keyword">object</span>(<span class="string">&#x27;IDLETIME&#x27;</span>, <span class="variable">$key</span>) * <span class="number">1000</span>);</span><br><span class="line">            <span class="variable">$duration</span> = <span class="variable">$now</span> - <span class="variable">$createdAt</span>;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$duration</span> &gt; <span class="number">5000</span>) &#123; <span class="comment">// 超过5秒视为长持有</span></span><br><span class="line">                <span class="variable">$result</span>[] = [</span><br><span class="line">                    <span class="string">&#x27;key&#x27;</span> =&gt; <span class="variable">$key</span>,</span><br><span class="line">                    <span class="string">&#x27;duration&#x27;</span> =&gt; <span class="variable">$duration</span></span><br><span class="line">                ];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$result</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">alert</span>(<span class="params"><span class="variable">$message</span></span>) </span>&#123;</span><br><span class="line">        <span class="comment">// 实现报警逻辑</span></span><br><span class="line">        <span class="title function_ invoke__">file_put_contents</span>(<span class="string">&#x27;/var/log/lock_monitor.log&#x27;</span>, <span class="title function_ invoke__">date</span>(<span class="string">&#x27;[Y-m-d H:i:s]&#x27;</span>) . <span class="variable">$message</span> . PHP_EOL, FILE_APPEND);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-性能优化配置"><a href="#2-性能优化配置" class="headerlink" title="2. 性能优化配置"></a>2. 性能优化配置</h3><p>Redis连接优化</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$redis</span> = <span class="keyword">new</span> <span class="title class_">Redis</span>();</span><br><span class="line"><span class="comment">// 启用持久连接</span></span><br><span class="line"><span class="variable">$redis</span>-&gt;<span class="title function_ invoke__">pconnect</span>(<span class="string">&#x27;127.0.0.1&#x27;</span>, <span class="number">6379</span>, <span class="number">2.5</span>); <span class="comment">// 2.5秒超时</span></span><br><span class="line"><span class="comment">// 设置读写超时</span></span><br><span class="line"><span class="variable">$redis</span>-&gt;<span class="title function_ invoke__">setOption</span>(<span class="title class_">Redis</span>::<span class="variable constant_">OPT_READ_TIMEOUT</span>, <span class="number">2.5</span>);</span><br><span class="line"><span class="comment">// 启用压缩</span></span><br><span class="line"><span class="variable">$redis</span>-&gt;<span class="title function_ invoke__">setOption</span>(<span class="title class_">Redis</span>::<span class="variable constant_">OPT_COMPRESSION</span>, <span class="title class_">Redis</span>::<span class="variable constant_">COMPRESSION_LZF</span>);</span><br></pre></td></tr></table></figure><p>锁参数调优建议</p><table><thead><tr><th>场景</th><th>ttl</th><th>timeout</th><th>retryDelay</th><th>segments</th></tr></thead><tbody><tr><td>短时高频操作</td><td>300ms</td><td>500ms</td><td>50ms</td><td>64</td></tr><tr><td>长时业务处理</td><td>5s</td><td>10s</td><td>200ms</td><td>16</td></tr><tr><td>秒杀场景</td><td>100ms</td><td>200ms</td><td>10ms</td><td>256</td></tr></tbody></table><h1 id="五、压测"><a href="#五、压测" class="headerlink" title="五、压测"></a>五、压测</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// lock_benchmark.php</span></span><br><span class="line"><span class="variable">$redis</span> = <span class="keyword">new</span> <span class="title class_">Redis</span>();</span><br><span class="line"><span class="variable">$redis</span>-&gt;<span class="title function_ invoke__">pconnect</span>(<span class="string">&#x27;127.0.0.1&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$lock</span> = <span class="keyword">new</span> <span class="title class_">AdvancedRedisLock</span>(<span class="variable">$redis</span>);</span><br><span class="line"><span class="variable">$start</span> = <span class="title function_ invoke__">microtime</span>(<span class="literal">true</span>);</span><br><span class="line"><span class="variable">$success</span> = <span class="number">0</span>;</span><br><span class="line"><span class="variable">$fail</span> = <span class="number">0</span>;</span><br><span class="line"><span class="variable">$concurrency</span> = <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$pool</span> = <span class="keyword">new</span> <span class="title class_">Pool</span>(<span class="variable">$concurrency</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="number">1000</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line"><span class="variable">$pool</span>-&gt;<span class="title function_ invoke__">submit</span>(<span class="keyword">new</span> <span class="keyword">class</span>(<span class="variable">$lock</span>, &amp;<span class="variable">$success</span>, &amp;<span class="variable">$fail</span>) <span class="keyword">extends</span> Thread &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$lock</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$success</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$fail</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$lock</span>, &amp;<span class="variable">$success</span>, &amp;<span class="variable">$fail</span></span>) </span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;lock = <span class="variable">$lock</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;success = &amp;<span class="variable">$success</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;fail = &amp;<span class="variable">$fail</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">run</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="variable">$result</span> = <span class="variable language_">$this</span>-&gt;lock-&gt;<span class="title function_ invoke__">acquire</span>(<span class="string">&#x27;benchmark&#x27;</span>, <span class="number">100</span>);</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$result</span>) &#123;</span><br><span class="line">                <span class="title function_ invoke__">usleep</span>(<span class="number">5000</span>); <span class="comment">// 5ms模拟业务处理</span></span><br><span class="line">                <span class="variable language_">$this</span>-&gt;lock-&gt;<span class="title function_ invoke__">release</span>(<span class="string">&#x27;benchmark&#x27;</span>, <span class="variable">$result</span>[<span class="string">&#x27;token&#x27;</span>]);</span><br><span class="line">                ++<span class="variable language_">$this</span>-&gt;success;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                ++<span class="variable language_">$this</span>-&gt;fail;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$pool</span>-&gt;<span class="title function_ invoke__">shutdown</span>();</span><br><span class="line"><span class="variable">$duration</span> = <span class="title function_ invoke__">microtime</span>(<span class="literal">true</span>) - <span class="variable">$start</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Total: &quot;</span> . (<span class="variable">$success</span> + <span class="variable">$fail</span>) . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Success: <span class="subst">$success</span>\n&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Fail: <span class="subst">$fail</span>\n&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;QPS: &quot;</span> . <span class="title function_ invoke__">round</span>((<span class="variable">$success</span> + <span class="variable">$fail</span>) / <span class="variable">$duration</span>, <span class="number">2</span>) . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Failure rate: &quot;</span> . <span class="title function_ invoke__">round</span>(<span class="variable">$fail</span> / (<span class="variable">$success</span> + <span class="variable">$fail</span>) * <span class="number">100</span>, <span class="number">2</span>) . <span class="string">&quot;%\n&quot;</span>;</span><br></pre></td></tr></table></figure><h1 id="六、性能优化矩阵"><a href="#六、性能优化矩阵" class="headerlink" title="六、性能优化矩阵"></a>六、性能优化矩阵</h1><table><thead><tr><th>优化手段</th><th>吞吐量提升</th><th>延迟降低</th><th>实现复杂度</th><th>适用场景</th></tr></thead><tbody><tr><td>Lua脚本原子操作</td><td>30%</td><td>20%</td><td>低</td><td>所有场景</td></tr><tr><td>分段锁</td><td>5-10x</td><td>60%</td><td>中</td><td>资源可分区场景</td></tr><tr><td>本地缓存+分布式锁</td><td>3-5x</td><td>70%</td><td>高</td><td>高并发读场景</td></tr><tr><td>锁等待队列</td><td>-</td><td>40%</td><td>高</td><td>公平性要求高场景</td></tr><tr><td>多级锁</td><td>2-3x</td><td>50%</td><td>高</td><td>多数据中心部署</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
            <tag> 面试 </tag>
            
            <tag> php面试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql面试</title>
      <link href="/posts/eeedb29e.html"/>
      <url>/posts/eeedb29e.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="一、事务和锁"><a href="#一、事务和锁" class="headerlink" title="一、事务和锁"></a>一、事务和锁</h1><ol><li>事务是数据库中一系列操作的集合，这些操作要么全部完成，要么全部不完成。<br>ACID 特性：</li></ol><ul><li>原子性（Atomicity） ：事务中的操作要么全部完成，要么全部不做。例如，银行转账操作，从 A 账户扣款和给 B 账户加款这两个操作要么都成功，要么都失败。</li><li>一致性（Consistency） ：事务执行前后，数据库都处于一致性状态。还是银行转账例子，事务结束后，A 账户和 B 账户的总金额应该保持不变。</li><li>隔离性（Isolation） ：并发执行的事务之间相互隔离。比如在不同隔离级别下，一个事务修改的数据在提交前对其他事务不可见（具体取决于隔离级别设置）。</li><li>持久性（Durability） ：事务一旦提交，其对数据库的改变是永久的，即使系统出现故障。</li></ul><ol start="2"><li>锁有哪些类型？它们的作用是什么？</li></ol><ul><li>表锁 ：对整张表进行锁定。在 MyISAM 存储引擎中，写操作会锁定整张表，读操作也会锁定表（但允许多个读操作同时进行）。表锁开销小，加锁快，但可能会造成较大的并发冲突。</li><li>行锁 ：只锁定满足条件的行。InnoDB 存储引擎默认使用行锁。行锁可以实现较高的并发，适用于事务处理较多的场景。例如，在更新某个用户账户余额时，只锁定该用户对应的行，允许其他用户账户的并发操作。</li><li>间隙锁 ：主要是在可重复读事务隔离级别下，为防止幻读现象出现而使用的锁。它锁定的是满足条件的行之间以及行和索引之间的间隙。例如，当在一个范围查询中（如查询年龄在 20 到 30 之间的用户），间隙锁会锁定这个范围内的间隙，防止其他事务插入新的记录导致幻读。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql面试 </tag>
            
            <tag> 面试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>redis底层原理</title>
      <link href="/posts/9c275835.html"/>
      <url>/posts/9c275835.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="一、Redis-内存管理"><a href="#一、Redis-内存管理" class="headerlink" title="一、Redis 内存管理"></a>一、Redis 内存管理</h1><p>Redis 采用两种内存分配机制：jemalloc（默认）和tcmalloc。两者都优于系统默认的 malloc，因可有效防止内存碎片化，提升多线程场景下的性能稳定性。  </p><h2 id="1-内存分配策略"><a href="#1-内存分配策略" class="headerlink" title="1. 内存分配策略"></a>1. 内存分配策略</h2><p>Redis 使用多种数据结构存储数据，每种结构根据数据大小动态调整内存占用。</p><ul><li>压缩列表（ZipList）：在 LPUSH 和 RPUSH 操作中，小块内存分配频繁。Redis 动态调整列表容量，初始容量小，元素增多时指数级扩容（如 8→16→32 字节），减少内存浪费。</li><li>哈希表（HashTable）：存储键值对时，小规模数据用紧凑内存布局。随数据增长，哈希表自动扩容，平衡内存使用与操作效率。</li></ul><p>Redis 支持手动内存清理。客户端可调用 DEL 命令删除指定键值对，或设置过期时间让 Redis 自动清理过期数据。</p><h1 id="二、Redis-数据库持久化机制"><a href="#二、Redis-数据库持久化机制" class="headerlink" title="二、Redis 数据库持久化机制"></a>二、Redis 数据库持久化机制</h1><p>Redis 提供 RDB 和 AOF 两种持久化机制，各有优劣，可结合使用以保障数据可靠性与恢复效率。</p><h2 id="1-内存快照（RDB）"><a href="#1-内存快照（RDB）" class="headerlink" title="1. 内存快照（RDB）"></a>1. 内存快照（RDB）</h2><p>RDB 通过保存内存快照实现持久化。Redis 提供两种触发方式：</p><ul><li>手动触发：SAVE 命令会阻塞当前Redis服务器，直到RDB过程完成，适合小数据量或对停顿不敏感场景。</li><li>自动触发：根据配置的保存条件自动执行。如save 900 1，表示900秒内至少1次写操作后自动保存，适用于对数据完整性和恢复时间有不同要求的生产环境。</li></ul><p>RDB 文件结构简洁，数据以二进制形式存储，占用空间较小，便于快速存储和读取，是备份和灾难恢复的首选方案。</p><h1 id="2-日志追加（AOF）"><a href="#2-日志追加（AOF）" class="headerlink" title="2. 日志追加（AOF）"></a>2. 日志追加（AOF）</h1><p>AOF 通过记录写操作命令实现持久化。Redis 提供多种持久化策略：</p><ul><li>每秒持久化（appendfsync everysec）：在生产环境中广泛应用，能在系统故障时，将数据丢失量控制在1秒内，平衡性能与数据安全性。</li><li>每次写入都持久化（appendfsync always）：极端重视数据安全的场景使用，每次写操作都同步到磁盘，避免数据丢失。</li><li>从不持久化（appendfsync no）：性能优先的场景使用，写操作仅在内存中执行，由操作系统决定数据刷新时机，数据安全性无法保证。</li></ul><p>AOF 日志文件采用文本格式，记录客户端执行的写操作，便于读取和分析，同时支持日志重写功能自动优化文件大小。但与 RDB 相比，相同数据量下 AOF 文件通常更大，恢复速度相对较慢。</p><h1 id="三、Redis-网络通信模型"><a href="#三、Redis-网络通信模型" class="headerlink" title="三、Redis 网络通信模型"></a>三、Redis 网络通信模型</h1><p>Redis 采用单线程、多路 I&#x2F;O 复用与事件驱动技术处理网络请求。其工作原理如下：</p><h2 id="1-单线程模型"><a href="#1-单线程模型" class="headerlink" title="1. 单线程模型"></a>1. 单线程模型</h2><p>Redis 的单线程模型基于文件事件处理器，处理各类网络事件。其主要特点如下：</p><ul><li>I&#x2F;O 多路复用：Redis 使用epoll（Linux）、kqueue（FreeBSD）、select等系统调用监控多个客户端连接，实现高效事件通知，使单线程能同时管理大量并发连接。</li><li>事件驱动：文件事件处理器采用IO 多路复用技术，通过注册事件监听，实现高效事件驱动机制，提升 Redis 并发性能。</li></ul><h2 id="2-多线程模型"><a href="#2-多线程模型" class="headerlink" title="2. 多线程模型"></a>2. 多线程模型</h2><p>Redis 自4.0起引入多线程I&#x2F;O，优化写回网络数据的性能瓶颈。架构如下：</p><ul><li>主线程：负责读取客户端请求。</li><li>子线程池：由io_threads_do_write配置项设置，线程数量通常与CPU核心数匹配，用于写回响应数据。</li><li>共享缓冲区：主线程读取请求后，将响应数据暂存于共享缓冲区，供子线程池写回。</li></ul><p>Redis 网络通信模型的优化方向包括利用异步IO提升读写效率、采用数据压缩减少传输量、实施流量控制策略保障稳定性。未来，Redis 将持续探索新技术如用户态网络协议栈和智能网卡，以进一步提升网络通信性能。</p><h1 id="四、Redis-数据结构实现"><a href="#四、Redis-数据结构实现" class="headerlink" title="四、Redis 数据结构实现"></a>四、Redis 数据结构实现</h1><p>Redis每种数据结构都针对不同使用场景优化，下面介绍其底层实现原理：</p><h2 id="1-字符串（String）"><a href="#1-字符串（String）" class="headerlink" title="1. 字符串（String）"></a>1. 字符串（String）</h2><ul><li>Redis字符串基于简单动态字符串（SDS）实现，结构包含长度、分配长度及内容指针，支持二进制安全数据，自动处理缓冲区溢出。</li><li>SDS 提供多种操作函数，如sdsnew、sdscat等，支持数据操作，如追加、截取等。字符串应用场景广泛，如缓存、计数器等。</li></ul><h2 id="2-哈希表（Hash）"><a href="#2-哈希表（Hash）" class="headerlink" title="2. 哈希表（Hash）"></a>2. 哈希表（Hash）</h2><ul><li>Redis哈希表底层为数组指针，初始容量8，存储大量键值对时动态扩容。</li><li>哈希表采用拉链法解决冲突，支持渐进式rehash，避免集中性能开销。适用于存储对象属性（如用户信息）。</li></ul><h2 id="3-列表（List）"><a href="#3-列表（List）" class="headerlink" title="3. 列表（List）"></a>3. 列表（List）</h2><ul><li>Redis列表由压缩列表或双向链表实现。压缩列表内存效率高，适合短列表；双向链表支持双向操作，平均时间复杂度 O(n)。</li><li>列表适用于消息队列和任务队列。</li></ul><h2 id="4-集合（Set）"><a href="#4-集合（Set）" class="headerlink" title="4. 集合（Set）"></a>4. 集合（Set）</h2><ul><li>Redis集合基于哈希表实现，通过计算哈希值判重，支持无序集合操作，平均时间复杂度 O(1)。</li><li>扩展实现为整数集合，存储整数时高效利用空间，适用于存储唯一值集合（如关注列表）。</li></ul><h2 id="5-有序集合（Sorted-Set）"><a href="#5-有序集合（Sorted-Set）" class="headerlink" title="5. 有序集合（Sorted Set）"></a>5. 有序集合（Sorted Set）</h2><ul><li>Redis有序集合在哈希表和跳表双重结构支持下，基于哈希表快速定位元素，结合跳表高效维护元素有序性。</li><li>有序集合支持范围查询，时间复杂度 O(log n)，适用于排行榜场景。</li></ul><h1 id="五、Redis-复制机制"><a href="#五、Redis-复制机制" class="headerlink" title="五、Redis 复制机制"></a>五、Redis 复制机制</h1><p>Redis 复制机制基于主从架构，主节点处理读写操作并实时同步数据至从节点，从节点只读响应，其原理如下：</p><h2 id="1-初始化复制"><a href="#1-初始化复制" class="headerlink" title="1. 初始化复制"></a>1. 初始化复制</h2><ul><li>从节点连接主节点，发送 SYNC 命令，触发全量复制：主节点生成 RDB 快照至磁盘，读取快照并发送至从节点，从节点清空旧数据并加载快照。</li><li>采用 PSYNC 命令实现部分复制：从节点记录复制偏移量及主节点 ID，网络中断后向主节点发送 PSYNC 命令请求增量更新数据。</li></ul><h2 id="2-数据同步"><a href="#2-数据同步" class="headerlink" title="2. 数据同步"></a>2. 数据同步</h2><ul><li>主节点接收写操作命令后，先写入自身数据库，再通过输出缓冲区发送给从节点，确保主从数据一致。</li><li>主节点维护复制 backlog 缓冲区，存储最近部分数据，从节点重连时可从此缓冲区获取部分缺失数据。</li></ul><h2 id="3-复制拓扑"><a href="#3-复制拓扑" class="headerlink" title="3. 复制拓扑"></a>3. 复制拓扑</h2><ul><li>Redis 支持多级复制链和多主复制结构：在多级复制链中，从节点可作为其他从节点的主节点；多主复制结构允许多个主节点并行工作，适合不同业务需求。</li><li>主节点维护复制偏移量和从节点列表，监控从节点状态并动态更新。从节点定期向主节点发送 PING 命令，超时未响应则主节点标记为断线，网络恢复后自动重连。</li></ul><h1 id="五、Redis-集群架构"><a href="#五、Redis-集群架构" class="headerlink" title="五、Redis 集群架构"></a>五、Redis 集群架构</h1><p>Redis Cluster 是 Redis 的分布式解决方案，其核心组件和机制如下：</p><h2 id="1-哈希槽"><a href="#1-哈希槽" class="headerlink" title="1.哈希槽"></a>1.哈希槽</h2><ul><li>Redis Cluster 将键映射到 16384 个哈希槽，节点负责部分槽，键通过 CRC16 算法计算归属槽，实现数据分布式存储。</li><li>哈希槽提升数据定位效率，确保数据均匀分布，便于扩展和收缩。</li></ul><h2 id="2-节点通信"><a href="#2-节点通信" class="headerlink" title="2. 节点通信"></a>2. 节点通信</h2><ul><li>节点间采用二进制协议通信，主从节点各司其职：主节点处理客户端请求，执行数据读写操作；从节点异步复制主节点数据，提升集群读取能力和故障转移能力。</li><li>节点定期交换 PING-PONG 命令，监测链路状态，更新集群配置信息，维护集群拓扑结构。</li></ul><h2 id="3-数据迁移"><a href="#3-数据迁移" class="headerlink" title="3. 数据迁移"></a>3. 数据迁移</h2><ul><li>Redis Cluster 支持在线数据迁移，需指定源和目标节点及槽号。迁移流程：命令通知→哈希指针更新→数据迁移→哈希指针清除。</li><li>数据迁移确保键的可访问性，自动重试保障可靠性，优化策略提升效率，使集群动态调整数据分布应对负载变化。</li></ul><h2 id="六、Redis-内存回收策略"><a href="#六、Redis-内存回收策略" class="headerlink" title="六、Redis 内存回收策略"></a>六、Redis 内存回收策略</h2><p>Redis 提供多种内存回收策略，应对不同内存使用压力场景：</p><h2 id="1-最近最少使用（LRU）"><a href="#1-最近最少使用（LRU）" class="headerlink" title="1. 最近最少使用（LRU）"></a>1. 最近最少使用（LRU）</h2><ul><li>LRU 算法原理：Redis 维护双向链表记录键访问顺序。访问键时移至链表头部，内存不足时释放链表尾部键。</li><li>LRU 算法应用场景：适用于大多数场景，默认配置之一，自动淘汰最久未使用的键，保障缓存更新。</li></ul><h2 id="2-最久未使用（LFU）"><a href="#2-最久未使用（LFU）" class="headerlink" title="2. 最久未使用（LFU）"></a>2. 最久未使用（LFU）</h2><ul><li>LFU 算法原理：Redis 为每个键设计计数器，衰减策略结合访问频率和时间。访问键时计数器递增，定期衰减，平衡新旧键权重。</li><li>LFU 算法应用场景：适用于高频访问键需保留的场景，如社交媒体热点，配置命令maxmemory-policy lfup。</li></ul><h2 id="3-随机淘汰"><a href="#3-随机淘汰" class="headerlink" title="3. 随机淘汰"></a>3. 随机淘汰</h2><ul><li>随机淘汰策略原理：内存超出限制时随机选择并释放键。</li><li>随机淘汰策略应用场景：适用于无明确访问模式场景，配置命令maxmemory-policy noeviction。</li></ul><h2 id="七、Redis-事务机制"><a href="#七、Redis-事务机制" class="headerlink" title="七、Redis 事务机制"></a>七、Redis 事务机制</h2><p>Redis 事务通过MULTI、EXEC、DISCARD和WATCH命令实现，提供基本事务支持：</p><h2 id="1-事务启动与执行"><a href="#1-事务启动与执行" class="headerlink" title="1. 事务启动与执行"></a>1. 事务启动与执行</h2><ul><li><p>命令序列：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">MULTI      <span class="comment"># 标识事务块开始</span></span><br><span class="line">SET key1 value1</span><br><span class="line">SET key2 value2</span><br><span class="line">EXEC      <span class="comment"># 执行事务</span></span><br></pre></td></tr></table></figure></li><li><p>Redis 事务启动后客户端请求入队，遇错误也执行，无隔离级别与回滚机制，部分失败需客户端处理。</p></li></ul><h2 id="2-乐观锁实现"><a href="#2-乐观锁实现" class="headerlink" title="2. 乐观锁实现"></a>2. 乐观锁实现</h2><p>Redis 的WATCH命令实现乐观锁：监控键变更，事务执行前检测变更，若事务执行期间键被修改，则事务取消。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">WATCH key</span><br><span class="line">... <span class="comment"># 读取和修改键的逻辑</span></span><br><span class="line">MULTI</span><br><span class="line">SET key new_value</span><br><span class="line">EXEC      <span class="comment"># 检测键变更并执行事务</span></span><br></pre></td></tr></table></figure><p>Redis 乐观锁适用于键修改不频繁场景，确保数据一致性，减少事务冲突。</p><h1 id="八、Redis-消息发布订阅"><a href="#八、Redis-消息发布订阅" class="headerlink" title="八、Redis 消息发布订阅"></a>八、Redis 消息发布订阅</h1><p>Redis 的发布&#x2F;订阅系统是基于主题的消息传递系统，适用于实时消息通知场景：</p><h2 id="1-消息发布订阅原理"><a href="#1-消息发布订阅原理" class="headerlink" title="1. 消息发布订阅原理"></a>1. 消息发布订阅原理</h2><ul><li><p>Redis 客户端执行SUBSCRIBE命令订阅频道，消息发布时 Redis 将消息发送给所有订阅客户端。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SUBSCRIBE channel1 channel2</span><br></pre></td></tr></table></figure></li><li><p>客户端执行PSUBSCRIBE命令订阅模式匹配的频道，支持通配符匹配多个频道。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PSUBSCRIBE news.*</span><br></pre></td></tr></table></figure></li></ul><h2 id="2-消息传递流程"><a href="#2-消息传递流程" class="headerlink" title="2. 消息传递流程"></a>2. 消息传递流程</h2><ul><li><p>发布者客户端调用PUBLISH命令向指定频道发送消息，Redis 遍历匹配订阅者并传递消息。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PUBLISH channel1 message</span><br></pre></td></tr></table></figure></li><li><p>Redis 的发布&#x2F;订阅系统支持模式匹配和多频道订阅，具备简单轻量、高实时性、松耦合、持久化可选、扩展性强的特点，适用于聊天室、实时通知等功能。</p></li></ul><h1 id="九、Redis-底层数据结构"><a href="#九、Redis-底层数据结构" class="headerlink" title="九、Redis 底层数据结构"></a>九、Redis 底层数据结构</h1><p>Redis 的底层数据结构包括压缩列表、双向链表、字典、跳表和整数集合。每种结构针对不同场景优化：</p><h2 id="1-压缩列表（ZipList）"><a href="#1-压缩列表（ZipList）" class="headerlink" title="1. 压缩列表（ZipList）"></a>1. 压缩列表（ZipList）</h2><ul><li>Redis 的压缩列表是一种内存高效存储方式，用于按插入顺序存储键值对集合。它通过减少指针使用，在有限内存空间内存储更多元素，提升存储效率和数据访问速度。</li><li>压缩列表采用链表形式，每个节点存数据和下一节点偏移量。节点紧密排列无间隔，元素定位需顺序遍历，时间复杂度 O(n)。适用于存储按插入顺序存取的小型键值对集合。</li></ul><h2 id="2-双向链表（LinkedList）"><a href="#2-双向链表（LinkedList）" class="headerlink" title="2. 双向链表（LinkedList）"></a>2. 双向链表（LinkedList）</h2><ul><li>Redis 的双向链表是一种线性数据结构，用于存储有序元素集合，支持双向遍历和快速插入删除操作。它由节点组成，每个节点包含指向前驱和后继节点的指针，可通过指针双向遍历，插入删除时间复杂度 O(1)。</li><li>双向链表内存占用较高，适用于需频繁插入删除元素且顺序访问的场景，如消息队列和任务队列。</li></ul><h2 id="2-字典（Dictionary）"><a href="#2-字典（Dictionary）" class="headerlink" title="2. 字典（Dictionary）"></a>2. 字典（Dictionary）</h2><ul><li>Redis 的字典是一种哈希表结构，用于存储键值对集合，支持平均时间复杂度 O(1) 的数据存取。它通过哈希函数将键映射至数组索引，处理哈希冲突采用链地址法。</li><li>字典动态扩容，负载因子达上限自动扩展，适用于存储大量键值对场景，如缓存和配置管理。</li></ul><h2 id="3-跳表（SkipList）"><a href="#3-跳表（SkipList）" class="headerlink" title="3. 跳表（SkipList）"></a>3. 跳表（SkipList）</h2><ul><li>Redis 的跳表是一种基于数组和链表的数据结构，用于存储有序元素集合，支持高效查找、插入和删除操作。它由多层链表构成，底层链表存储所有元素，上层链表加速查找。</li><li>跳表查找时间复杂度 O(log n)，插入删除 O(log n)，内存占用较高但操作效率稳定，适用于存储有序集合场景，如排行榜。</li></ul><h2 id="4-整数集合（IntSet）"><a href="#4-整数集合（IntSet）" class="headerlink" title="4. 整数集合（IntSet）"></a>4. 整数集合（IntSet）</h2><ul><li>Redis 的整数集合是一种存储整数集合的紧凑数组结构，按升序排列，支持高效存储和快速查找。初始类型为 int16_t，随元素增大自动升级至 int32_t 或 int64_t。</li><li>整数集合适用于存储整数集合场景，如标签系统和权限管理。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试 </tag>
            
            <tag> redis </tag>
            
            <tag> redis面试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>redis问题排查</title>
      <link href="/posts/c35b050e.html"/>
      <url>/posts/c35b050e.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="一、常见问题类型及排查方法"><a href="#一、常见问题类型及排查方法" class="headerlink" title="一、常见问题类型及排查方法"></a>一、常见问题类型及排查方法</h1><h2 id="1-性能问题"><a href="#1-性能问题" class="headerlink" title="1.性能问题"></a>1.性能问题</h2><p>表现 ：Redis 响应变慢，延迟增加，可能会导致客户端操作超时。<br>排查步骤</p><ol><li>使用redis-cli –latency命令检测 Redis 服务器的延迟情况，该命令会持续发送 PING 命令并测量往返时间。</li><li>查看 Redis 服务器的 CPU 和内存使用率，可通过操作系统自带的工具（如top&#96;&#96;htop命令）或 Redis 提供的INFO SERVER命令获取相关信息。</li><li>检查 Redis 是否存在慢查询操作，使用SLOWLOG GET命令查看最近执行的慢查询记录，分析慢查询的原因并进行优化。</li></ol><h2 id="2-数据问题"><a href="#2-数据问题" class="headerlink" title="2.数据问题"></a>2.数据问题</h2><p>表现 ：数据丢失、数据不一致等，比如客户端写入的数据无法正确读取，或者主从节点之间的数据不一致。<br>排查步骤</p><ol><li>检查 Redis 的持久化配置是否正确。对于 RDB 持久化，查看配置文件中的save选项是否合理设置；对于 AOF 持久化，检查appendonly选项是否开启以及appendfsync选项的配置是否合适。</li><li>对于主从复制场景，使用INFO REPLICATION命令查看主从节点的复制状态，检查从节点是否正确连接到主节点，以及复制的进度和延迟情况。同时，可以在从节点上执行SLAVEOF NO ONE命令，使其暂时脱离主节点，然后检查从节点的数据是否完整。</li></ol><h1 id="二、日志分析"><a href="#二、日志分析" class="headerlink" title="二、日志分析"></a>二、日志分析</h1><ol><li>日志位置 ：Redis 的日志通常位于 Redis 服务器的安装目录下，或者根据配置文件中的logfile选项指定的路径。默认情况下，日志可能输出到标准输出（在前台运行时）或系统日志（在后台运行时）。</li><li>日志级别 ：Redis 提供了不同的日志级别，包括debug<code>verbose</code>notice&#96;&#96;warning等。在排查问题时，可以临时将日志级别设置为更详细的级别（如debug），以便获取更多的调试信息。</li><li>日志内容分析 ：查看日志文件中的错误信息、警告信息以及客户端的连接和操作记录等。例如，日志中可能会记录客户端的 IP 地址、端口号、执行的命令、错误代码和描述等信息，通过分析这些内容可以帮助定位问题。</li></ol><h1 id="三、使用监控工具"><a href="#三、使用监控工具" class="headerlink" title="三、使用监控工具"></a>三、使用监控工具</h1><ol><li>Redis 自带的监控工具</li></ol><ul><li>redis-cli：除了用于执行 Redis 命令外，还可以通过redis-cli –stat命令实时监控 Redis 服务器的基本统计信息，如内存使用量、客户端连接数、命令执行次数等。</li><li>redis-benchmark：用于测试 Redis 服务器的性能，模拟多个客户端同时发送请求，测量 Redis 的吞吐量（每秒处理的请求数）和延迟。可以通过调整测试的参数（如并发数、请求类型等）来评估 Redis 在不同负载下的性能表现。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试 </tag>
            
            <tag> redis </tag>
            
            <tag> redis面试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>redis 缓存穿透、缓存雪崩和缓存击穿详解</title>
      <link href="/posts/1c152689.html"/>
      <url>/posts/1c152689.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="一、缓存穿透"><a href="#一、缓存穿透" class="headerlink" title="一、缓存穿透"></a>一、缓存穿透</h1><h2 id="1-1-定义"><a href="#1-1-定义" class="headerlink" title="1.1 定义"></a>1.1 定义</h2><p>缓存穿透是指客户端请求的数据既不在缓存中，也不在数据库中。每次请求都会直接访问数据库，导致数据库压力增大。<br>这种情况通常发生在恶意攻击或数据不存在时。</p><h2 id="1-2-原因"><a href="#1-2-原因" class="headerlink" title="1.2 原因"></a>1.2 原因</h2><ul><li>数据不存在：请求的数据从未被创建或已被删除。</li><li>恶意攻击：客户端故意请求不存在的数据，导致大量请求直接访问数据库。</li></ul><h2 id="1-3-影响"><a href="#1-3-影响" class="headerlink" title="1.3 影响"></a>1.3 影响</h2><ul><li>数据库压力增大：大量请求直接访问数据库，可能导致数据库过载。</li><li>系统性能下降：响应时间增加，用户体验变差。</li></ul><h2 id="1-4-解决方法"><a href="#1-4-解决方法" class="headerlink" title="1.4 解决方法"></a>1.4 解决方法</h2><h3 id="1-4-1-布隆过滤器（Bloom-Filter）"><a href="#1-4-1-布隆过滤器（Bloom-Filter）" class="headerlink" title="1.4.1 布隆过滤器（Bloom Filter）"></a>1.4.1 布隆过滤器（Bloom Filter）</h3><p>使用布隆过滤器判断数据是否存在，避免查询不存在的数据。需要安装RedisBloom模块<br>示例流程：</p><ol><li>将所有存在的数据键存储在布隆过滤器中。</li><li>客户端请求数据时，先通过布隆过滤器判断数据是否存在。</li><li>如果布隆过滤器返回不存在，则直接返回空结果，不查询数据库。</li></ol><h3 id="1-4-2-缓存空值"><a href="#1-4-2-缓存空值" class="headerlink" title="1.4.2 缓存空值"></a>1.4.2 缓存空值</h3><p>将不存在的数据也缓存一段时间，避免重复查询。  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_data_with_empty_cache</span>(<span class="params"><span class="variable">$key</span></span>) </span>&#123;</span><br><span class="line">    <span class="variable">$data</span> = redis-&gt;<span class="title function_ invoke__">get</span>(<span class="variable">$key</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$data</span> === <span class="literal">false</span>) &#123;</span><br><span class="line">        <span class="variable">$data</span> = <span class="title function_ invoke__">db_get_data</span>(<span class="variable">$key</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$data</span> === <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="comment">// 缓存空值，设置较短的过期时间</span></span><br><span class="line">            redis-&gt;<span class="title function_ invoke__">setex</span>(<span class="variable">$key</span>, <span class="number">60</span>, <span class="string">&quot;NULL&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        redis-&gt;<span class="title function_ invoke__">setex</span>(<span class="variable">$key</span>, <span class="number">300</span>, <span class="variable">$data</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$data</span> === <span class="string">&quot;NULL&quot;</span> ? <span class="literal">null</span> : <span class="variable">$data</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="二、缓存雪崩"><a href="#二、缓存雪崩" class="headerlink" title="二、缓存雪崩"></a>二、缓存雪崩</h2><h2 id="2-1-定义"><a href="#2-1-定义" class="headerlink" title="2.1 定义"></a>2.1 定义</h2><p>缓存雪崩是指大量缓存数据在同一时间过期，导致大量请求同时访问数据库，对数据库造成巨大压力。</p><h2 id="2-2-原因"><a href="#2-2-原因" class="headerlink" title="2.2 原因"></a>2.2 原因</h2><ul><li>缓存过期时间相同：多个缓存键设置相同的过期时间，导致同时失效。</li><li>系统故障：Redis 服务重启或故障恢复后，所有缓存失效。</li></ul><h2 id="2-3-影响"><a href="#2-3-影响" class="headerlink" title="2.3 影响"></a>2.3 影响</h2><ul><li>数据库压力骤增：大量请求同时访问数据库，可能导致数据库崩溃。</li><li>系统响应延迟：用户请求响应时间增加。</li></ul><h2 id="2-4-解决方法"><a href="#2-4-解决方法" class="headerlink" title="2.4 解决方法"></a>2.4 解决方法</h2><h3 id="2-4-1-设置随机过期时间"><a href="#2-4-1-设置随机过期时间" class="headerlink" title="2.4.1 设置随机过期时间"></a>2.4.1 设置随机过期时间</h3><p>为缓存键设置不同的过期时间，避免同时失效。  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">set_data_with_random_expiry</span>(<span class="params"><span class="variable">$key</span>, <span class="variable">$data</span>, <span class="variable">$base_expiry</span></span>) </span>&#123;</span><br><span class="line">    <span class="variable">$random_expiry</span> = <span class="variable">$base_expiry</span> + <span class="title function_ invoke__">rand</span>(<span class="number">0</span>, <span class="number">100</span>); <span class="comment">// 随机增加 0-100 秒</span></span><br><span class="line">    redis-&gt;<span class="title function_ invoke__">setex</span>(<span class="variable">$key</span>, <span class="variable">$random_expiry</span>, <span class="variable">$data</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-4-2-缓存预热"><a href="#2-4-2-缓存预热" class="headerlink" title="2.4.2 缓存预热"></a>2.4.2 缓存预热</h2><p>在缓存失效前，提前刷新缓存。  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_data_with_preheat</span>(<span class="params"><span class="variable">$key</span></span>) </span>&#123;</span><br><span class="line">    <span class="variable">$data</span> = redis-&gt;<span class="title function_ invoke__">get</span>(<span class="variable">$key</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$data</span> === <span class="literal">false</span>) &#123;</span><br><span class="line">        <span class="variable">$data</span> = <span class="title function_ invoke__">db_get_data</span>(<span class="variable">$key</span>);</span><br><span class="line">        redis-&gt;<span class="title function_ invoke__">setex</span>(<span class="variable">$key</span>, <span class="number">300</span>, <span class="variable">$data</span>);</span><br><span class="line">    &#125; <span class="keyword">elseif</span> (<span class="title function_ invoke__">rand</span>(<span class="number">1</span>, <span class="number">100</span>) &lt;= <span class="number">10</span>) &#123; <span class="comment">// 10% 的概率提前刷新缓存</span></span><br><span class="line">        <span class="title function_ invoke__">go</span>(function () <span class="keyword">use</span> ($<span class="title">key</span>) &#123;</span><br><span class="line">            $<span class="title">data</span> = <span class="title">db_get_data</span>($<span class="title">key</span>);</span><br><span class="line">            redis-&gt;<span class="title function_ invoke__">setex</span>(<span class="variable">$key</span>, <span class="number">300</span>, <span class="variable">$data</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$data</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="三、缓存击穿"><a href="#三、缓存击穿" class="headerlink" title="三、缓存击穿"></a>三、缓存击穿</h1><h2 id="3-1-定义"><a href="#3-1-定义" class="headerlink" title="3.1 定义"></a>3.1 定义</h2><p>缓存击穿是指热点数据的缓存过期后，多个客户端同时请求该数据，导致这些请求都击穿缓存，直接访问数据库。</p><h2 id="3-2-原因"><a href="#3-2-原因" class="headerlink" title="3.2 原因"></a>3.2 原因</h2><ul><li>热点数据过期：访问频率极高的数据缓存过期。</li><li>高并发请求：多个客户端同时请求同一个热点数据。</li></ul><h2 id="3-3-影响"><a href="#3-3-影响" class="headerlink" title="3.3 影响"></a>3.3 影响</h2><ul><li>数据库压力增大：大量请求直接访问数据库。</li><li>响应延迟：用户请求响应时间增加。</li></ul><h2 id="3-4-解决方法"><a href="#3-4-解决方法" class="headerlink" title="3.4 解决方法"></a>3.4 解决方法</h2><h3 id="3-4-1-互斥锁（Mutex-Lock）"><a href="#3-4-1-互斥锁（Mutex-Lock）" class="headerlink" title="3.4.1 互斥锁（Mutex Lock）"></a>3.4.1 互斥锁（Mutex Lock）</h3><p>使用互斥锁确保只有一个客户端更新缓存，其他客户端等待。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_data_with_mutex</span>(<span class="params"><span class="variable">$key</span></span>) </span>&#123;</span><br><span class="line">    <span class="variable">$lock_key</span> = <span class="variable">$key</span> . <span class="string">&quot;_lock&quot;</span>;</span><br><span class="line">    <span class="variable">$lock_acquired</span> = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">while</span> (!<span class="variable">$lock_acquired</span>) &#123;</span><br><span class="line">        <span class="variable">$lock_acquired</span> = (<span class="keyword">bool</span>)redis-&gt;<span class="title function_ invoke__">setnx</span>(<span class="variable">$lock_key</span>, <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$lock_acquired</span>) &#123;</span><br><span class="line">            redis-&gt;<span class="title function_ invoke__">expire</span>(<span class="variable">$lock_key</span>, <span class="number">30</span>); <span class="comment">// 设置锁的过期时间</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="title function_ invoke__">usleep</span>(<span class="number">100</span>); <span class="comment">// 短暂等待后重试</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$data</span> = redis-&gt;<span class="title function_ invoke__">get</span>(<span class="variable">$key</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$data</span> === <span class="literal">false</span>) &#123;</span><br><span class="line">        <span class="variable">$data</span> = <span class="title function_ invoke__">db_get_data</span>(<span class="variable">$key</span>);</span><br><span class="line">        redis-&gt;<span class="title function_ invoke__">setex</span>(<span class="variable">$key</span>, <span class="number">300</span>, <span class="variable">$data</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    redis-&gt;<span class="title function_ invoke__">del</span>(<span class="variable">$lock_key</span>); <span class="comment">// 释放锁</span></span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$data</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-4-2-冗余缓存"><a href="#3-4-2-冗余缓存" class="headerlink" title="3.4.2 冗余缓存"></a>3.4.2 冗余缓存</h3><p>设置两个缓存键，一个用于数据存储，一个用于过期检测。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_data_with_redundant_cache</span>(<span class="params"><span class="variable">$key</span></span>) </span>&#123;</span><br><span class="line">    <span class="variable">$check_key</span> = <span class="variable">$key</span> . <span class="string">&quot;_check&quot;</span>;</span><br><span class="line">    <span class="variable">$data</span> = redis-&gt;<span class="title function_ invoke__">get</span>(<span class="variable">$key</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$data</span> === <span class="literal">false</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (redis-&gt;<span class="title function_ invoke__">ttl</span>(<span class="variable">$check_key</span>) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="variable">$data</span> = <span class="title function_ invoke__">db_get_data</span>(<span class="variable">$key</span>);</span><br><span class="line">            redis-&gt;<span class="title function_ invoke__">setex</span>(<span class="variable">$key</span>, <span class="number">300</span>, <span class="variable">$data</span>);</span><br><span class="line">            redis-&gt;<span class="title function_ invoke__">setex</span>(<span class="variable">$check_key</span>, <span class="number">290</span>, <span class="number">1</span>); <span class="comment">// 设置较短的过期时间</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>; <span class="comment">// 返回空结果</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$data</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="四、三种问题的区别"><a href="#四、三种问题的区别" class="headerlink" title="四、三种问题的区别"></a>四、三种问题的区别</h3><table><thead><tr><th>问题</th><th>定义</th><th>原因</th><th>解决方法</th></tr></thead><tbody><tr><td>缓存穿透</td><td>请求的数据既不在缓存中，也不在数据库中</td><td>数据不存在或恶意攻击</td><td>布隆过滤器、缓存空值</td></tr><tr><td>缓存雪崩</td><td>大量缓存数据在同一时间过期</td><td>缓存过期时间相同或系统故障</td><td>设置随机过期时间、缓存预热</td></tr><tr><td>缓存击穿</td><td>热点数据的缓存过期后，多个客户端同时请求该数据</td><td>热点数据过期且高并发请求</td><td>互斥锁、冗余缓存</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试 </tag>
            
            <tag> redis </tag>
            
            <tag> redis面试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用设计模式</title>
      <link href="/posts/1e80ad29.html"/>
      <url>/posts/1e80ad29.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="一、单例模式-Singleton"><a href="#一、单例模式-Singleton" class="headerlink" title="一、单例模式 (Singleton):"></a>一、单例模式 (Singleton):</h1><p>确保一个类只有一个实例，并提供一个全局访问点。适用于需要全局管理的资源（如数据库连接）。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Singleton</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="built_in">static</span> <span class="variable">$instance</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>) </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">getInstance</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">self</span>::<span class="variable">$instance</span> == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="built_in">self</span>::<span class="variable">$instance</span> = <span class="keyword">new</span> <span class="title class_">Singleton</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">self</span>::<span class="variable">$instance</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="二、工厂模式-Factory"><a href="#二、工厂模式-Factory" class="headerlink" title="二、工厂模式 (Factory):"></a>二、工厂模式 (Factory):</h1><p>用于创建对象的接口，让子类决定实例化哪个类。适用于有多个相关类的情况。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Product</span> </span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getName</span>(<span class="params"></span>)</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ProductA</span> <span class="keyword">implements</span> <span class="title">Product</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getName</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;Product A&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ProductB</span> <span class="keyword">implements</span> <span class="title">Product</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getName</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;Product B&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ProductFactory</span> </span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">create</span>(<span class="params"><span class="variable">$type</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$type</span> == <span class="string">&#x27;A&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title function_ invoke__">ProductA</span>();</span><br><span class="line">    &#125; <span class="keyword">elseif</span> (<span class="variable">$type</span> == <span class="string">&#x27;B&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title function_ invoke__">ProductB</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Exception</span>(<span class="string">&quot;Unknown product type.&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="三、观察者模式-Observer"><a href="#三、观察者模式-Observer" class="headerlink" title="三、观察者模式 (Observer):"></a>三、观察者模式 (Observer):</h1><p>定义一个一对多的依赖关系，让多个观察者对象同时监听一个主题对象，以便主题对象状态改变时，所有依赖于它的对象都得到通知。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Subject</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="variable">$observers</span> = [];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">attach</span>(<span class="params"><span class="variable">$observer</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;observers[] = <span class="variable">$observer</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">notify</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable language_">$this</span>-&gt;observers <span class="keyword">as</span> <span class="variable">$observer</span>) &#123;</span><br><span class="line">            <span class="variable">$observer</span>-&gt;<span class="title function_ invoke__">update</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Observer</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">update</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Observer updated!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="四、策略模式-Strategy"><a href="#四、策略模式-Strategy" class="headerlink" title="四、策略模式 (Strategy):"></a>四、策略模式 (Strategy):</h1><p>定义一系列算法，将每个算法封装起来，并使它们可以互换。可以在运行时选择算法。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Strategy</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">execute</span>(<span class="params"><span class="variable">$a</span>, <span class="variable">$b</span></span>)</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ConcreteStrategyA</span> <span class="keyword">implements</span> <span class="title">Strategy</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">execute</span>(<span class="params"><span class="variable">$a</span>, <span class="variable">$b</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$a</span> + <span class="variable">$b</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ConcreteStrategyB</span> <span class="keyword">implements</span> <span class="title">Strategy</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">execute</span>(<span class="params"><span class="variable">$a</span>, <span class="variable">$b</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$a</span> * <span class="variable">$b</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Context</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="variable">$strategy</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setStrategy</span>(<span class="params">Strategy <span class="variable">$strategy</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;strategy = <span class="variable">$strategy</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">executeStrategy</span>(<span class="params"><span class="variable">$a</span>, <span class="variable">$b</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;strategy-&gt;<span class="title function_ invoke__">execute</span>(<span class="variable">$a</span>, <span class="variable">$b</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="五、适配器模式-Adapter"><a href="#五、适配器模式-Adapter" class="headerlink" title="五、适配器模式 (Adapter):"></a>五、适配器模式 (Adapter):</h1><p>将一个类的接口转换成客户希望的另一个接口。适用于需要兼容不同接口的情况。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Adaptee</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">specificRequest</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;Adaptee&#x27;s specific request.&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Adapter</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="variable">$adaptee</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">Adaptee <span class="variable">$adaptee</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;adaptee = <span class="variable">$adaptee</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">request</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;adaptee-&gt;<span class="title function_ invoke__">specificRequest</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="六、命令模式-Command"><a href="#六、命令模式-Command" class="headerlink" title="六、命令模式 (Command):"></a>六、命令模式 (Command):</h1><p>将请求封装成对象，从而使您能够使用不同的请求、队列请求和日志请求。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Command</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">execute</span>(<span class="params"></span>)</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ConcreteCommand</span> <span class="keyword">implements</span> <span class="title">Command</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="variable">$receiver</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$receiver</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;receiver = <span class="variable">$receiver</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">execute</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;receiver-&gt;<span class="title function_ invoke__">action</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Receiver</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">action</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Action executed.&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Invoker</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="variable">$command</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setCommand</span>(<span class="params">Command <span class="variable">$command</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;command = <span class="variable">$command</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">run</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;command-&gt;<span class="title function_ invoke__">execute</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> php </category>
          
          <category> 设计模式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 设计模式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php执行多线程并发</title>
      <link href="/posts/7e0668e3.html"/>
      <url>/posts/7e0668e3.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="一、PCNTL扩展（进程级并发）"><a href="#一、PCNTL扩展（进程级并发）" class="headerlink" title="一、PCNTL扩展（进程级并发）"></a>一、PCNTL扩展（进程级并发）</h1><p>适用场景：CLI环境下的任务分片处理<br>特点：</p><ul><li>真正的并行处理</li><li>进程隔离安全性高</li><li>内存无法共享（需IPC通信）<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 检查扩展是否加载</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="title function_ invoke__">function_exists</span>(<span class="string">&#x27;pcntl_fork&#x27;</span>)) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;PCNTL extension required&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$workers</span> = <span class="number">3</span>;</span><br><span class="line"><span class="variable">$tasks</span> = [<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$workers</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">    <span class="variable">$pid</span> = <span class="title function_ invoke__">pcntl_fork</span>();</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$pid</span> == -<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Fork failed&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">elseif</span> (<span class="variable">$pid</span>) &#123;</span><br><span class="line">        <span class="comment">// 父进程</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Started worker <span class="subst">$pid</span>\n&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 子进程</span></span><br><span class="line">        <span class="variable">$task</span> = <span class="variable">$tasks</span>[<span class="variable">$i</span>] ?? <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$task</span>) &#123;</span><br><span class="line">            <span class="title function_ invoke__">processTask</span>(<span class="variable">$task</span>); <span class="comment">// 执行具体任务</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">exit</span>; <span class="comment">// 必须退出子进程</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 等待所有子进程结束</span></span><br><span class="line"><span class="keyword">while</span> (<span class="title function_ invoke__">pcntl_waitpid</span>(<span class="number">0</span>, <span class="variable">$status</span>) != -<span class="number">1</span>) &#123;</span><br><span class="line">    <span class="variable">$status</span> = <span class="title function_ invoke__">pcntl_wexitstatus</span>(<span class="variable">$status</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Worker completed: Status <span class="subst">$status</span>\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">processTask</span>(<span class="params"><span class="variable">$task</span></span>) </span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">sleep</span>(<span class="title function_ invoke__">rand</span>(<span class="number">1</span>, <span class="number">3</span>));</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Processed <span class="subst">$task</span>\n&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="二、pthreads扩展（真线程）"><a href="#二、pthreads扩展（真线程）" class="headerlink" title="二、pthreads扩展（真线程）"></a>二、pthreads扩展（真线程）</h1><p>要求：ZTS（线程安全）版PHP 7.2+<br>特点：</p><ul><li>共享内存（需同步控制）</li><li>Windows&#x2F;Linux均可运行</li><li>需手动管理线程生命周期<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AsyncTask</span> <span class="keyword">extends</span> <span class="title">Thread</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$taskId</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$id</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;taskId = <span class="variable">$id</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">run</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Running task <span class="subst">&#123;$this-&gt;taskId&#125;</span>\n&quot;</span>;</span><br><span class="line">        <span class="comment">// 模拟耗时操作</span></span><br><span class="line">        <span class="title function_ invoke__">usleep</span>(<span class="title function_ invoke__">rand</span>(<span class="number">500000</span>, <span class="number">1000000</span>));</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Result_<span class="subst">&#123;$this-&gt;taskId&#125;</span>&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$threads</span> = [];</span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="number">3</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">    <span class="variable">$threads</span>[<span class="variable">$i</span>] = <span class="keyword">new</span> <span class="title class_">AsyncTask</span>(<span class="variable">$i</span>);</span><br><span class="line">    <span class="variable">$threads</span>[<span class="variable">$i</span>]-&gt;<span class="title function_ invoke__">start</span>(); <span class="comment">// 非阻塞</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$threads</span> <span class="keyword">as</span> <span class="variable">$thread</span>) &#123;</span><br><span class="line">    <span class="variable">$thread</span>-&gt;<span class="title function_ invoke__">join</span>(); <span class="comment">// 等待线程结束</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$thread</span>-&gt;<span class="title function_ invoke__">getResult</span>() . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="三、Swoole协程（推荐方案）"><a href="#三、Swoole协程（推荐方案）" class="headerlink" title="三、Swoole协程（推荐方案）"></a>三、Swoole协程（推荐方案）</h1><p>适用场景：高并发IO密集型任务<br>优势：</p><ul><li>单进程处理数千并发</li><li>协程切换零消耗</li><li>内置连接池和定时器<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Swoole\Runtime</span>::<span class="title function_ invoke__">enableCoroutine</span>(); <span class="comment">// 开启协程Hook</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$start</span> = <span class="title function_ invoke__">microtime</span>(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">go</span>(function () &#123;</span><br><span class="line"><span class="variable">$cli</span> = <span class="keyword">new</span> <span class="title class_">Swoole\Coroutine\Http\Client</span>(<span class="string">&#x27;api.example.com&#x27;</span>, <span class="number">80</span>);</span><br><span class="line"><span class="variable">$cli</span>-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;/data1&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Response1: &quot;</span>.<span class="variable">$cli</span>-&gt;body.<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">go</span>(function () &#123;</span><br><span class="line"><span class="variable">$cli</span> = <span class="keyword">new</span> <span class="title class_">Swoole\Coroutine\Http\Client</span>(<span class="string">&#x27;api.example.com&#x27;</span>, <span class="number">80</span>);</span><br><span class="line"><span class="variable">$cli</span>-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;/data2&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Response2: &quot;</span>.<span class="variable">$cli</span>-&gt;body.<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 等待所有协程完成</span></span><br><span class="line"><span class="title class_">Swoole\Event</span>::<span class="title function_ invoke__">wait</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Time: &quot;</span>.(<span class="title function_ invoke__">microtime</span>(<span class="literal">true</span>)-<span class="variable">$start</span>).<span class="string">&quot;s\n&quot;</span>;</span><br></pre></td></tr></table></figure></li></ul><h1 id="四、ReactPHP框架事件循环"><a href="#四、ReactPHP框架事件循环" class="headerlink" title="四、ReactPHP框架事件循环"></a>四、ReactPHP框架事件循环</h1><p>适用场景：异步非阻塞IO  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$loop</span> = <span class="title class_">React\EventLoop\Factory</span>::<span class="title function_ invoke__">create</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 并发HTTP请求</span></span><br><span class="line"><span class="variable">$promises</span> = [];</span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">1</span>; <span class="variable">$i</span> &lt;= <span class="number">3</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">    <span class="variable">$promises</span>[] = (<span class="keyword">new</span> <span class="title class_">React\Http\Browser</span>(<span class="variable">$loop</span>))</span><br><span class="line">        -&gt;<span class="title function_ invoke__">get</span>(<span class="string">&quot;http://example.com/api?q=<span class="subst">$i</span>&quot;</span>)</span><br><span class="line">        -&gt;<span class="title function_ invoke__">then</span>(</span><br><span class="line">            function (Psr\Http\Message\ResponseInterface <span class="variable">$response</span>) <span class="keyword">use</span> ($<span class="title">i</span>) &#123;</span><br><span class="line">                <span class="title">echo</span> &quot;<span class="title">Response</span> $<span class="title">i</span>: &quot;.$<span class="title">response</span>-&gt;<span class="title">getBody</span>().&quot;\<span class="title">n</span>&quot;;</span><br><span class="line">            &#125;</span><br><span class="line">        );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 并行执行</span></span><br><span class="line">React\Promise\<span class="title function_ invoke__">all</span>(<span class="variable">$promises</span>)-&gt;<span class="title function_ invoke__">then</span>(</span><br><span class="line">    function () &#123; <span class="keyword">echo</span> <span class="string">&quot;All done!\n&quot;</span>; &#125;</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="variable">$loop</span>-&gt;<span class="title function_ invoke__">run</span>();</span><br></pre></td></tr></table></figure><h1 id="五、Guzzle请求库异步请求"><a href="#五、Guzzle请求库异步请求" class="headerlink" title="五、Guzzle请求库异步请求"></a>五、Guzzle请求库异步请求</h1><p>适用场景：HTTP API并发调用</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">GuzzleHttp</span>\<span class="title">Client</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">GuzzleHttp</span>\<span class="title">Promise</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$client</span> = <span class="keyword">new</span> <span class="title class_">Client</span>([<span class="string">&#x27;base_uri&#x27;</span> =&gt; <span class="string">&#x27;http://api.example.com&#x27;</span>]);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 发起并发请求</span></span><br><span class="line"><span class="variable">$promises</span> = [</span><br><span class="line"><span class="string">&#x27;users&#x27;</span> =&gt; <span class="variable">$client</span>-&gt;<span class="title function_ invoke__">getAsync</span>(<span class="string">&#x27;/users&#x27;</span>),</span><br><span class="line"><span class="string">&#x27;posts&#x27;</span> =&gt; <span class="variable">$client</span>-&gt;<span class="title function_ invoke__">getAsync</span>(<span class="string">&#x27;/posts&#x27;</span>)</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 等待所有请求完成</span></span><br><span class="line"><span class="variable">$results</span> = <span class="title class_">Promise\Utils</span>::<span class="title function_ invoke__">settle</span>(<span class="variable">$promises</span>)-&gt;<span class="title function_ invoke__">wait</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$results</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$response</span>) &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;<span class="subst">$key</span>: &quot;</span>.<span class="variable">$response</span>[<span class="string">&#x27;value&#x27;</span>]-&gt;<span class="title function_ invoke__">getBody</span>().<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="六、方案对比与选型"><a href="#六、方案对比与选型" class="headerlink" title="六、方案对比与选型"></a>六、方案对比与选型</h1><table><thead><tr><th>方案</th><th>并发模型</th><th>内存隔离</th><th>适用场景</th><th>性能</th></tr></thead><tbody><tr><td>PCNTL</td><td>多进程</td><td>完全隔离</td><td>CPU密集型任务</td><td>高（真并行）</td></tr><tr><td>pthreads</td><td>多线程</td><td>共享内存</td><td>计算+IO混合任务</td><td>高（需同步）</td></tr><tr><td>Swoole</td><td>协程</td><td>共享内存</td><td>高并发IO操作</td><td>极高</td></tr><tr><td>ReactPHP</td><td>事件循环</td><td>单线程</td><td>异步非阻塞任务</td><td>中</td></tr><tr><td>Guzzle异步</td><td>HTTP并发</td><td>单线程</td><td>API聚合调用</td><td>中</td></tr></tbody></table><h1 id="七、最佳实践建议"><a href="#七、最佳实践建议" class="headerlink" title="七、最佳实践建议"></a>七、最佳实践建议</h1><ul><li>CPU密集型：优先选择PCNTL或多进程模式</li><li>IO密集型：使用Swoole协程或ReactPHP</li><li>HTTP请求：Guzzle异步方案最简单</li></ul>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> php </category>
          
          <category> 业务 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
            <tag> 面试 </tag>
            
            <tag> php面试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php特性JIT</title>
      <link href="/posts/75f8cdd8.html"/>
      <url>/posts/75f8cdd8.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><p>PHP 的 JIT（Just-In-Time Compiler）是 PHP 8.0 引入的核心特性，旨在通过运行时编译热点代码（频繁执行的代码段）为机器码，显著提升计算密集型任务的性能</p><h1 id="一、JIT-的工作原理"><a href="#一、JIT-的工作原理" class="headerlink" title="一、JIT 的工作原理"></a>一、JIT 的工作原理</h1><h2 id="1-代码执行流程优化"><a href="#1-代码执行流程优化" class="headerlink" title="1. 代码执行流程优化"></a>1. 代码执行流程优化</h2><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">PHP</span> 传统执行流程分为词法分析（Tokenizing）、语法分析（Parsing）、生成中间码（Opcodes），</span><br><span class="line">最后由 Zend 虚拟机（Zend VM）逐行解释执行。</span><br></pre></td></tr></table></figure><p>JIT 在此流程中插入动态编译环节：</p><ul><li>热点代码识别：Zend 引擎监控执行频率高的代码段（如循环、递归）。</li><li>机器码生成：通过 DynASM 库将 Opcodes 转换为 CPU 指令，绕过 Zend VM 直接执行。</li><li>缓存机制：编译后的机器码存入共享内存，供后续请求复用。</li></ul><h2 id="2-类型推断挑战"><a href="#2-类型推断挑战" class="headerlink" title="2. 类型推断挑战"></a>2. 类型推断挑战</h2><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PHP 是弱类型语言，变量类型在运行时才能确定。<span class="keyword">JIT </span>需动态分析代码路径，结合运行时类型信息生成高效机器码，但过度推断可能增加编译开销。</span><br></pre></td></tr></table></figure><h1 id="二、性能提升与适用场景"><a href="#二、性能提升与适用场景" class="headerlink" title="二、性能提升与适用场景"></a>二、性能提升与适用场景</h1><ol><li>性能提升范围</li></ol><ul><li>计算密集型任务：如数学运算、图像处理，性能提升可达数倍（例如斐波那契数列计算）。<ul><li>将热点代码（频繁执行的代码段）动态编译为机器码，绕过解释执行，提升计算密集型任务效率（如 PHP 的 JIT 可提升 30% 以上性能）。</li></ul></li><li>IO 密集型应用：因瓶颈在磁盘&#x2F;网络操作，JIT 效果有限。</li><li>函数调用优化：支持内联函数调用，减少栈帧操作开销。<ul><li>根据运行时状态生成针对性优化的机器指令（如内联函数、寄存器分配），优于静态编译的事前优化</li></ul></li><li>选择性编译热点代码，减少编译时间和内存占用</li></ul><ol start="2"><li>实际案例<br>示例代码启用 JIT 后递归计算 fibonacci(35) 时间缩短 50% 以上：<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&#x27;opcache.jit&#x27;</span>, <span class="string">&#x27;tracing&#x27;</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fibonacci</span>(<span class="params"><span class="variable">$n</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (<span class="variable">$n</span> &lt;= <span class="number">1</span>) ? <span class="variable">$n</span> : <span class="title function_ invoke__">fibonacci</span>(<span class="variable">$n</span>-<span class="number">1</span>) + <span class="title function_ invoke__">fibonacci</span>(<span class="variable">$n</span>-<span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 执行时间显著减少:cite[3]:cite[4]。</span></span><br></pre></td></tr></table></figure></li></ol><h1 id="三、配置与优化策略"><a href="#三、配置与优化策略" class="headerlink" title="三、配置与优化策略"></a>三、配置与优化策略</h1><ol><li>核心配置参数</li></ol><ul><li>启用 JIT：opcache.jit&#x3D;tracing（默认模式）或 function。</li><li>缓冲区大小：opcache.jit_buffer_size&#x3D;256M（根据内存调整）。</li><li>调试模式：opcache.jit_debug&#x3D;1 输出编译后的汇编代码。</li></ul><ol start="2"><li>代码优化建议</li></ol><ul><li>严格类型声明：帮助 JIT 推断变量类型，例如使用 declare(strict_types&#x3D;1) 和参数类型注解。</li><li>避免动态特性：如魔术方法、eval()，减少类型不确定性。</li></ul><h1 id="四、局限性及注意事项"><a href="#四、局限性及注意事项" class="headerlink" title="四、局限性及注意事项"></a>四、局限性及注意事项</h1><ol><li><p>内存与编译开销<br>JIT 编译需占用额外内存（默认缓冲区 64MB），且编译过程可能增加初始延迟。</p></li><li><p>调试复杂性<br>编译后的机器码无法通过传统调试器跟踪，需依赖日志和性能分析工具。</p></li><li><p>适用场景限制</p><ul><li>Web 应用：多数受限于 IO 操作，性能提升有限。</li><li>小型脚本：编译开销可能抵消执行加速效果1。</li></ul></li></ol><h1 id="五、总结"><a href="#五、总结" class="headerlink" title="五、总结"></a>五、总结</h1><p>PHP 的 JIT 通过动态编译技术为计算密集型任务带来显著性能提升，但需结合代码优化和合理配置。对于多数 Web 应用，建议优先优化数据库查询、缓存策略，而非过度依赖 JIT</p>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> php </category>
          
          <category> 原理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
            <tag> 面试 </tag>
            
            <tag> php面试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php底层原理</title>
      <link href="/posts/9f50d3de.html"/>
      <url>/posts/9f50d3de.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="一、四层体系架构"><a href="#一、四层体系架构" class="headerlink" title="一、四层体系架构"></a>一、四层体系架构</h1><p>PHP采用分层设计，由下至上分为四层，形成高效可扩展的运行框架：</p><h2 id="1-Zend引擎"><a href="#1-Zend引擎" class="headerlink" title="1.Zend引擎"></a>1.Zend引擎</h2><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">PHP</span>的核心，用纯<span class="built_in">C</span>实现，负责词法<span class="operator">/</span>语法解析、编译生成<span class="variable">opcode</span>、内存管理及提供基础<span class="variable">API</span></span><br><span class="line">实现了哈希表、对象模型等核心数据结构，支撑<span class="variable">PHP</span>的弱类型特性</span><br><span class="line">最新版本（如<span class="variable">PHP</span> <span class="number">8.3</span>）引入<span class="variable">JIT</span>编译技术，显著提升执行效率</span><br></pre></td></tr></table></figure><h2 id="2-Extensions组件层"><a href="#2-Extensions组件层" class="headerlink" title="2.Extensions组件层"></a>2.Extensions组件层</h2><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">通过模块化扩展提供标准库功能（如数组操作、文件处理等）</span><br><span class="line">开发者可编写<span class="built_in">C</span>扩展实现性能敏感功能（如加密算法、协议解析）</span><br></pre></td></tr></table></figure><h2 id="2-SAPI层（服务器抽象接口）"><a href="#2-SAPI层（服务器抽象接口）" class="headerlink" title="2.SAPI层（服务器抽象接口）"></a>2.SAPI层（服务器抽象接口）</h2><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">隔离<span class="variable">Web</span>服务器与<span class="variable">PHP</span>核心，支持多种运行模式：</span><br><span class="line"><span class="variable">FPM</span>（<span class="variable">FastCGI</span> <span class="variable">Process</span> <span class="variable">Manager</span>）：主流生产环境方案，支持进程池管理</span><br><span class="line"><span class="variable">CLI</span>：命令行脚本执行</span><br><span class="line"><span class="variable">Embedded</span>：嵌入<span class="built_in">C</span><span class="operator">/</span><span class="built_in">C</span><span class="operator">++</span>应用</span><br></pre></td></tr></table></figure><h2 id="3-应用层"><a href="#3-应用层" class="headerlink" title="3.应用层"></a>3.应用层</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">开发者编写的业务代码，通过SAPI与下层交互</span><br></pre></td></tr></table></figure><h1 id="二、执行流程与Opcode机制"><a href="#二、执行流程与Opcode机制" class="headerlink" title="二、执行流程与Opcode机制"></a>二、执行流程与Opcode机制</h1><p>PHP代码的执行经历三个阶段，体现解释型语言特性：</p><h2 id="1-编译阶段"><a href="#1-编译阶段" class="headerlink" title="1.编译阶段"></a>1.编译阶段</h2><ul><li>词法分析：将源码转换为Token流（如$a&#x3D;1分解为变量、运算符、常量）</li><li>语法分析：构建抽象语法树（AST）</li><li>生成Opcode：将AST编译为中间指令集，如：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ZEND_ASSIGN_SPEC_CV_CONST_HANDLER  <span class="comment">// $a=1</span></span><br><span class="line">ZEND_ADD_SPEC_CV_CV_HANDLER        <span class="comment">// $c=$a+$b</span></span><br></pre></td></tr></table></figure><h2 id="2-执行阶段"><a href="#2-执行阶段" class="headerlink" title="2.执行阶段"></a>2.执行阶段</h2><ul><li>Zend虚拟机逐条执行Opcode，调用对应的C函数</li><li>PHP 8引入的JIT会将热点代码编译为机器码直接执行，性能提升可达30% <a href="/posts/75f8cdd8">php特性JIT</a> <a href="php%E7%89%B9%E6%80%A7JIT.md"></a></li></ul><h2 id="3-缓存优化"><a href="#3-缓存优化" class="headerlink" title="3.缓存优化"></a>3.缓存优化</h2><ul><li>Opcache扩展将编译结果缓存在共享内存，避免重复解析（默认开启于PHP 5.5+）</li><li>典型配置：<figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">opcache.enable</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">opcache.memory_consumption</span>=<span class="number">128</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="三、核心数据结构设计"><a href="#三、核心数据结构设计" class="headerlink" title="三、核心数据结构设计"></a>三、核心数据结构设计</h1><p>PHP的高效运行依赖两大底层结构：</p><h2 id="1-HashTable（哈希表）"><a href="#1-HashTable（哈希表）" class="headerlink" title="1. HashTable（哈希表）"></a>1. HashTable（哈希表）</h2><ul><li>实现PHP数组、类属性表等核心功能</li><li>采用”链地址法”解决哈希冲突，结构包含：<ul><li>散列桶数组：快速定位元素（时间复杂度O(1)）</li><li>双向链表：支持顺序遍历（foreach操作）</li></ul></li><li>动态扩容策略：当元素数超过当前容量75%时，容量翻倍重建哈希表</li></ul><h2 id="2-zval变量容器"><a href="#2-zval变量容器" class="headerlink" title="2.zval变量容器"></a>2.zval变量容器</h2><ul><li>存储变量值的结构体：<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> _<span class="title">zval_struct</span> &#123;</span></span><br><span class="line">zend_value value;    <span class="comment">// 实际值（联合体）</span></span><br><span class="line">  <span class="class"><span class="keyword">union</span> &#123;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    zend_uchar type;     <span class="comment">// 当前类型</span></span><br><span class="line">    zend_uchar type_flags;</span><br><span class="line">    <span class="type">uint32_t</span> refcount;   <span class="comment">// 引用计数</span></span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li><li>支持自动类型转换：当进行$a&#x3D;1; $a&#x3D;”text”时，zval类型标记从IS_LONG变为IS_STRING</li><li>引用计数机制实现写时复制（Copy-On-Write），减少内存消耗</li></ul><h1 id="四、内存管理与进程模型"><a href="#四、内存管理与进程模型" class="headerlink" title="四、内存管理与进程模型"></a>四、内存管理与进程模型</h1><h2 id="1-内存分配"><a href="#1-内存分配" class="headerlink" title="1.内存分配"></a>1.内存分配</h2><ul><li>采用基于池（Pool）的分配策略，减少频繁调用malloc的性能损耗</li><li>垃圾回收（GC）机制：<ul><li>引用计数为主，周期回收算法为辅</li><li>当refcount&#x3D;0或检测到循环引用时自动释放内存</li></ul></li></ul><h2 id="2-并发处理模型"><a href="#2-并发处理模型" class="headerlink" title="2.并发处理模型"></a>2.并发处理模型</h2><ul><li>传统多进程模型：每个请求独立进程，避免内存泄漏影响全局（PHP-FPM默认模式）</li><li>多线程支持：通过ZTS（Zend Thread Safety）模式启用，需谨慎处理全局变量</li><li>协程方案：Swoole等扩展实现异步非阻塞IO，适用于高并发场景</li></ul><h1 id="五、性能优化实践"><a href="#五、性能优化实践" class="headerlink" title="五、性能优化实践"></a>五、性能优化实践</h1><p>1.Opcode缓存：确保Opcache启用并合理配置内存大小<br>2.JIT调优：针对计算密集型场景启用JIT（如opcache.jit&#x3D;1235）<br>3.数据结构选择：</p><ul><li>关联数组改用SplFixedArray（索引数组）可提升30%访问速度，相比较数组优势：<ul><li>元素类型检查： SplFixedArray 允许指定元素的类型，有助于确保数据的一致性和可靠性。</li><li>类型安全： 元素访问是类型安全的，强制执行声明的类型。这可以防止意外数据类型转换，提高代码的可维护性和安全性。</li><li>跨进程共享： SplFixedArray 对象可以跨进程共享，在需要在多个进程之间传递或访问数据时非常有用。</li><li>数据量大且已知： 对于具有大量预定义大小的数据集，SplFixedArray 可以更有效地管理内存。</li></ul></li><li>大数组优先使用生成器（Generator）减少内存占用<br>4.扩展开发：</li><li>使用Zephir语言编写高性能扩展（如Phalcon框架）</li><li>通过FFI调用C库函数（PHP 7.4+特性）</li></ul>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> php </category>
          
          <category> 原理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
            <tag> 面试 </tag>
            
            <tag> php面试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>redis消息订阅</title>
      <link href="/posts/589cfa0.html"/>
      <url>/posts/589cfa0.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="Controller-newSubscript"><a href="#Controller-newSubscript" class="headerlink" title="Controller\newSubscript"></a>Controller\newSubscript</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">redis</span>\<span class="title class_">Controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">newSubscript</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span> (<span class="params"><span class="variable">$redis</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$redis</span> = <span class="keyword">new</span> <span class="title class_">\Redis</span>();</span><br><span class="line">        <span class="variable">$redis</span>-&gt;<span class="title function_ invoke__">connect</span>(<span class="string">&#x27;127.0.0.1&#x27;</span>, <span class="number">6379</span>);</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;redis = <span class="variable">$redis</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建聊天</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $sender 发送者</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> array $recipients 接收者</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $message 信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> null $char_id 聊天室ID</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">create_chat</span> (<span class="params"><span class="keyword">string</span> <span class="variable">$sender</span>,<span class="keyword">array</span> <span class="variable">$recipients</span>, <span class="keyword">string</span> <span class="variable">$message</span>,<span class="keyword">int</span> <span class="variable">$char_id</span> = <span class="literal">null</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$char_id</span> = <span class="variable">$char_id</span> ?? <span class="variable language_">$this</span>-&gt;redis-&gt;<span class="title function_ invoke__">incr</span>(<span class="string">&#x27;ids:chat:&#x27;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$recipients</span> = <span class="title function_ invoke__">array_push</span>(<span class="variable">$recipients</span>, <span class="variable">$sender</span>);</span><br><span class="line">        <span class="variable">$pipeline</span> = <span class="variable language_">$this</span>-&gt;redis-&gt;<span class="title function_ invoke__">multi</span>(<span class="title class_">\Redis</span>::<span class="variable constant_">PIPELINE</span>);</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$recipients</span> <span class="keyword">as</span> <span class="variable">$recipient</span>) &#123;</span><br><span class="line">            <span class="variable">$pipeline</span>-&gt;<span class="title function_ invoke__">zAdd</span>(<span class="string">&#x27;chat:&#x27;</span> . <span class="variable">$char_id</span>, <span class="number">0</span>, <span class="variable">$recipient</span>); <span class="comment">// 群组有序集和</span></span><br><span class="line">            <span class="variable">$pipeline</span>-&gt;<span class="title function_ invoke__">zAdd</span>(<span class="string">&#x27;seen:&#x27;</span> . <span class="variable">$recipient</span>, <span class="number">0</span>, <span class="variable">$char_id</span>); <span class="comment">// 已读有序集和</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$pipeline</span>-&gt;<span class="title function_ invoke__">exec</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">send_message</span>(<span class="variable">$char_id</span>, <span class="variable">$sender</span>, <span class="variable">$message</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 发送信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $char_id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $sender</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $message</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> mixed</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">send_message</span> (<span class="params"><span class="variable">$char_id</span>, <span class="variable">$sender</span>, <span class="variable">$message</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            <span class="variable">$mid</span> = <span class="variable language_">$this</span>-&gt;redis-&gt;<span class="title function_ invoke__">incr</span>(<span class="string">&#x27;ids:chat:&#x27;</span> . <span class="variable">$char_id</span>);</span><br><span class="line">            <span class="variable">$ts</span> = <span class="title function_ invoke__">time</span>();</span><br><span class="line">            <span class="variable">$packed</span> = [</span><br><span class="line">                <span class="string">&#x27;id&#x27;</span> =&gt; <span class="variable">$mid</span>,</span><br><span class="line">                <span class="string">&#x27;ts&#x27;</span> =&gt; <span class="variable">$ts</span>,</span><br><span class="line">                <span class="string">&#x27;sender&#x27;</span> =&gt; <span class="variable">$sender</span>,</span><br><span class="line">                <span class="string">&#x27;message&#x27;</span> =&gt; <span class="variable">$message</span></span><br><span class="line">            ];</span><br><span class="line"></span><br><span class="line">            <span class="variable language_">$this</span>-&gt;redis-&gt;<span class="title function_ invoke__">zAdd</span>(<span class="string">&#x27;msgs:&#x27;</span> . <span class="variable">$char_id</span>, <span class="variable">$mid</span>, <span class="title function_ invoke__">json_encode</span>(<span class="variable">$packed</span>));</span><br><span class="line">        &#125;<span class="keyword">catch</span>(\<span class="built_in">Exception</span> <span class="variable">$e</span>)&#123;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="comment">// pass</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$char_id</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">fetch_pending_message</span> (<span class="params"><span class="variable">$recipient</span></span>) </span>&#123;</span><br><span class="line">        <span class="comment">// 获取最后一条信息</span></span><br><span class="line">        <span class="variable">$seen</span> = <span class="variable language_">$this</span>-&gt;redis-&gt;<span class="title function_ invoke__">zRange</span>(<span class="string">&#x27;seen:&#x27;</span> . <span class="variable">$recipient</span>, <span class="number">0</span>, -<span class="number">1</span>, <span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$pipeline</span> = <span class="variable language_">$this</span>-&gt;redis-&gt;<span class="title function_ invoke__">multi</span>(<span class="title class_">\Redis</span>::<span class="variable constant_">PIPELINE</span>);</span><br><span class="line">        <span class="comment">// 获取所有未读信息</span></span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$seen</span> <span class="keyword">as</span> <span class="variable">$chat_id</span> =&gt; <span class="variable">$seen_id</span>) &#123;</span><br><span class="line">            <span class="variable">$pipeline</span>-&gt;<span class="title function_ invoke__">zRangeByScore</span>(<span class="string">&#x27;msgs:&#x27;</span> . <span class="variable">$chat_id</span>, <span class="variable">$seen_id</span> + <span class="number">1</span>, <span class="string">&#x27;+inf&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$msgsList</span> = <span class="variable">$pipeline</span>-&gt;<span class="title function_ invoke__">exec</span>();</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$msgsList</span> <span class="keyword">as</span> <span class="variable">$msgsItem</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable">$msgsItem</span>)) <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//            $packed = [</span></span><br><span class="line"><span class="comment">//                &#x27;id&#x27; =&gt; $mid,</span></span><br><span class="line"><span class="comment">//                &#x27;ts&#x27; =&gt; $ts,</span></span><br><span class="line"><span class="comment">//                &#x27;sender&#x27; =&gt; $sender,</span></span><br><span class="line"><span class="comment">//                &#x27;message&#x27; =&gt; $message</span></span><br><span class="line"><span class="comment">//            ];</span></span><br><span class="line">            <span class="variable">$chat_id</span> = <span class="variable">$msgsItem</span>[<span class="string">&#x27;id&#x27;</span>];</span><br><span class="line">            <span class="variable">$sender</span> = <span class="variable">$msgsItem</span>[<span class="string">&#x27;sender&#x27;</span>];</span><br><span class="line">            <span class="variable">$message</span> = <span class="variable">$msgsItem</span>[<span class="string">&#x27;message&#x27;</span>];</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;redis-&gt;<span class="title function_ invoke__">zAdd</span>(<span class="string">&#x27;chat:&#x27;</span> . <span class="variable">$chat_id</span>, <span class="variable">$recipient</span>, <span class="variable">$seen_id</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Controller-subscribe"><a href="#Controller-subscribe" class="headerlink" title="Controller\subscribe"></a>Controller\subscribe</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">redis</span>\<span class="title class_">Controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * redis消息订阅</span></span><br><span class="line"><span class="comment"> * Class subscribe</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">subscribe</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$redis</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;redis = <span class="variable">$redis</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 分布消息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $msgList</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">publisher</span> (<span class="params"><span class="keyword">array</span> <span class="variable">$msgList</span></span>) </span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">sleep</span>(<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$msgList</span> <span class="keyword">as</span> <span class="variable">$msgItem</span>) &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;redis-&gt;<span class="title function_ invoke__">publish</span>(<span class="variable">$msgItem</span>[<span class="string">&#x27;channel&#x27;</span>], <span class="variable">$msgItem</span>[<span class="string">&#x27;info&#x27;</span>]);</span><br><span class="line">            <span class="title function_ invoke__">sleep</span>(<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 订阅与推送</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> array $channel</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">run_pubsub</span> (<span class="params"><span class="keyword">array</span> <span class="variable">$channel</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$pubsub</span> = <span class="variable language_">$this</span>-&gt;redis-&gt;<span class="title function_ invoke__">subscribe</span>(<span class="variable">$channel</span>, [<span class="variable">$this</span>, <span class="string">&#x27;callback&#x27;</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 回调函数,这里写处理逻辑</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">callback</span>(<span class="params"><span class="variable">$instance</span>, <span class="variable">$channelName</span>, <span class="variable">$message</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$channelName</span>, <span class="string">&quot;==&gt;&quot;</span>, <span class="variable">$message</span>,PHP_EOL;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="消息发送和订阅"><a href="#消息发送和订阅" class="headerlink" title="消息发送和订阅"></a>消息发送和订阅</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">use</span> <span class="title">redis</span>\<span class="title">Controller</span>;</span><br><span class="line"><span class="keyword">require_once</span> <span class="title function_ invoke__">dirname</span>(<span class="keyword">__DIR__</span>) . <span class="string">&#x27;/Controller/Subscript.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$redis</span> = <span class="keyword">new</span> <span class="title class_">Redis</span>();</span><br><span class="line"><span class="variable">$redis</span>-&gt;<span class="title function_ invoke__">connect</span>(<span class="string">&#x27;127.0.0.1&#x27;</span>, <span class="number">6379</span>);</span><br><span class="line"><span class="variable">$subClass</span> = <span class="keyword">new</span> \redis\Controller\<span class="title function_ invoke__">Subscribe</span>(<span class="variable">$redis</span>);</span><br><span class="line"><span class="variable">$subClass</span>-&gt;<span class="title function_ invoke__">run_pubsub</span>([<span class="string">&#x27;cat&#x27;</span>]);</span><br></pre></td></tr></table></figure><h1 id="发布消息"><a href="#发布消息" class="headerlink" title="发布消息"></a>发布消息</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">use</span> <span class="title">redis</span>\<span class="title">Controller</span>;</span><br><span class="line"><span class="keyword">require_once</span> <span class="title function_ invoke__">dirname</span>(<span class="keyword">__DIR__</span>) . <span class="string">&#x27;/Controller/Subscript.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$redis</span> = <span class="keyword">new</span> <span class="title class_">Redis</span>();</span><br><span class="line"><span class="variable">$redis</span>-&gt;<span class="title function_ invoke__">connect</span>(<span class="string">&#x27;127.0.0.1&#x27;</span>, <span class="number">6379</span>);</span><br><span class="line"><span class="variable">$subClass</span> = <span class="keyword">new</span> \redis\Controller\<span class="title function_ invoke__">Subscribe</span>(<span class="variable">$redis</span>);</span><br><span class="line"><span class="variable">$subClass</span>-&gt;<span class="title function_ invoke__">publisher</span>([[<span class="string">&#x27;channel&#x27;</span>=&gt;<span class="string">&#x27;cat&#x27;</span>, <span class="string">&#x27;info&#x27;</span>=&gt;<span class="string">&#x27;thisofcat&#x27;</span>], [<span class="string">&#x27;channel&#x27;</span>=&gt;<span class="string">&#x27;cat&#x27;</span>, <span class="string">&#x27;info&#x27;</span>=&gt;<span class="string">&#x27;info&#x27;</span>]]);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>在分布式系统中保持PHP会话一致性的方法</title>
      <link href="/posts/d51ea391.html"/>
      <url>/posts/d51ea391.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="一、核心解决方案"><a href="#一、核心解决方案" class="headerlink" title="一、核心解决方案"></a>一、核心解决方案</h1><h2 id="1-集中式会话存储（推荐方案）"><a href="#1-集中式会话存储（推荐方案）" class="headerlink" title="1. 集中式会话存储（推荐方案）"></a>1. 集中式会话存储（推荐方案）</h2><p>   将会话数据存储在共享的中央存储系统中，所有节点通过统一接口访问。</p><p>方案对比：</p><table><thead><tr><th>存储类型</th><th>优点</th><th>缺点</th><th>适用场景</th></tr></thead><tbody><tr><td>Redis集群</td><td>高性能、高可用、自动分片</td><td>需要额外维护基础设施</td><td>中大型高并发系统</td></tr><tr><td>Memcached</td><td>简单快速</td><td>无持久化、无集群原生支持</td><td>中小型临时会话系统</td></tr><tr><td>MySQL</td><td>强一致性、事务支持</td><td>性能瓶颈、扩展复杂</td><td>数据敏感型系统</td></tr></tbody></table><p>Redis集群配置示例：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// php.ini 配置</span></span><br><span class="line">session.save_handler = redis</span><br><span class="line">session.save_path = <span class="string">&quot;tcp://redis1:6379,tcp://redis2:6379?auth=your_password&amp;timeout=2&amp;cluster=1&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 动态配置（代码中）</span></span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&#x27;session.save_handler&#x27;</span>, <span class="string">&#x27;redis&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&#x27;session.save_path&#x27;</span>, <span class="string">&#x27;tcp://redis-cluster:6379?auth=your_password&#x27;</span>);</span><br></pre></td></tr></table></figure><h2 id="2-使用Memcached的会话复制（适用于小型系统）"><a href="#2-使用Memcached的会话复制（适用于小型系统）" class="headerlink" title="2. 使用Memcached的会话复制（适用于小型系统）"></a>2. 使用Memcached的会话复制（适用于小型系统）</h2><p>每个节点同步会话数据到其他节点，通过广播机制保持一致性。<br>实现方式：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用Memcached的会话复制（示例）</span></span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&#x27;session.save_handler&#x27;</span>, <span class="string">&#x27;memcached&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&#x27;session.save_path&#x27;</span>, <span class="string">&#x27;server1:11211,server2:11211&#x27;</span>);</span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">缺点：</span><br><span class="line">网络延迟导致同步不一致</span><br><span class="line">扩展性差（节点数增加时性能下降）</span><br></pre></td></tr></table></figure><h2 id="3-JWT方案"><a href="#3-JWT方案" class="headerlink" title="3. JWT方案"></a>3. JWT方案</h2><p>将会话数据加密存储在客户端，服务端无需存储状态。</p><p>JWT实现代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="title">Firebase</span>\<span class="title">JWT</span>\<span class="title">JWT</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 生成令牌</span></span><br><span class="line"><span class="variable">$payload</span> = [</span><br><span class="line"><span class="string">&#x27;user_id&#x27;</span> =&gt; <span class="number">123</span>,</span><br><span class="line"><span class="string">&#x27;exp&#x27;</span> =&gt; <span class="title function_ invoke__">time</span>() + <span class="number">3600</span>,</span><br><span class="line"><span class="string">&#x27;data&#x27;</span> =&gt; [<span class="string">&#x27;role&#x27;</span> =&gt; <span class="string">&#x27;admin&#x27;</span>]</span><br><span class="line">];</span><br><span class="line"><span class="variable">$token</span> = JWT::<span class="title function_ invoke__">encode</span>(<span class="variable">$payload</span>, <span class="string">&#x27;your_secret_key&#x27;</span>, <span class="string">&#x27;HS256&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 验证令牌</span></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="variable">$decoded</span> = JWT::<span class="title function_ invoke__">decode</span>(<span class="variable">$token</span>, <span class="string">&#x27;your_secret_key&#x27;</span>, [<span class="string">&#x27;HS256&#x27;</span>]);</span><br><span class="line">&#125; <span class="keyword">catch</span> (<span class="built_in">Exception</span> <span class="variable">$e</span>) &#123;</span><br><span class="line"><span class="comment">// 处理验证失败</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">注意事项：</span><br><span class="line">需配合HTTPS防止令牌泄露</span><br><span class="line">令牌大小需控制在4KB以内</span><br></pre></td></tr></table></figure><h1 id="二、高级优化策略"><a href="#二、高级优化策略" class="headerlink" title="二、高级优化策略"></a>二、高级优化策略</h1><h2 id="1-读写一致性保障"><a href="#1-读写一致性保障" class="headerlink" title="1. 读写一致性保障"></a>1. 读写一致性保障</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用Redis事务保证原子性操作</span></span><br><span class="line"><span class="variable">$redis</span>-&gt;<span class="title function_ invoke__">multi</span>()</span><br><span class="line">-&gt;<span class="title function_ invoke__">hSet</span>(<span class="string">&#x27;session:&#x27;</span>.<span class="variable">$sessionId</span>, <span class="string">&#x27;last_activity&#x27;</span>, <span class="title function_ invoke__">time</span>())</span><br><span class="line">-&gt;<span class="title function_ invoke__">expire</span>(<span class="string">&#x27;session:&#x27;</span>.<span class="variable">$sessionId</span>, <span class="number">3600</span>)</span><br><span class="line">-&gt;<span class="title function_ invoke__">exec</span>();</span><br></pre></td></tr></table></figure><h2 id="2-故障转移机制"><a href="#2-故障转移机制" class="headerlink" title="2. 故障转移机制"></a>2. 故障转移机制</h2><p>哨兵模式配置：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">session.save_path = <span class="string">&quot;tcp://sentinel1:26379?sentinel=mymaster&amp;auth=password&quot;</span></span><br></pre></td></tr></table></figure><p>自动重试策略：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$redis</span> = <span class="keyword">new</span> <span class="title class_">RedisCluster</span>(<span class="literal">null</span>, [<span class="string">&#x27;redis-node1:6379&#x27;</span>, <span class="string">&#x27;redis-node2:6379&#x27;</span>], <span class="number">1.5</span>, <span class="number">1.5</span>, <span class="literal">true</span>, <span class="string">&#x27;password&#x27;</span>);</span><br><span class="line"><span class="variable">$redis</span>-&gt;<span class="title function_ invoke__">setOption</span>(<span class="title class_">RedisCluster</span>::<span class="variable constant_">OPT_SLAVE_FAILOVER</span>, <span class="title class_">RedisCluster</span>::<span class="variable constant_">FAILOVER_DISTRIBUTE</span>);</span><br></pre></td></tr></table></figure><h2 id="3-性能优化"><a href="#3-性能优化" class="headerlink" title="3. 性能优化"></a>3. 性能优化</h2><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Nginx配置会话亲和性（粘性会话）</span></span><br><span class="line"><span class="section">upstream</span> backend &#123;</span><br><span class="line"><span class="comment"># ip_hash: 每个请求按照访问ip（即Nginx的前置服务器或者客户端IP）的hash结果分配，这样每个访客会固定访问一个后端服务器，可以解决session一致问题。</span></span><br><span class="line">    ip_hash;</span><br><span class="line">    <span class="attribute">server</span> <span class="number">10.0.0.1:80</span>;</span><br><span class="line">    <span class="attribute">server</span> <span class="number">10.0.0.2:80</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="三、安全防护方案"><a href="#三、安全防护方案" class="headerlink" title="三、安全防护方案"></a>三、安全防护方案</h1><h2 id="1-会话安全加固"><a href="#1-会话安全加固" class="headerlink" title="1. 会话安全加固"></a>1. 会话安全加固</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 强制使用安全Cookie</span></span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&#x27;session.cookie_secure&#x27;</span>, <span class="number">1</span>);</span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&#x27;session.cookie_httponly&#x27;</span>, <span class="number">1</span>);</span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&#x27;session.cookie_samesite&#x27;</span>, <span class="string">&#x27;Strict&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定期更换Session ID</span></span><br><span class="line"><span class="title function_ invoke__">session_regenerate_id</span>(<span class="literal">true</span>);</span><br></pre></td></tr></table></figure><h2 id="2-数据加密"><a href="#2-数据加密" class="headerlink" title="2. 数据加密"></a>2. 数据加密</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用OpenSSL加密会话数据</span></span><br><span class="line"><span class="variable">$iv</span> = <span class="title function_ invoke__">openssl_random_pseudo_bytes</span>(<span class="number">16</span>);</span><br><span class="line"><span class="variable">$encrypted</span> = <span class="title function_ invoke__">openssl_encrypt</span>(<span class="variable">$data</span>, <span class="string">&#x27;AES-256-CBC&#x27;</span>, <span class="variable">$key</span>, <span class="number">0</span>, <span class="variable">$iv</span>);</span><br><span class="line"><span class="variable">$redis</span>-&gt;<span class="title function_ invoke__">set</span>(<span class="variable">$sessionId</span>, <span class="title function_ invoke__">base64_encode</span>(<span class="variable">$iv</span>.<span class="variable">$encrypted</span>));</span><br></pre></td></tr></table></figure><h1 id="四、监控与维护"><a href="#四、监控与维护" class="headerlink" title="四、监控与维护"></a>四、监控与维护</h1><h2 id="1-关键监控指标"><a href="#1-关键监控指标" class="headerlink" title="1. 关键监控指标"></a>1. 关键监控指标</h2><table><thead><tr><th>指标</th><th>告警阈值</th><th>监控工具</th></tr></thead><tbody><tr><td>会话存储延迟</td><td>&gt;100ms</td><td>Prometheus+Grafana</td></tr><tr><td>Redis内存使用率</td><td>&gt;80%</td><td>Redis-cli INFO</td></tr><tr><td>会话丢失率</td><td>&gt;0.1%</td><td>ELK日志分析</td></tr></tbody></table><h2 id="2-灾备方案"><a href="#2-灾备方案" class="headerlink" title="2. 灾备方案"></a>2. 灾备方案</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Redis集群数据备份</span></span><br><span class="line">redis-cli --cluster backup redis-node1:6379 --backup-dir /backups</span><br></pre></td></tr></table></figure><h2 id="五、方案选型建议"><a href="#五、方案选型建议" class="headerlink" title="五、方案选型建议"></a>五、方案选型建议</h2><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">中小型系统：Redis主从 + 哨兵</span><br><span class="line">大型分布式系统：Redis Cluster + 自动分片</span><br><span class="line">无状态服务：<span class="keyword">JWT </span>+ 客户端存储</span><br><span class="line">传统架构：数据库存储 + 读写分离</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> php </category>
          
          <category> 业务 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 面试 </tag>
            
            <tag> php面试 </tag>
            
            <tag> 分布式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信小程序</title>
      <link href="/posts/4618cb0a.html"/>
      <url>/posts/4618cb0a.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">微信小程序分享和分享到朋友圈功能</span><br><span class="line"><span class="number">1.</span> ts写法</span><br><span class="line">&lt;script lang=<span class="string">&quot;ts&quot;</span> setup&gt;</span><br><span class="line">    <span class="keyword">import</span> &#123; onShareAppMessage, onShareTimeline &#125; <span class="keyword">from</span> <span class="string">&quot;@dcloudio/uni-app&quot;</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 分享</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@link</span> https://uniapp.dcloud.net.cn/api/plugins/share.html</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@link</span> https://developers.weixin.qq.com/miniprogram/dev/reference/api/Page.html#onShareAppMessage-Object-object</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="title function_">onShareAppMessage</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            <span class="attr">title</span>: <span class="string">&#x27;自定义分享标题&#x27;</span>, <span class="comment">// 默认当前页面title</span></span><br><span class="line">            <span class="comment">// path: &#x27;/pages/map/map&#x27;, // 默认当前页面地址</span></span><br><span class="line">            <span class="attr">imageUrl</span>: <span class="string">&#x27;../../static/share_cover.jpg&#x27;</span> <span class="comment">// 默认当前页面截图</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 分享到朋友圈</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@link</span> https://developers.weixin.qq.com/miniprogram/dev/reference/api/Page.html#onShareTimeline</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="title function_">onShareTimeline</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            <span class="attr">title</span>: <span class="string">&#x27;自定义分享标题&#x27;</span>,</span><br><span class="line">            <span class="comment">// query: &#x27;&#x27;, // 参数</span></span><br><span class="line">            <span class="attr">imageUrl</span>: <span class="string">&#x27;../../static/share_cover.jpg&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span> 非ts写法</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="title function_">onShareAppMessage</span>(<span class="params">res</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (res.<span class="property">from</span> === <span class="string">&#x27;button&#x27;</span>) &#123;<span class="comment">// 来自页面内分享按钮</span></span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(res.<span class="property">target</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      <span class="attr">title</span>: <span class="string">&#x27;自定义分享标题&#x27;</span>,</span><br><span class="line">      <span class="attr">path</span>: <span class="string">&#x27;/pages/test/test?id=123&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> js </category>
          
          <category> 微信小程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微信小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>table固定列</title>
      <link href="/posts/b741af1a.html"/>
      <url>/posts/b741af1a.html</url>
      
        <content type="html"><![CDATA[<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="comment">/*table滚动开始*/</span></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.scroll</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">overflow-x</span>: auto;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">padding-bottom</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.scroll</span> <span class="selector-class">.warp</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="comment">/*由于table_layout为自动，后续改成fixed，td根据宽度设置时删除*/</span></span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">2000px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">max-width</span>: <span class="number">2000px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.scroll</span>::-webkit-scrollbar &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">6px</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">height</span>: <span class="number">6px</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.scroll</span>::-webkit-scrollbar-thumb &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border-radius</span>: <span class="number">3px</span>;</span></span><br><span class="line"><span class="language-css">    -webkit-<span class="attribute">box-shadow</span>: inset <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.2</span>);</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background</span>: <span class="number">#0076f5</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.scroll</span>::-webkit-scrollbar-track &#123;</span></span><br><span class="line"><span class="language-css">    -webkit-<span class="attribute">box-shadow</span>: inset <span class="number">0</span> <span class="number">0</span> <span class="number">5px</span> <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.2</span>);</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border-radius</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.1</span>);</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"><span class="comment">/*列固定开始*/</span></span></span><br><span class="line"><span class="language-css"><span class="selector-class">.scroll</span> <span class="selector-tag">table</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.position-fixed-left</span>, <span class="selector-class">.position-fixed-right</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">position</span>: sticky;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">top</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">z-index</span>: <span class="number">1</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background</span>: <span class="number">#FFFFFF</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.position-fixed-left</span><span class="selector-pseudo">:hover</span>, <span class="selector-class">.position-fixed-right</span><span class="selector-pseudo">:hover</span>,</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.position-fixed-left</span><span class="selector-class">.active</span>, <span class="selector-class">.position-fixed-right</span><span class="selector-class">.active</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background</span>: <span class="number">#f5f5f5</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.position-fixed-left</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.position-fixed-right</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">right</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.position-operate</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="comment">/*固定列并且table_layout自动情况下设置，防止宽度过大*/</span></span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="comment">/*列固定结束*/</span></span></span><br><span class="line"><span class="language-css"><span class="comment">/*table滚动结束*/</span></span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot; scroll &quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">&quot;table-class warp&quot;</span> <span class="attr">id</span>=<span class="string">&quot;memberList&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span> <span class="attr">class</span>=<span class="string">&quot;position-fixed-left&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 50px; left: 0px;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;checkbox-common&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">input</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span> <span class="attr">class</span>=<span class="string">&quot;&quot;</span>&gt;</span>列1<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span> <span class="attr">class</span>=<span class="string">&quot;&quot;</span>&gt;</span>列2<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">th</span> <span class="attr">class</span>=<span class="string">&quot;position-fixed-right&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 320px;&quot;</span>&gt;</span>操作<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tbody</span> <span class="attr">id</span>=<span class="string">&quot;productTbody&quot;</span> <span class="attr">style</span>=<span class="string">&quot;text-align: center;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">rowspan</span>=<span class="string">&quot;1&quot;</span> <span class="attr">class</span>=<span class="string">&quot;position-fixed-left&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;checkbox-common&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">input</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">class</span>=<span class="string">&quot;checkbox-input&quot;</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">value</span>=<span class="string">&quot;70&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sub&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>数据1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span>数据2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">rowspan</span>=<span class="string">&quot;1&quot;</span> <span class="attr">class</span>=<span class="string">&quot;position-fixed-right&quot;</span> <span class="attr">style</span>=<span class="string">&quot;white-space: nowrap;&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">button</span>&gt;</span>详情<span class="tag">&lt;/<span class="name">butotn</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="comment">// 固定table列,重新计算距离</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">function</span> <span class="title function_">position_fixed</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    $.<span class="title function_">each</span>($(<span class="string">&#x27;.position-fixed-left&#x27;</span>), <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        $(<span class="variable language_">this</span>).<span class="title function_">css</span>(<span class="string">&#x27;left&#x27;</span>, $(<span class="variable language_">this</span>).<span class="title function_">position</span>().<span class="property">left</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    $.<span class="title function_">each</span>($(<span class="string">&#x27;.position-fixed-right&#x27;</span>), <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        $(<span class="variable language_">this</span>).<span class="title function_">css</span>(<span class="string">&#x27;right&#x27;</span>, $(<span class="variable language_">this</span>).<span class="title function_">position</span>().<span class="property">right</span>);</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux查看登录日志</title>
      <link href="/posts/ad54ee0c.html"/>
      <url>/posts/ad54ee0c.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><p>linux系统的登陆日志在&#x2F;var&#x2F;log&#x2F;wtmp文件里，登陆失败日志在&#x2F;var&#x2F;log&#x2F;btmp里，但是直接查看是部分乱码，而last、lastb命令就是用来查看这些文件的</p><p>last 命令：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">功能说明：列出目前与过去登入系统的用户相关信息。</span><br><span class="line">　　语　　法：last <span class="selector-attr">[-adRx]</span><span class="selector-attr">[-f ]</span><span class="selector-attr">[-n ]</span><span class="selector-attr">[帐号名称...]</span><span class="selector-attr">[终端机编号...]</span></span><br><span class="line">　　补充说明：单独执行last指令，它会读取位于/<span class="selector-tag">var</span>/log目录下，名称为wtmp的文件，并把该给文件的内容记录的登入系统的用户名单全部显示出来。</span><br><span class="line">　　参　　数：</span><br><span class="line">　　-<span class="selector-tag">a</span> 　把从何处登入系统的主机名称或IP地址，显示在最后一行。</span><br><span class="line">　　-d 　将IP地址转换成主机名称。</span><br><span class="line">　　-f  　指定记录文件。</span><br><span class="line">　　-n 或- 　设置列出名单的显示列数。</span><br><span class="line">　　-<span class="attribute">R</span> 　不显示登入系统的主机名称或IP地址。</span><br><span class="line">　　-<span class="attribute">x</span> 　显示系统关机，重新开机，以及执行等级的改变等信息。</span><br></pre></td></tr></table></figure><p>也可指定wtmp和btmp日志文件</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">last</span> -f /<span class="built_in">var</span>/<span class="built_in">log</span>/wtmp</span><br><span class="line">$ <span class="built_in">last</span> -f /<span class="built_in">var</span>/<span class="built_in">log</span>/btmp</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux限制登录次数</title>
      <link href="/posts/712733f4.html"/>
      <url>/posts/712733f4.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><p>通过pam模块，限制用户登录失败次数，达到阈值，锁定所有用户登录</p><h1 id="一、查看pam模块"><a href="#一、查看pam模块" class="headerlink" title="一、查看pam模块"></a>一、查看pam模块</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ll /usr/lib64/security/pam_tally2.so</span></span><br></pre></td></tr></table></figure><h1 id="二、ssh-远程登录限制"><a href="#二、ssh-远程登录限制" class="headerlink" title="二、ssh 远程登录限制"></a>二、ssh 远程登录限制</h1><ol><li>在&#x2F;etc&#x2F;pam.d&#x2F;sshd文件中添加配置<br>在#%PAM-1.0的下面，即第二行，添加内容。如果写在后面，虽然用户被锁定，但是只要用户输入正确的密码，还是可以登录。<figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># deny=3 表示尝试登录次数,超过3次后会执行后续动作,单位为秒</span></span><br><span class="line"><span class="comment"># even_deny_root 对root也开启此限制</span></span><br><span class="line">auth required pam_tally2.so <span class="attribute">deny</span>=3 <span class="attribute">unlock_time</span>=3600 even_deny_root <span class="attribute">root_unlock_time</span>=1800</span><br></pre></td></tr></table></figure></li></ol><h1 id="三、tty-远程登录限制"><a href="#三、tty-远程登录限制" class="headerlink" title="三、tty 远程登录限制"></a>三、tty 远程登录限制</h1><ol><li>在 &#x2F;etc&#x2F;pam.d&#x2F;login 文件中添加配置<figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># deny=3 表示尝试登录次数,超过3次后会执行后续动作,单位为秒</span></span><br><span class="line"><span class="comment"># even_deny_root 对root也开启此限制</span></span><br><span class="line">auth required pam_tally2.so <span class="attribute">deny</span>=3 <span class="attribute">unlock_time</span>=3600 even_deny_root <span class="attribute">root_unlock_time</span>=1800</span><br></pre></td></tr></table></figure></li></ol><h1 id="四、查看最后登录失败的用户"><a href="#四、查看最后登录失败的用户" class="headerlink" title="四、查看最后登录失败的用户"></a>四、查看最后登录失败的用户</h1><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看所有用户</span></span><br><span class="line"><span class="variable">$ </span>pam_tally2 -u</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看指定用户</span></span><br><span class="line"><span class="variable">$ </span>pam_tally2 -u 用户名 -r</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>模板引擎</title>
      <link href="/posts/1eee99d3.html"/>
      <url>/posts/1eee99d3.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="8cd1091a573c7cb88be57c95896639c3630e449cf306f1c7f79d94eed5357281"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">您好, 这里需要密码.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
            <tag> 加密文章 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql GROUP BY 详解</title>
      <link href="/posts/5532bb23.html"/>
      <url>/posts/5532bb23.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="GROUP-BY-是否能走索引及原理"><a href="#GROUP-BY-是否能走索引及原理" class="headerlink" title="GROUP BY 是否能走索引及原理"></a>GROUP BY 是否能走索引及原理</h1><p><a href="https://www.qycn.com/xzx/article/7041.html">参考链接</a></p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">explain</span> <span class="keyword">select</span> city ,count(*) <span class="keyword">as</span> num <span class="keyword">from</span> <span class="keyword">table</span> <span class="keyword">group</span> <span class="keyword">by</span> city;</span><br></pre></td></tr></table></figure><ol><li>执行过程<ol><li>创建内存临时表，表里有两个字段city和num；</li><li>全表扫描 table 的记录，依次取出city &#x3D; ‘X’的记录。</li><li>判断临时表中是否有为 city&#x3D;’X’的行，没有就插入一个记录 (X,1);</li><li>如果临时表中有city&#x3D;’X’的行的行，就将x 这一行的num值加 1；</li><li>遍历完成后，再根据字段city做排序，得到结果集返回给客户端。</li></ol></li></ol><h2 id="mysql-对-GROUP-BY-的优化"><a href="#mysql-对-GROUP-BY-的优化" class="headerlink" title="mysql 对 GROUP BY 的优化"></a>mysql 对 GROUP BY 的优化</h2><p>所有的group by中的列，必须在同一个索引里面<br>MySQL会使用两种方式来做group by的优化：</p><ol><li>松索引扫描(Loose Index Scan)</li><li>紧索引扫描(Tight Index Scan)</li></ol><h3 id="松索引扫描"><a href="#松索引扫描" class="headerlink" title="松索引扫描"></a>松索引扫描</h3><ol><li><p>当索引本身就能够覆盖到所有group的列的时候，MySQL就会使用松索引扫描。为什么叫松索引扫描呢？因为这种扫描方式只考虑索引中的部分key，而不是全部key。</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">如果使用了松索引扫描，你的查询语句<span class="keyword">explain</span>会在Extra中显示：<span class="keyword">Using</span> <span class="keyword">index</span> <span class="keyword">for</span> <span class="keyword">group</span>-<span class="keyword">by</span> (scanning)</span><br></pre></td></tr></table></figure></li><li><p>松散扫描有以下限制：</p><ol><li>查询必须是单表，跨表不行</li><li>group by的列必须符合索引的最左匹配原则</li><li>select中，只有MIN和MAX聚合函数能用，里面的列必须在索引中，并且必须紧邻在group by列的后面</li><li>除了MIN和MAX函数的参数外，查询中的列如果不在group by中，那where条件中这一列只能是“等于一个常量”，而如果在group by的列中，可以使用大于和小于等条件。</li><li>字符串的前缀索引不适用，比如c1 varchar(20)，索引c1(10)就不行。</li><li>SELECT 的字段必须出现在 GROUP BY 中</li></ol></li></ol><h3 id="紧索引扫描"><a href="#紧索引扫描" class="headerlink" title="紧索引扫描"></a>紧索引扫描</h3><ol><li>紧索引扫描会根据查询条件来决定是全索引扫描还是范围索引扫描。当条件不满足松散索引扫描时，尤其是不满足索引的最左匹配原则时，如果查询条件里面，有一些条件能够“填充”索引中的”缝隙”，MySQL也能够利用索引排好序的能力，直接完成group。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> mysql </category>
          
          <category> 索引 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
            <tag> 索引 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql ORDER BY 详解</title>
      <link href="/posts/9762c2f9.html"/>
      <url>/posts/9762c2f9.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="ORDER-BY-能否走索引及原理"><a href="#ORDER-BY-能否走索引及原理" class="headerlink" title="ORDER BY 能否走索引及原理"></a>ORDER BY 能否走索引及原理</h1><p><a href="https://www.teqng.com/2021/09/10/%E7%9C%8B%E4%B8%80%E9%81%8D%E5%B0%B1%E7%90%86%E8%A7%A3%EF%BC%9Aorder-by%E8%AF%A6%E8%A7%A3">参考链接</a></p><h1 id="是否走索引"><a href="#是否走索引" class="headerlink" title="是否走索引"></a>是否走索引</h1><ol><li>如果其中任何一个字段没有建立索引，那么order by就不会走索引，而是利用filesort进行辅助排序</li><li>要想使多个字段能够满足索引查询的话，需要给这些个字段建立联合索引，并且出现在order by后面的顺序需要满足最左前缀匹配原则，否则的话会出现filesort的情况而不会走索引。</li></ol><h1 id="工作原理"><a href="#工作原理" class="headerlink" title="工作原理"></a>工作原理</h1><h2 id="全字段排序"><a href="#全字段排序" class="headerlink" title="全字段排序"></a>全字段排序</h2><p>将查询所需的字段全部读取到sort_buffer中，就是全字段排序。  </p><p>MySQL 会给每个查询线程分配一块小内存，用于排序的，称为 sort_buffer。什么时候把字段放进去排序呢，其实是通过idx_city索引找到对应的数据，才把数据放进去啦。</p><p>执行流程:</p><ol><li>MySQL 为对应的线程初始化sort_buffer，放入需要查询的name、age、city字段</li><li>从索引树idx_city， 找到第一个满足 city&#x3D;’深圳’条件的主键 id，也就是图中的id&#x3D;9；</li><li>到主键 id 索引树拿到id&#x3D;9的这一行数据， 取name、age、city三个字段的值，存到sort_buffer；</li><li>从索引树idx_city 拿到下一个记录的主键 id，即图中的id&#x3D;13；</li><li>重复步骤 3、4 直到city的值不等于深圳为止；</li><li>前面5步已经查找到了所有city为深圳的数据，在 sort_buffer中，将所有数据根据age进行排序；</li><li>按照排序结果取前10行返回给客户端。<br><img src="/images/%E5%90%8E%E7%AB%AF/mysql/%E5%85%A8%E5%AD%97%E6%AE%B5%E6%8E%92%E5%BA%8F.png" alt="执行示意图"></li></ol><h2 id="磁盘临时文件辅助排序"><a href="#磁盘临时文件辅助排序" class="headerlink" title="磁盘临时文件辅助排序"></a>磁盘临时文件辅助排序</h2><p>实际上，sort_buffer的大小是由一个参数控制的：sort_buffer_size。如果要排序的数据小于sort_buffer_size，排序在sort_buffer 内存中完成，如果要排序的数据大于sort_buffer_size，则借助磁盘文件来进行排序</p><p>执行流程:</p><ol><li>从主键Id索引树，拿到需要的数据，并放到sort_buffer内存块中。当sort_buffer快要满时，就对sort_buffer中的数据排序，排完后，把数据临时放到磁盘一个小文件中。</li><li>继续回到主键 id 索引树取数据，继续放到sort_buffer内存中，排序后，也把这些数据写入到磁盘临时小文件中。</li><li>继续循环，直到取出所有满足条件的数据。最后把磁盘的临时排好序的小文件，合并成一个有序的大文件。</li></ol><h2 id="rowid-排序"><a href="#rowid-排序" class="headerlink" title="rowid 排序"></a>rowid 排序</h2><p>rowid 排序就是，只把查询SQL需要用于排序的字段和主键id，放到sort_buffer中。那怎么确定走的是全字段排序还是rowid 排序排序呢？  </p><p>实际上有个参数控制的。这个参数就是max_length_for_sort_data，它表示MySQL用于排序行数据的长度的一个参数，如果单行的长度超过这个值，MySQL 就认为单行太大，就换rowid 排序。我们可以通过命令看下这个参数取值。  </p><p>max_length_for_sort_data 默认值是1024。因为本文示例中name,age,city长度&#x3D;64+4+64 &#x3D;132 &lt; 1024, 所以走的是全字段排序。我们来改下这个参数，改小一点。</p><p>执行流程:</p><ol><li>MySQL 为对应的线程初始化sort_buffer，放入需要排序的age字段，以及主键id；</li><li>从索引树idx_city， 找到第一个满足 city&#x3D;’深圳’条件的主键 id，也就是图中的id&#x3D;9；</li><li>到主键 id 索引树拿到id&#x3D;9的这一行数据， 取age和主键id的值，存到sort_buffer；</li><li>从索引树idx_city 拿到下一个记录的主键 id，即图中的id&#x3D;13；</li><li>重复步骤 3、4 直到city的值不等于深圳为止；</li><li>前面5步已经查找到了所有city为深圳的数据，在 sort_buffer中，将所有数据根据age进行排序；</li><li>遍历排序结果，取前10行，并按照 id 的值回到原表中，取出city、name 和 age 三个字段返回给客户端。</li></ol><p><img src="/images/%E5%90%8E%E7%AB%AF/mysql/ROWID%E6%8E%92%E5%BA%8F.png" alt="执行示意图"></p><h2 id="全字段排序与rowid排序对比"><a href="#全字段排序与rowid排序对比" class="headerlink" title="全字段排序与rowid排序对比"></a>全字段排序与rowid排序对比</h2><ol><li>全字段排序：sort_buffer内存不够的话，就需要用到磁盘临时文件，造成磁盘访问。</li><li>rowid排序：sort_buffer可以放更多数据，但是需要再回到原表去取数据，比全字段排序多一次回表。</li></ol><p>一般情况下，对于InnoDB存储引擎，会优先使用全字段排序。可以发现 max_length_for_sort_data 参数设置为1024，这个数比较大的。一般情况下，排序字段不会超过这个值，也就是都会走全字段排序。</p>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> mysql </category>
          
          <category> 索引 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
            <tag> 索引 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>索引原理</title>
      <link href="/posts/3d64ba28.html"/>
      <url>/posts/3d64ba28.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><p>索引就是帮助数据库高效查找数据的存储结构，存储再磁盘中，需要消耗磁盘IO</p><h1 id="1-存储引擎"><a href="#1-存储引擎" class="headerlink" title="1. 存储引擎"></a>1. 存储引擎</h1><ol><li>myisam 支持表锁，索引和数据分开存储适合跨服务器迁移</li><li>innodb 支持行锁，索引和数据存储再一个文件</li></ol><h1 id="2-索引类型"><a href="#2-索引类型" class="headerlink" title="2. 索引类型"></a>2. 索引类型</h1><h2 id="1-hash索引"><a href="#1-hash索引" class="headerlink" title="1. hash索引"></a>1. hash索引</h2><ol><li>适合精确查询且效率高</li><li>无法排序、不适合范围查询</li><li>hash冲突的情况下需要遍历链表（php数组的实现原理、redis zset 的实现原理类似）</li></ol><h2 id="2-b-tree-和-b-tree-的区别"><a href="#2-b-tree-和-b-tree-的区别" class="headerlink" title="2. b-tree 和 b+tree 的区别"></a>2. b-tree 和 b+tree 的区别</h2><ol><li>b+tree 的数据全部存储在叶子节点，内部节点只存key,一次磁盘IO能获取到更多的节点</li><li>b-tree 的内部节点和叶子节点都存储key和数据，查找数据不需要找到叶子节点，内部节点可以直接返回数据</li><li>b+tree 增加了叶子节点到相邻节点的指针，方便返回查询遍历</li></ol><h1 id="1-聚簇索引和非聚簇索引"><a href="#1-聚簇索引和非聚簇索引" class="headerlink" title="1. 聚簇索引和非聚簇索引"></a>1. 聚簇索引和非聚簇索引</h1><h2 id="1-概念"><a href="#1-概念" class="headerlink" title="1. 概念"></a>1. 概念</h2><ol><li>聚簇索引  :索引和数据存储在一个节点</li><li>非聚簇索引:索引和数据分开存储，通过索引找到数据实际存储的地址</li></ol><h2 id="2-详解"><a href="#2-详解" class="headerlink" title="2. 详解:"></a>2. 详解:</h2><ol><li>innodb 使用的聚簇索引,且默认主键索引为聚簇索引（没有主键索引的时候，选择一个非空索引，还没有则隐式的主键索引），辅助索引指向聚簇索引位置，然后在找到实际存储地址</li><li>myisam 使用非聚簇索引，所有的索引都只需要查询一次就能找到数据</li></ol><h2 id="3-聚簇索引的优势和略势"><a href="#3-聚簇索引的优势和略势" class="headerlink" title="3. 聚簇索引的优势和略势"></a>3. 聚簇索引的优势和略势</h2><ol><li>索引和数据在一起，同一页的数据会被缓存到（buffer）内存中，所以查看同一页数据的时候只需要从内存中取出，</li><li>数据更新之后之只需要维护主键索引即可，辅助索引不受影响</li><li>辅助索引存的是主键索引的值，占用更多的物理空间。所以会受到影响</li><li>使用随机的UUID，数据分布不均匀，导致聚簇索引可能扫全表，降低效率，所以尽量使用自增主键id</li></ol><h1 id="索引原理补充"><a href="#索引原理补充" class="headerlink" title="索引原理补充"></a>索引原理补充</h1><h2 id="1-索引原理"><a href="#1-索引原理" class="headerlink" title="1. 索引原理"></a>1. 索引原理</h2><h3 id="1-磁盘IO："><a href="#1-磁盘IO：" class="headerlink" title="1. 磁盘IO："></a>1. 磁盘IO：</h3><ol><li>寻道时间：指的是磁臂移动到指定磁道所需要的时间，主流磁盘一般在5ms以下</li><li>旋转延迟：指的是我们经常听说的磁盘转速，比如一个磁盘7200转，表示每分钟能转7200次，也就是说1秒钟能转120次，旋转延迟就是1&#x2F;120&#x2F;2 &#x3D; 4.17ms</li><li>传输时间：指的是从磁盘读出或将数据写入磁盘的时间，一般在零点几毫秒，相对于前两个时间可以忽略不计。</li><li>磁盘读取数据靠的是机械运动，每次读取数据花费的时间可以分为寻道时间、旋转延迟、传输时间三个部分。访问一次磁盘的时间，即一次磁盘IO的时间约等于5+4.17 &#x3D; 9ms左右</li></ol><h3 id="2-预读"><a href="#2-预读" class="headerlink" title="2. 预读"></a>2. 预读</h3><ol><li>考虑到磁盘IO是非常高昂的操作，计算机操作系统做了一些优化，当一次IO时，不光把当前磁盘地址的数据，而是把相邻的数据也都读取到内存缓冲区内，因为局部预读性原理告诉我们，当计算机访问一个地址的数据的时候，与其相邻的数据也会很快被访问到。每一次IO读取的数据我们称之为一页(page)</li><li>具体一页有多大数据跟操作系统有关，一般为4k或8k，也就是我们读取一页内的数据时候，实际上才发生了一次IO，这个理论对于索引的数据结构设计非常有帮助。</li></ol><h3 id="3-B-tree"><a href="#3-B-tree" class="headerlink" title="3. B+tree"></a>3. B+tree</h3><ol><li>一次IO将一页的数据加载到内存中</li><li>为什么索引字段尽量小并且数据只存在叶子节点：字节越少，每次IO请求扫描的节点就越多<ol><li>假设当前数据表的数据为N，每个磁盘块的数据项的数量是m，则有h&#x3D;㏒(m+1)N，当数据量N一定的情况下，m越大，h越小；而m &#x3D; 磁盘块的大小 &#x2F; 数据项的大小，磁盘块的大小也就是一个数据页的大小，是固定的，如果数据项占的空间越小，数据项的数量越多，树的高度越低</li></ol></li><li>最左前缀特性：b+数是按照从左到右的顺序来建立搜索树的</li></ol><h2 id="2-索引创建原则"><a href="#2-索引创建原则" class="headerlink" title="2. 索引创建原则"></a>2. 索引创建原则</h2><ol><li>最左前缀原则：mysql会一直向右匹配直到遇到范围查询(&gt;、&lt;、between、like)就停止匹配。联合索引（A,B,C） &#x3D; (A) + (A,B) +(A,B,C)</li><li>&#x3D;和in可以乱序,mysql查询优化器会自动识别成需要使用索引的类型</li><li>尽量选择区分度高的列作为索引</li><li>索引列不能参与计算</li><li>尽量的扩展索引，不要新建索引，入过已经存在A索引 需要加一个新的索引，建议修改原来的索引为（A,B）联合索引</li></ol><h2 id="走索引的情况和不走索引的情况"><a href="#走索引的情况和不走索引的情况" class="headerlink" title="走索引的情况和不走索引的情况"></a>走索引的情况和不走索引的情况</h2><ol><li>in走索引</li><li>范围查询走索引</li><li>模糊查询只有左前缀使用索引</li><li>反向条件不走索引 !&#x3D; 、 &lt;&gt; 、 NOT IN、IS NOT NULL</li><li>对条件计算(使用函数或者算数表达式)不走索引</li><li>查询时必须使用正确的数据类型，字段类型和查询的数据类型对应</li></ol><h3 id="1-OR-是否能走索引及原理"><a href="#1-OR-是否能走索引及原理" class="headerlink" title="1. OR 是否能走索引及原理"></a>1. OR 是否能走索引及原理</h3><ol><li>必须所有的or条件都必须是覆盖索引</li><li>用UNION或者IN替换OR</li></ol><h3 id="4-前缀索引"><a href="#4-前缀索引" class="headerlink" title="4. 前缀索引"></a>4. 前缀索引</h3><ol><li>前缀索引是一种能使索引更小、更快的有效办法，但它也有缺点：MySQL无法使用前缀索引做ORDER BY和GROUP BY操作，也无法使用前缀索引做覆盖扫描。</li></ol><h3 id="其他情况"><a href="#其他情况" class="headerlink" title="其他情况"></a>其他情况</h3><ol><li><a href="./5532bb23.html">mysql GROUP BY 详解</a> [](GROUP BY 详解.md)</li><li><a href="./9762c2f9.html">mysql ORDER BY 详解</a> [](ORDER BY详解.md)</li></ol>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
            <tag> mysql面试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redis、Memcached、MongoDB的特点和区别</title>
      <link href="/posts/4f683a18.html"/>
      <url>/posts/4f683a18.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="一、Redis、Memcached、MongoDB的特点"><a href="#一、Redis、Memcached、MongoDB的特点" class="headerlink" title="一、Redis、Memcached、MongoDB的特点"></a>一、Redis、Memcached、MongoDB的特点</h1><h2 id="1-Redis"><a href="#1-Redis" class="headerlink" title="1. Redis"></a>1. Redis</h2><h3 id="1-1-优点"><a href="#1-1-优点" class="headerlink" title="1.1 优点"></a>1.1 优点</h3><ol><li>支持多种数据结构，如 string（字符串）、 list(双向链表)、dict(hash表)、set(集合）、zset(排序set)</li><li>支持持久化操作，可以进行aof及rdb数据持久化到磁盘，从而进行数据备份或数据恢复等操作，较好的防止数据丢失的手段</li><li>支持通过Replication进行数据复制，通过master-slave机制，可以实时进行数据的同步复制，支持多级复制和增量复制，master-slave机制是Redis进行HA的重要手段</li><li>单线程请求，所有命令串行执行，并发情况下不需要考虑数据一致性问题</li><li>支持pub&#x2F;sub消息订阅机制，可以用来进行消息订阅与通知</li><li>支持简单的事务需求，但业界使用场景很少，并不成熟</li></ol><h3 id="1-2-缺点"><a href="#1-2-缺点" class="headerlink" title="1.2 缺点"></a>1.2 缺点</h3><ol><li>Redis只能使用单线程，性能受限于CPU性能，故单实例CPU最高才可能达到5-6wQPS每秒（取决于数据结构，数据大小以及服务器硬件性能，日常环境中QPS高峰大约在1-2w左右）</li><li>支持简单的事务需求，但业界使用场景很少，并不成熟，既是优点也是缺点</li><li>Redis在string类型上会消耗较多内存，可以使用dict（hash表）压缩存储以降低内存耗用</li></ol><h3 id="1-3-应用场景："><a href="#1-3-应用场景：" class="headerlink" title="1.3 应用场景："></a>1.3 应用场景：</h3><ol><li>配合关系型数据库做高速缓存</li><li>缓存高频次数据，降低数据库io</li><li>分布式架构，做session共享</li></ol><h2 id="Memcached"><a href="#Memcached" class="headerlink" title="Memcached"></a>Memcached</h2><h3 id="1-1-优点-1"><a href="#1-1-优点-1" class="headerlink" title="1.1 优点"></a>1.1 优点</h3><ol><li>可以利用多核优势，单实例吞吐量极高，可以达到几十万QPS（取决于key、value的字节大小以及服务器硬件性能，日常环境中QPS高峰大约在4-6w左右），适用于最大程度扛量</li><li>支持直接配置为session handle</li></ol><h3 id="1-2-缺点-1"><a href="#1-2-缺点-1" class="headerlink" title="1.2 缺点"></a>1.2 缺点</h3><ol><li>只支持简单的key&#x2F;value数据结构，不像Redis可以支持丰富的数据类型</li><li>无法进行持久化，数据不能备份，只能用于缓存使用，且重启后数据全部丢失</li><li>无法进行数据同步，不能将MC中的数据迁移到其他MC实例中</li><li>内存分配采用Slab Allocation机制管理内存，value大小分布差异较大时会造成内存利用率降低，并引发低利用率时依然出现踢出等问题。需要用户注重value设计</li></ol><h2 id="MongoDB"><a href="#MongoDB" class="headerlink" title="MongoDB"></a>MongoDB</h2><h3 id="1-1-优点-2"><a href="#1-1-优点-2" class="headerlink" title="1.1 优点"></a>1.1 优点</h3><ol><li>更高的写负载，拥有更高的写入速度</li><li>处理很大规模的单表，当数据表很大的时候，可以容易的分割表</li><li>高可用性，设置M-S不仅方便而且很快，还可以快速、安全及自动化的实现节点（数据中心）故障转移</li><li>快速的查询，MongoDB支持二维空间索引，比如管道，因此可以快速及精确的从指定位置获取数据。MongoDB在启动后会将数据库中的数据以文件映射的方式加载到内存中。如果内存资源相当丰富的话，这将极大地提高数据库的查询速度。</li><li>非结构化数据的爆发增长，增加列在有些情况下可能锁定整个数据库，或者增加负载从而导致性能下降，由于MongoDB的弱数据结构模式，添加1个新字段不会对旧表格有任何影响，整个过程会非常快速。</li></ol><h3 id="1-2-缺点-2"><a href="#1-2-缺点-2" class="headerlink" title="1.2 缺点"></a>1.2 缺点</h3><ol><li>不支持事务</li><li>占用空间过大</li><li>没有成熟的维护工具</li></ol><h3 id="1-3-适合场景"><a href="#1-3-适合场景" class="headerlink" title="1.3 适合场景"></a>1.3 适合场景</h3><ol><li>事件记录、内容管理或者博客平台，比如评论系统</li></ol><h1 id="二、Redis、Memcached、MongoDB的区别"><a href="#二、Redis、Memcached、MongoDB的区别" class="headerlink" title="二、Redis、Memcached、MongoDB的区别"></a>二、Redis、Memcached、MongoDB的区别</h1><h2 id="1-性能"><a href="#1-性能" class="headerlink" title="1. 性能"></a>1. 性能</h2><ol><li>三者的性能都比较高，总的来讲：Memcache和Redis差不多，要高于MongoDB。</li></ol><h2 id="2-便利性"><a href="#2-便利性" class="headerlink" title="2. 便利性"></a>2. 便利性</h2><ol><li>memcache数据结构单一。  </li><li>redis丰富一些，数据操作方面，redis更好一些，较少的网络IO次数。  </li><li>mongodb支持丰富的数据表达，索引，最类似关系型数据库，支持的查询语言非常丰富。</li></ol><h2 id="3-存储空间"><a href="#3-存储空间" class="headerlink" title="3. 存储空间"></a>3. 存储空间</h2><ol><li>MemCached可以修改最大内存，采用LRU算法。  </li><li>Redis增加了VM的特性，突破了物理内存的限制。  </li><li>MongoDB 适合大数据量的存储，依赖操作系统 VM 做内存管理，内存占用大</li></ol><h2 id="4-可用性"><a href="#4-可用性" class="headerlink" title="4. 可用性"></a>4. 可用性</h2><ol><li><p>redis依赖客户端来实现分布式读写；主从复制时，每次从节点重新连接主节点都要依赖整个快照,无增量复制，因性能和效率问题，所以单点问题比较复杂。<br>不支持自动sharding,需要依赖程序设定一致hash 机制。一种替代方案是，不用redis本身的复制机制，采用自己做主动复制（多份存储），或者改成增量复制的方式（需要自己实现），一致性问题和性能的权衡。  </p></li><li><p>Memcache本身没有数据冗余机制，也没必要；对于故障预防，采用依赖成熟的hash或者环状的算法，解决单点故障引起的抖动问题。  </p></li><li><p>mongoDB支持master-slave,replicaset（内部采用paxos选举算法，自动故障恢复）,auto sharding机制，对客户端屏蔽了故障转移和切分机制。</p></li></ol><h2 id="5-可靠性"><a href="#5-可靠性" class="headerlink" title="5. 可靠性"></a>5. 可靠性</h2><ol><li>redis支持（快照、AOF）：依赖快照进行持久化，aof增强了可靠性的同时，对性能有所影响。  </li><li>memcache不支持，通常用在做缓存,提升性能。  </li><li>MongoDB从1.8版本开始采用binlog方式支持持久化的可靠性。</li></ol><h2 id="6-一致性"><a href="#6-一致性" class="headerlink" title="6. 一致性"></a>6. 一致性</h2><ol><li>Memcache 在并发场景下，用cas保证一致性。  </li><li>redis事务支持比较弱，只能保证事务中的每个操作连续执行。  </li><li>mongoDB不支持事务。</li></ol><h2 id="7-数据分析"><a href="#7-数据分析" class="headerlink" title="7. 数据分析"></a>7. 数据分析</h2><ol><li>mongoDB内置了数据分析的功能(mapreduce),其他两者不支持。</li></ol><h2 id="8-应用场景"><a href="#8-应用场景" class="headerlink" title="8. 应用场景"></a>8. 应用场景</h2><ol><li>redis：数据量较小的更性能操作和运算上。  </li><li>memcache：用于在动态系统中减少数据库负载，提升性能;做缓存，提高性能（适合读多写少，对于数据量比较大，可以采用sharding）。</li><li>Mongodb：主要解决海量数据的访问效率问题</li></ol>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> NoSQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NoSQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql 和 NOSQL 区别</title>
      <link href="/posts/e56e688.html"/>
      <url>/posts/e56e688.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="一、关系型数据库"><a href="#一、关系型数据库" class="headerlink" title="一、关系型数据库"></a>一、关系型数据库</h1><h2 id="1-1-什么是关系型数据库"><a href="#1-1-什么是关系型数据库" class="headerlink" title="1.1 什么是关系型数据库"></a>1.1 什么是关系型数据库</h2><p>关系数据库（Relational database），是创建在关系模型基础上的数据库，借助于集合代数等数学概念和方法来处理数据库中的数据。<br>现实世界中的各种实体以及实体之间的各种联系均用关系模型来表示。</p><ol><li>数据库：包括一个或多个表</li><li>表（关系 Relation）：是以列和行的形式组织起来的数据的集合</li><li>列（属性 Attribute）：在数据库中经常被称为字段</li><li>行（值组 Tuple）：在数据库中经常被称为记录</li></ol><h2 id="1-2-关系型数据库优点"><a href="#1-2-关系型数据库优点" class="headerlink" title="1.2 关系型数据库优点"></a>1.2 关系型数据库优点</h2><ol><li>事务一致性：通过事务处理保持数据的一致性</li><li>复杂查询：支持SQL，可以进行JOIN等复杂查询</li><li>容易查询：关系模型相对网状和层次等其他模型，更易于理解</li><li>使用方便：通用的 SQL 语言使得操作关系型数据库非常方便</li><li>易于维护：丰富的 完整性(实体完整性、参照完整性和用户定义的完整性)大大减低了数据冗余和数据不一致的概率</li></ol><h2 id="1-3-关系型数据库缺点"><a href="#1-3-关系型数据库缺点" class="headerlink" title="1.3 关系型数据库缺点"></a>1.3 关系型数据库缺点</h2><ol><li>读写性能：在数据量达到一定规模时，由于关系型数据库的逻辑非常复杂，为了维护一致性，使得容易出现死锁等并发问题，所以导致读写速度下滑非常严重</li><li>表结构更新：表机构如果有非常大的结构变更时，会变得非常复杂</li><li>高并发：网站的用户并发性非常高，对于传统关系型数据库来说，硬盘 I&#x2F;O 是一个很大的瓶颈</li><li>海量数据：对于关系型数据库，在一张包含海量数据的表中查询，效率非常低</li></ol><h1 id="二、非关系型数据库"><a href="#二、非关系型数据库" class="headerlink" title="二、非关系型数据库"></a>二、非关系型数据库</h1><h2 id="1-1-什么是非关系型数据库"><a href="#1-1-什么是非关系型数据库" class="headerlink" title="1.1 什么是非关系型数据库"></a>1.1 什么是非关系型数据库</h2><p>非关系型数据库（NOSQL）是对不同于传统的关系数据库的数据库管理系统的统称。</p><p>当典型的关系数据库在一些数据敏感的应用中表现了糟糕的性能，例如为巨量文档创建索引、高流量网站的网页服务，以及发送流式媒体。关系型数据库的典型实现主要被调整用于执行规模小而读写频繁，或者大批量极少写访问的事务。</p><p>NOSQL 的结构通常提供弱一致性的保证，如最终一致性，或交易仅限于单个的数据项。</p><p>NOSQL 提出另一种理念，例如，以键值对存储，且结构不固定，每一个元组可以有不一样的字段，每个元组可以根据需要增加一些自己的键值对，这样就不会局限于固定的结构，可以减少一些时间和空间的开销。</p><p>NOSQL 与 SQL 存在许多显著的不同点，其中最重要的是 NOSQL 不使用 SQL 作为查询语言。其数据存储可以不需要固定的表格模式，也经常会避免使用 SQL 的 JOIN 操作，一般有水平可扩展性的特征。</p><p>非关系型数据库包括：<br>临时性键值存储：memcached、Redis<br>永久性键值存储：ROMA、Redis<br>面向文档的数据库：MongoDB、CouchDB<br>面向列的数据库：Cassandra、HBase<br>主要代表：MongoDB，Redis，CouchDB</p><h2 id="1-2-非关系型数据库分类"><a href="#1-2-非关系型数据库分类" class="headerlink" title="1.2 非关系型数据库分类"></a>1.2 非关系型数据库分类</h2><p>非关系型数据库严格上不是一种数据库，应该是一种数据结构化存储方法的集合。依据结构化方法以及应用场合的不同，主要分为以下几类：</p><ol><li>面向高性能并发读写的 key-value 数据库：具有极高的并发读写性能。典型代表有 Redis，Tokyo Cabinet，Flare</li><li>面向海量数据访问的面向文档数据库：可以在海量的数据中快速查询数据。典型代表有 MongoDB 以及 CouchDB</li><li>面向可扩展性的分布式数据库：这类数据库想解决的问题就是传统数据库存在可扩展性上的缺点，这类数据库可以适应数据量的增加和数据结构的变化</li></ol><h2 id="1-3-非关系型数据库的优点"><a href="#1-3-非关系型数据库的优点" class="headerlink" title="1.3 非关系型数据库的优点"></a>1.3 非关系型数据库的优点</h2><ol><li>读写性能：无需经过 SQL 层的解析，读写性能非常高。主要例子有Redis，由于其逻辑简单，而且纯内存操作，使得其性能非常出色，单节点每秒可以处理超过10万次读写操作</li><li>简单的扩展：基于键值对，数据没有耦合性，容易扩展。典型例子是 Cassandra，由于其架构是类似于经典的 P2P，所以能通过轻松地添加新的节点来扩展这个集群</li><li>存储格式多：支持 key-value 、文档格式、图片格式，而关系型数据库只支持基础类型</li><li>低廉的成本：因为主要都是开源软件，没有昂贵的License成本</li></ol><h2 id="1-4-非关系型数据库的缺点"><a href="#1-4-非关系型数据库的缺点" class="headerlink" title="1.4 非关系型数据库的缺点"></a>1.4 非关系型数据库的缺点</h2><ol><li>不提供对 SQL 的支持：会对用户产生一定的学习和应用迁移成本</li><li>支持的特性不够丰富：现有产品所提供的功能都比较有限，大多数 NOSQL 数据库都不支持事务</li><li>现有产品的不够成熟：大多数产品都还处于初创期，和关系型数据库几十年的完善不可同日而语</li></ol><h1 id="三、关系型数据库与-NOSQL"><a href="#三、关系型数据库与-NOSQL" class="headerlink" title="三、关系型数据库与 NOSQL"></a>三、关系型数据库与 NOSQL</h1><h2 id="1-NOSQL-使用场景"><a href="#1-NOSQL-使用场景" class="headerlink" title="1.NOSQL 使用场景"></a>1.NOSQL 使用场景</h2><ol><li><p>数据库表经常变动<br>比如在线商城，维护产品的属性经常要增加字段，这就意味着 ORMapping 层的代码和配置要改，如果该表的数据量过百万，新增字段会带来额外开销（重建索引等）</p></li><li><p>数据库表字段是复杂数据类型<br>NoSQL 以 json 方式存储，提供了原生态的支持，在效率方便远远高于传统关系型数据库</p></li><li><p>高并发数据库请求<br>无需经过 SQL 层的解析，读写性能非常高，很多应用对于数据一致性要求很低</p></li><li><p>海量数据的分布式存储<br>NoSQL 分布式存储，可以部署在廉价的硬件上，是一个性价比非常高的解决方案</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql外键优劣</title>
      <link href="/posts/28c1bc23.html"/>
      <url>/posts/28c1bc23.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h2 id="优点："><a href="#优点：" class="headerlink" title="优点："></a>优点：</h2><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">1</span>.由数据库自身保证数据一致性，完整性，更可靠，因为程序很难<span class="number">100</span>％保证数据 的完整性，而用外键即使在数据库服务器当机或者出现其他问题的时候，也能够最大限度的保证数据的一致性和完整性。</span><br><span class="line"><span class="attribute">2</span>.有主外键的数据库设计可以增加ER图(实体-联系图)的可读性，这点在数据库设计时非常重要。</span><br><span class="line"><span class="attribute">3</span>.外键在一定程度上说明的业务逻辑，会使设计周到具体全面</span><br><span class="line"><span class="attribute">4</span>.除非能证明触发器的性能和可维护性比外键更优，否则凭什么一定要否定外键呢？使用应用程序来维护数据完整性，则是严重降低数据库安全性的一种做法。连接字符串里如果有uid和pwd或者类似的这两个东西，可以使用工具获取你数据库的帐号。因为每次建立数据库联接的时候都会在网线上以标准格式传递这些信息。从此编码内的任何保证都是空的。</span><br><span class="line"><span class="attribute">5</span>.不使用外键，会导致数据冗余，在级联最底层的表可能会重复好几层的数据。必然导致最底层的表数据量翻倍，IO瓶颈是数据库性能瓶颈之一</span><br></pre></td></tr></table></figure><h2 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h2><h3 id="性能上"><a href="#性能上" class="headerlink" title="性能上"></a>性能上</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1..数据库需要维护外键的内部管理</span><br><span class="line">2.外键等于把数据的一致性事务实现，全部交给数据库服务器完成</span><br><span class="line">3.有了外键，当做一些涉及外键字段的增，删，更新操作之后，需要触发相关操作去检查，而不得不消耗资源,不用外键时数据管理简单，操作方便，性能高</span><br><span class="line">4.外键还会因为需要请求对其他表内部加锁而容易出现死锁情况</span><br></pre></td></tr></table></figure><h3 id="mysql的外键设计问题"><a href="#mysql的外键设计问题" class="headerlink" title="mysql的外键设计问题"></a>mysql的外键设计问题</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>所有<span class="keyword">tables</span>必须是InnoDB型，它们不能是临时表。</span><br><span class="line"><span class="number">2.</span>在引用表中，必须有一个索引，外键列以同样的顺序被列在其中作为第一列。这样一个索引如果不存在，它必须在引用表里被自动创建。</span><br><span class="line"><span class="number">3.</span>不支持对外键列的索引前缀。这样的后果之一是BLOB和<span class="type">TEXT</span>列不被包括在一个外键中，这是因为对这些列的索引必须总是包含一个前缀长度 </span><br><span class="line"><span class="number">4.</span>InnoDB不对那些外键或包含<span class="keyword">NULL</span>列的被引用键值检查外键约束 </span><br></pre></td></tr></table></figure><h3 id="外键对拓展性的限制和影响"><a href="#外键对拓展性的限制和影响" class="headerlink" title="外键对拓展性的限制和影响"></a>外键对拓展性的限制和影响</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1.外键的主从关系是定的，主键表需要拆分或者重构时，增加成本</span><br><span class="line">2.过分强调或者说使用主键／外键会平添开发难度，导致表过多等问题</span><br></pre></td></tr></table></figure><h3 id="逻辑外键在业界比较成熟"><a href="#逻辑外键在业界比较成熟" class="headerlink" title="逻辑外键在业界比较成熟"></a>逻辑外键在业界比较成熟</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.数据库上的策略：可以选择大多数情况下我们只更新不删除，也就是逻辑删，不再使用的历史数据定期归档来减少压力。</span><br><span class="line">2.代码的设计和限制：对表范围的操作权限，开启事务去处理逻辑，有需要进行异步操作</span><br><span class="line">来提高性能的我们设计补偿机制去弥补，等等。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> mysql </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>摘抄</title>
      <link href="/posts/639b053d.html"/>
      <url>/posts/639b053d.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">三禽言·行不得也哥哥</span><br><span class="line">行不得也哥哥！</span><br><span class="line">十八滩头乱石多。</span><br><span class="line">东去入闽南入海，</span><br><span class="line">溪流湍急岭嵯峨。</span><br><span class="line">行不得也哥哥！</span><br></pre></td></tr></table></figure><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">王国维《蝶恋花·阅尽天涯离别苦》</span><br><span class="line">阅尽天涯离别苦，不道归来，零落花如许。花底相看无一语，绿窗春与天俱莫。(俱莫 一作：俱暮)</span><br><span class="line">待把相思灯下诉，一缕新欢，旧恨千千缕。最是人间留不住，朱颜辞镜花辞树。 </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 摘抄 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 摘抄 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>github vim配置</title>
      <link href="/posts/7dda2c10.html"/>
      <url>/posts/7dda2c10.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot; Vim color file</span></span><br><span class="line"><span class="string">&quot;</span>   This file was generated by Palette</span><br><span class="line"><span class="string">&quot;   http://rubygems.org/gems/palette</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line"><span class="string">&quot; Author: Compiled from a handful of different themes</span></span><br><span class="line"><span class="string">&quot;</span> Notes:  Github color scheme (light)</span><br><span class="line"></span><br><span class="line">hi clear</span><br><span class="line"><span class="keyword">if</span> version &gt; 580</span><br><span class="line">    <span class="keyword">if</span> exists(<span class="string">&quot;syntax_on&quot;</span>)</span><br><span class="line">        syntax reset</span><br><span class="line">    endif</span><br><span class="line">endif</span><br><span class="line"></span><br><span class="line">let <span class="attribute">colors_name</span>=<span class="string">&quot;github&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> has(<span class="string">&quot;gui_running&quot;</span>)</span><br><span class="line">    <span class="built_in">set</span> <span class="attribute">background</span>=light</span><br><span class="line">endif</span><br><span class="line"></span><br><span class="line">hi Normal       <span class="attribute">guifg</span>=#000000 <span class="attribute">ctermfg</span>=16   <span class="attribute">guibg</span>=#F8F8FF <span class="attribute">ctermbg</span>=231  <span class="attribute">gui</span>=NONE <span class="attribute">cterm</span>=NONE</span><br><span class="line">hi DiffAdd      <span class="attribute">guifg</span>=#003300 <span class="attribute">ctermfg</span>=22   <span class="attribute">guibg</span>=#DDFFDD <span class="attribute">ctermbg</span>=194  <span class="attribute">gui</span>=NONE <span class="attribute">cterm</span>=NONE</span><br><span class="line">hi DiffChange   <span class="attribute">guibg</span>=#ECECEC <span class="attribute">ctermbg</span>=255  <span class="attribute">gui</span>=NONE <span class="attribute">cterm</span>=NONE</span><br><span class="line">hi DiffText     <span class="attribute">guifg</span>=#000033 <span class="attribute">ctermfg</span>=17   <span class="attribute">guibg</span>=#DDDDFF <span class="attribute">ctermbg</span>=189  <span class="attribute">gui</span>=NONE <span class="attribute">cterm</span>=NONE</span><br><span class="line">hi DiffDelete   <span class="attribute">guifg</span>=#DDCCCC <span class="attribute">ctermfg</span>=252  <span class="attribute">guibg</span>=#FFDDDD <span class="attribute">ctermbg</span>=224  <span class="attribute">gui</span>=NONE <span class="attribute">cterm</span>=NONE</span><br><span class="line">hi Folded       <span class="attribute">guifg</span>=#808080 <span class="attribute">ctermfg</span>=244  <span class="attribute">guibg</span>=#ECECEC <span class="attribute">ctermbg</span>=255  <span class="attribute">gui</span>=NONE <span class="attribute">cterm</span>=NONE</span><br><span class="line">hi LineNr       <span class="attribute">guifg</span>=#BBBBBB <span class="attribute">ctermfg</span>=250  <span class="attribute">guibg</span>=#ECECEC <span class="attribute">ctermbg</span>=255  <span class="attribute">gui</span>=NONE <span class="attribute">cterm</span>=NONE</span><br><span class="line">hi NonText      <span class="attribute">guifg</span>=#808080 <span class="attribute">ctermfg</span>=244  <span class="attribute">guibg</span>=#ECECEC <span class="attribute">ctermbg</span>=255  <span class="attribute">gui</span>=NONE <span class="attribute">cterm</span>=NONE</span><br><span class="line">hi VertSplit    <span class="attribute">guifg</span>=#BBBBBB <span class="attribute">ctermfg</span>=250  <span class="attribute">guibg</span>=#BBBBBB <span class="attribute">ctermbg</span>=250  <span class="attribute">gui</span>=NONE <span class="attribute">cterm</span>=NONE</span><br><span class="line">hi StatusLine   <span class="attribute">guifg</span>=#404040 <span class="attribute">ctermfg</span>=238  <span class="attribute">guibg</span>=#BBBBBB <span class="attribute">ctermbg</span>=250  <span class="attribute">gui</span>=BOLD <span class="attribute">cterm</span>=BOLD</span><br><span class="line">hi StatusLineNC <span class="attribute">guifg</span>=#BBBBBB <span class="attribute">ctermfg</span>=250  <span class="attribute">guibg</span>=#ECECEC <span class="attribute">ctermbg</span>=255  <span class="attribute">gui</span>=ITALIC <span class="attribute">cterm</span>=NONE</span><br><span class="line">hi ModeMsg      <span class="attribute">guifg</span>=#990000 <span class="attribute">ctermfg</span>=88   <span class="attribute">gui</span>=NONE <span class="attribute">cterm</span>=NONE</span><br><span class="line">hi MoreMsg      <span class="attribute">guifg</span>=#990000 <span class="attribute">ctermfg</span>=88   <span class="attribute">gui</span>=NONE <span class="attribute">cterm</span>=NONE</span><br><span class="line">hi Title        <span class="attribute">guifg</span>=#EF5939 <span class="attribute">ctermfg</span>=203  <span class="attribute">gui</span>=NONE <span class="attribute">cterm</span>=NONE</span><br><span class="line">hi WarningMsg   <span class="attribute">guifg</span>=#EF5939 <span class="attribute">ctermfg</span>=203  <span class="attribute">gui</span>=NONE <span class="attribute">cterm</span>=NONE</span><br><span class="line">hi SpecialKey   <span class="attribute">guifg</span>=#FFFFFF <span class="attribute">ctermfg</span>=231  <span class="attribute">guibg</span>=#FF1100 <span class="attribute">ctermbg</span>=196  <span class="attribute">gui</span>=ITALIC <span class="attribute">cterm</span>=NONE</span><br><span class="line">hi MatchParen   <span class="attribute">guifg</span>=#000000 <span class="attribute">ctermfg</span>=16   <span class="attribute">guibg</span>=#CDCDFD <span class="attribute">ctermbg</span>=189  <span class="attribute">gui</span>=NONE <span class="attribute">cterm</span>=NONE</span><br><span class="line">hi Underlined   <span class="attribute">guifg</span>=#000000 <span class="attribute">ctermfg</span>=16   <span class="attribute">gui</span>=UNDERLINE <span class="attribute">cterm</span>=UNDERLINE</span><br><span class="line">hi Directory    <span class="attribute">guifg</span>=#990000 <span class="attribute">ctermfg</span>=88   <span class="attribute">gui</span>=NONE <span class="attribute">cterm</span>=NONE</span><br><span class="line">hi Visual       <span class="attribute">guifg</span>=#FFFFFF <span class="attribute">ctermfg</span>=231  <span class="attribute">guibg</span>=#3465A4 <span class="attribute">ctermbg</span>=61   <span class="attribute">gui</span>=NONE <span class="attribute">cterm</span>=NONE</span><br><span class="line">hi VisualNOS    <span class="attribute">guifg</span>=#FFFFFF <span class="attribute">ctermfg</span>=231  <span class="attribute">guibg</span>=#204A87 <span class="attribute">ctermbg</span>=24   <span class="attribute">gui</span>=NONE <span class="attribute">cterm</span>=NONE</span><br><span class="line">hi IncSearch    <span class="attribute">guifg</span>=#000000 <span class="attribute">ctermfg</span>=16   <span class="attribute">guibg</span>=#CDCDFD <span class="attribute">ctermbg</span>=189  <span class="attribute">gui</span>=ITALIC <span class="attribute">cterm</span>=NONE</span><br><span class="line">hi Search       <span class="attribute">guifg</span>=#000000 <span class="attribute">ctermfg</span>=16   <span class="attribute">guibg</span>=#CDCDFD <span class="attribute">ctermbg</span>=189  <span class="attribute">gui</span>=ITALIC <span class="attribute">cterm</span>=NONE</span><br><span class="line">hi Ignore       <span class="attribute">guifg</span>=#808080 <span class="attribute">ctermfg</span>=244  <span class="attribute">gui</span>=NONE <span class="attribute">cterm</span>=NONE</span><br><span class="line">hi Identifier   <span class="attribute">guifg</span>=#0086B3 <span class="attribute">ctermfg</span>=31   <span class="attribute">gui</span>=NONE <span class="attribute">cterm</span>=NONE</span><br><span class="line">hi PreProc      <span class="attribute">guifg</span>=#A0A0A0 <span class="attribute">ctermfg</span>=247  <span class="attribute">gui</span>=BOLD <span class="attribute">cterm</span>=BOLD</span><br><span class="line">hi Comment      <span class="attribute">guifg</span>=#AAAAAA <span class="attribute">ctermfg</span>=248  <span class="attribute">gui</span>=ITALIC <span class="attribute">cterm</span>=NONE</span><br><span class="line">hi Constant     <span class="attribute">guifg</span>=#177F80 <span class="attribute">ctermfg</span>=30   <span class="attribute">gui</span>=NONE <span class="attribute">cterm</span>=NONE</span><br><span class="line">hi String       <span class="attribute">guifg</span>=#D81745 <span class="attribute">ctermfg</span>=161  <span class="attribute">gui</span>=NONE <span class="attribute">cterm</span>=NONE</span><br><span class="line">hi Function     <span class="attribute">guifg</span>=#990000 <span class="attribute">ctermfg</span>=88   <span class="attribute">gui</span>=BOLD <span class="attribute">cterm</span>=BOLD</span><br><span class="line">hi Statement    <span class="attribute">guifg</span>=#000000 <span class="attribute">ctermfg</span>=16   <span class="attribute">gui</span>=BOLD <span class="attribute">cterm</span>=BOLD</span><br><span class="line">hi<span class="built_in"> Type </span>        <span class="attribute">guifg</span>=#445588 <span class="attribute">ctermfg</span>=60   <span class="attribute">gui</span>=BOLD <span class="attribute">cterm</span>=BOLD</span><br><span class="line">hi Number       <span class="attribute">guifg</span>=#1C9898 <span class="attribute">ctermfg</span>=30   <span class="attribute">gui</span>=NONE <span class="attribute">cterm</span>=NONE</span><br><span class="line">hi Todo         <span class="attribute">guifg</span>=#FFFFFF <span class="attribute">ctermfg</span>=231  <span class="attribute">guibg</span>=#990000 <span class="attribute">ctermbg</span>=88   <span class="attribute">gui</span>=BOLD <span class="attribute">cterm</span>=BOLD</span><br><span class="line">hi Special      <span class="attribute">guifg</span>=#159828 <span class="attribute">ctermfg</span>=28   <span class="attribute">gui</span>=BOLD <span class="attribute">cterm</span>=BOLD</span><br><span class="line">hi rubySymbol   <span class="attribute">guifg</span>=#960B73 <span class="attribute">ctermfg</span>=89   <span class="attribute">gui</span>=NONE <span class="attribute">cterm</span>=NONE</span><br><span class="line">hi <span class="built_in">Error</span>        <span class="attribute">guifg</span>=#F8F8FF <span class="attribute">ctermfg</span>=231  <span class="attribute">guibg</span>=#FF1100 <span class="attribute">ctermbg</span>=196  <span class="attribute">gui</span>=NONE <span class="attribute">cterm</span>=NONE</span><br><span class="line">hi Todo         <span class="attribute">guifg</span>=#F8F8FF <span class="attribute">ctermfg</span>=231  <span class="attribute">guibg</span>=#FF1100 <span class="attribute">ctermbg</span>=196  <span class="attribute">gui</span>=UNDERLINE <span class="attribute">cterm</span>=UNDERLINE</span><br><span class="line">hi Label        <span class="attribute">guifg</span>=#000000 <span class="attribute">ctermfg</span>=16   <span class="attribute">gui</span>=BOLD <span class="attribute">cterm</span>=BOLD</span><br><span class="line">hi StorageClass <span class="attribute">guifg</span>=#000000 <span class="attribute">ctermfg</span>=16   <span class="attribute">gui</span>=BOLD <span class="attribute">cterm</span>=BOLD</span><br><span class="line">hi Structure    <span class="attribute">guifg</span>=#000000 <span class="attribute">ctermfg</span>=16   <span class="attribute">gui</span>=BOLD <span class="attribute">cterm</span>=BOLD</span><br><span class="line">hi TypeDef      <span class="attribute">guifg</span>=#000000 <span class="attribute">ctermfg</span>=16   <span class="attribute">gui</span>=BOLD <span class="attribute">cterm</span>=BOLD</span><br><span class="line">hi WildMenu     <span class="attribute">guifg</span>=#7FBDFF <span class="attribute">ctermfg</span>=111  <span class="attribute">guibg</span>=#425C78 <span class="attribute">ctermbg</span>=60   <span class="attribute">gui</span>=NONE <span class="attribute">cterm</span>=NONE</span><br><span class="line">hi Pmenu        <span class="attribute">guifg</span>=#FFFFFF <span class="attribute">ctermfg</span>=231  <span class="attribute">guibg</span>=#808080 <span class="attribute">ctermbg</span>=244  <span class="attribute">gui</span>=BOLD <span class="attribute">cterm</span>=BOLD</span><br><span class="line">hi PmenuSel     <span class="attribute">guifg</span>=#000000 <span class="attribute">ctermfg</span>=16   <span class="attribute">guibg</span>=#CDCDFD <span class="attribute">ctermbg</span>=189  <span class="attribute">gui</span>=ITALIC <span class="attribute">cterm</span>=NONE</span><br><span class="line">hi PmenuSbar    <span class="attribute">guifg</span>=#444444 <span class="attribute">ctermfg</span>=238  <span class="attribute">guibg</span>=#000000 <span class="attribute">ctermbg</span>=16   <span class="attribute">gui</span>=NONE <span class="attribute">cterm</span>=NONE</span><br><span class="line">hi PmenuThumb   <span class="attribute">guifg</span>=#AAAAAA <span class="attribute">ctermfg</span>=248  <span class="attribute">guibg</span>=#AAAAAA <span class="attribute">ctermbg</span>=248  <span class="attribute">gui</span>=NONE <span class="attribute">cterm</span>=NONE</span><br><span class="line">hi TabLine      <span class="attribute">guifg</span>=#404040 <span class="attribute">ctermfg</span>=238  <span class="attribute">guibg</span>=#DDDDDD <span class="attribute">ctermbg</span>=253  <span class="attribute">gui</span>=NONE <span class="attribute">cterm</span>=NONE</span><br><span class="line">hi TabLineFill  <span class="attribute">guifg</span>=#404040 <span class="attribute">ctermfg</span>=238  <span class="attribute">guibg</span>=#DDDDDD <span class="attribute">ctermbg</span>=253  <span class="attribute">gui</span>=NONE <span class="attribute">cterm</span>=NONE</span><br><span class="line">hi TabLineSel   <span class="attribute">guifg</span>=#404040 <span class="attribute">ctermfg</span>=238  <span class="attribute">gui</span>=BOLD <span class="attribute">cterm</span>=BOLD</span><br><span class="line">hi cucumberTags <span class="attribute">guifg</span>=#333333 <span class="attribute">ctermfg</span>=236  <span class="attribute">guibg</span>=#FFFF66 <span class="attribute">ctermbg</span>=227  <span class="attribute">gui</span>=BOLD <span class="attribute">cterm</span>=BOLD</span><br><span class="line">hi htmlTagN     <span class="attribute">gui</span>=BOLD <span class="attribute">cterm</span>=BOLD</span><br><span class="line">hi Cursor       <span class="attribute">guifg</span>=#F8F8FF <span class="attribute">ctermfg</span>=231  <span class="attribute">guibg</span>=#444454 <span class="attribute">ctermbg</span>=238  <span class="attribute">gui</span>=NONE <span class="attribute">cterm</span>=NONE</span><br><span class="line">hi CursorLine   <span class="attribute">guibg</span>=#D8D8DD <span class="attribute">ctermbg</span>=253  <span class="attribute">gui</span>=NONE <span class="attribute">cterm</span>=NONE</span><br><span class="line">hi CursorColumn <span class="attribute">guibg</span>=#D8D8DD <span class="attribute">ctermbg</span>=253  <span class="attribute">gui</span>=NONE <span class="attribute">cterm</span>=NONE</span><br><span class="line"></span><br><span class="line">hi link rubyStringDelimiter String</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 其他 </category>
          
          <category> 配置文件 </category>
          
          <category> vim </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vim </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux下安装docker</title>
      <link href="/posts/b83e5bf.html"/>
      <url>/posts/b83e5bf.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="linux下安装"><a href="#linux下安装" class="headerlink" title="linux下安装"></a>linux下安装</h1><p>一、安装docker</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">如果没有yum-config-mange需要安装</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">yum -y install yum-utils</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">增加国内docker源</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">yum-config-manager --add-repo https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装docker</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">yum install docker-ce docker-compose</span></span><br></pre></td></tr></table></figure><h1 id="建立用户组"><a href="#建立用户组" class="headerlink" title="建立用户组"></a>建立用户组</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> groupadd docker</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">将当前用户加入docker用户组</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> usermod -aG docker <span class="variable">$USER</span></span></span><br></pre></td></tr></table></figure><h1 id="配置镜像加速"><a href="#配置镜像加速" class="headerlink" title="配置镜像加速"></a>配置镜像加速</h1><h2 id="查看是否在docker-service配置过镜像地址"><a href="#查看是否在docker-service配置过镜像地址" class="headerlink" title="查看是否在docker.service配置过镜像地址"></a>查看是否在docker.service配置过镜像地址</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">systemctl <span class="built_in">cat</span> docker | grep <span class="string">&#x27;\-\-registry\-mirror&#x27;</span></span></span><br></pre></td></tr></table></figure><h2 id="配置加速"><a href="#配置加速" class="headerlink" title="配置加速"></a>配置加速</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">mkdir</span> /etc/docker</span><br><span class="line">$ vim /etc/docker/daemon.json</span><br><span class="line"></span><br><span class="line"><span class="comment"># 写入内容</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;registry-mirrors&quot;</span>: [</span><br><span class="line">    <span class="string">&quot;https://hub-mirror.c.163.com&quot;</span>,</span><br><span class="line">    <span class="string">&quot;https://mirror.baidubce.com&quot;</span></span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="重启服务"><a href="#重启服务" class="headerlink" title="重启服务"></a>重启服务</h2><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>systemctl daemon-reload</span><br><span class="line"><span class="variable">$ </span>systemctl restart docker</span><br></pre></td></tr></table></figure><h2 id="检查加速器是否生效"><a href="#检查加速器是否生效" class="headerlink" title="检查加速器是否生效"></a>检查加速器是否生效</h2><p>执行 <code>$ docker info</code>，如果从结果中看到了如下内容，说明配置成功。</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Registry Mirrors:</span><br><span class="line"><span class="symbol">  https:</span><span class="comment">//hub-mirror.c.163.com/</span></span><br><span class="line"><span class="symbol">  https:</span><span class="comment">//mirror.baidubce.com/</span></span><br></pre></td></tr></table></figure><h1 id="问题处理"><a href="#问题处理" class="headerlink" title="问题处理"></a>问题处理</h1><h2 id="Failed-to-start-Docker-Application-Container-Engine"><a href="#Failed-to-start-Docker-Application-Container-Engine" class="headerlink" title="Failed to start Docker Application Container Engine."></a>Failed to start Docker Application Container Engine.</h2><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ vim <span class="regexp">/usr/</span>lib<span class="regexp">/systemd/</span>system/docker.service</span><br><span class="line"># 将</span><br><span class="line">#ExecStart=<span class="regexp">/usr/</span>bin<span class="regexp">/dockerd -H fd:/</span><span class="regexp">/ --containerd=/</span>run<span class="regexp">/containerd/</span>containerd.sock</span><br><span class="line"># 修改为</span><br><span class="line">ExecStart=<span class="regexp">/usr/</span>bin<span class="regexp">/dockerd -H tcp:/</span><span class="regexp">/0.0.0.0:2375 -H unix:/</span><span class="regexp">/var/</span>run/docker.sock</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>elasticsearch安装</title>
      <link href="/posts/b99f8e70.html"/>
      <url>/posts/b99f8e70.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>Elastic 需要 Java 8 环境。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> <span class="built_in">wget</span> https://artifacts.elastic.co/downloads/elasticsearch/elastic<span class="built_in">search-8</span>.<span class="number">4.2</span><span class="literal">-linux-x86_64</span>.tar.gz</span><br><span class="line"><span class="variable">$</span> tar xzvf elastic<span class="built_in">search-8</span>.<span class="number">4.2</span><span class="literal">-linux-x86_64</span>.tar.gz</span><br></pre></td></tr></table></figure><h1 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">elastic/bin/elasticsearch</span></span><br></pre></td></tr></table></figure><h1 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h1><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 访问host</span></span><br><span class="line"><span class="attr">http.host:</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line"><span class="comment"># 访问端口</span></span><br><span class="line"><span class="attr">http.port:</span> <span class="number">9200</span></span><br></pre></td></tr></table></figure><h1 id="问题处理"><a href="#问题处理" class="headerlink" title="问题处理"></a>问题处理</h1><h2 id="Failure-running-machine-learning-native-code-unsupported-OS-or-distribution…"><a href="#Failure-running-machine-learning-native-code-unsupported-OS-or-distribution…" class="headerlink" title="Failure running machine learning native code - unsupported OS or distribution…"></a>Failure running machine learning native code - unsupported OS or distribution…</h2><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ vim <span class="symbol">./config/elasticsearch.yml</span></span><br><span class="line"><span class="comment"># 添加</span></span><br><span class="line">xpack.ml.<span class="params">enabled:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><h2 id="本地无法启动"><a href="#本地无法启动" class="headerlink" title="本地无法启动"></a>本地无法启动</h2><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 关闭安全</span></span><br><span class="line">$ vim <span class="symbol">./config/elasticsearch.yml</span></span><br><span class="line">xpack.security.<span class="params">enabled:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><h2 id="system-call-filters-failed-to-install-check-the-logs-and-fix-your-configuration-or-disable-system-call-filters"><a href="#system-call-filters-failed-to-install-check-the-logs-and-fix-your-configuration-or-disable-system-call-filters" class="headerlink" title="system call filters failed to install; check the logs and fix your configuration or disable system call filters"></a>system call filters failed to install; check the logs and fix your configuration or disable system call filters</h2><figure class="highlight nsis"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">原因：</span><br><span class="line">这是在因为Centos6不支持SecComp，而ES5.<span class="number">2.0</span>默认bootstrap.<span class="params">system</span>_call_filter为<span class="literal">true</span>进行检测，所以导致检测失败，失败后直接导致ES不能启动。</span><br><span class="line">解决：</span><br><span class="line">在elasticsearch.yml中配置bootstrap.<span class="params">system</span>_call_filter为<span class="literal">false</span>，注意要在Memory下面:</span><br><span class="line">bootstrap.memory_lock: <span class="literal">false</span></span><br><span class="line">bootstrap.<span class="params">system</span>_call_filter: <span class="literal">false</span></span><br></pre></td></tr></table></figure><h2 id="max-number-of-threads-2048-for-user-to-low"><a href="#max-number-of-threads-2048-for-user-to-low" class="headerlink" title="max number of threads [2048] for user to low"></a>max number of threads [2048] for user to low</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ vim /etc/security/limits.conf</span><br><span class="line">添加</span><br><span class="line">hadoop soft nofile 65536</span><br><span class="line">hadoop hard nofile 131072</span><br><span class="line">hadoop soft <span class="built_in">nproc</span> 4096</span><br><span class="line">hadoop hard <span class="built_in">nproc</span> 4096</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> elasticsearch </category>
          
      </categories>
      
      
        <tags>
            
            <tag> elasticsearch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>elasticsearch-head</title>
      <link href="/posts/33ca46c0.html"/>
      <url>/posts/33ca46c0.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><p>新建索引时，报错{“error”:”Content-Type header [application&#x2F;x-www-form-urlencoded] is not supported”,”status”:406}<br>解决方法:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">进入<span class="built_in">head</span>安装目录编辑vendor.js 共有两处</span><br><span class="line">①. 6886行 contentType: <span class="string">&quot;application/x-www-form-urlencoded</span></span><br><span class="line"><span class="string">改成</span></span><br><span class="line"><span class="string">contentType: &quot;</span>application/json;charset=UTF-8<span class="string">&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">②. 7573行 var inspectData = s.contentType === &quot;</span>application/x-www-form-urlencoded<span class="string">&quot; &amp;&amp;</span></span><br><span class="line"><span class="string">改成</span></span><br><span class="line"><span class="string">var inspectData = s.contentType === &quot;</span>application/json;charset=UTF-8<span class="string">&quot; &amp;&amp;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> elasticsearch </category>
          
      </categories>
      
      
        <tags>
            
            <tag> elasticsearch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nginx记录</title>
      <link href="/posts/e66d5b16.html"/>
      <url>/posts/e66d5b16.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h2 id="rewrite-后的请求参数"><a href="#rewrite-后的请求参数" class="headerlink" title="rewrite 后的请求参数"></a>rewrite 后的请求参数</h2><p>如果替换字符串replacement包含新的请求参数，则在它们之后附加先前的请求参数。<br>如果你不想要之前的参数，则在替换字符串 replacement 的末尾放置一个问号，避免附加它们。</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">rewrite</span> regex replacement [flag];</span><br><span class="line"><span class="comment"># 由于最后加了个 ?，原来的请求参数将不会被追加到rewrite之后的url后面 </span></span><br><span class="line"><span class="attribute">rewrite</span><span class="regexp"> ^\(.*)$</span> /req?act=<span class="variable">$1</span>? <span class="literal">last</span>;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vagrant扩充硬盘</title>
      <link href="/posts/34964111.html"/>
      <url>/posts/34964111.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="记录原始硬盘的uuid"><a href="#记录原始硬盘的uuid" class="headerlink" title="记录原始硬盘的uuid"></a>记录原始硬盘的uuid</h1><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>vboxmanage showhdinfo centos-vm-disk1.vmdk</span><br></pre></td></tr></table></figure><h1 id="制作扩容硬盘"><a href="#制作扩容硬盘" class="headerlink" title="制作扩容硬盘"></a>制作扩容硬盘</h1><h2 id="将原本的格式转换"><a href="#将原本的格式转换" class="headerlink" title="将原本的格式转换"></a>将原本的格式转换</h2><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vboxmanage centos_centos7onehd <span class="string">&quot;centos-vm-disk1.vmdk&quot;</span> <span class="string">&quot;new-virtualdisk.vdi&quot;</span> <span class="comment">--format vdi</span></span><br></pre></td></tr></table></figure><h2 id="将硬盘容量扩容"><a href="#将硬盘容量扩容" class="headerlink" title="将硬盘容量扩容"></a>将硬盘容量扩容</h2><p>单位是MB</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vboxmanage modifyhd <span class="string">&quot;new-virtualdisk.vdi&quot;</span> <span class="comment">--resize 30720</span></span><br></pre></td></tr></table></figure><h2 id="硬盘类型转换回原本"><a href="#硬盘类型转换回原本" class="headerlink" title="硬盘类型转换回原本"></a>硬盘类型转换回原本</h2><p>非必要</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ VBoxManage centos_centos7onehd <span class="string">&quot;new-virtualdisk.vdi&quot;</span> <span class="string">&quot;resized.vmdk&quot;</span> <span class="comment">--format vmdk</span></span><br></pre></td></tr></table></figure><h2 id="使用新制造硬盘替换原硬盘重新挂载磁盘到虚拟机"><a href="#使用新制造硬盘替换原硬盘重新挂载磁盘到虚拟机" class="headerlink" title="使用新制造硬盘替换原硬盘重新挂载磁盘到虚拟机"></a>使用新制造硬盘替换原硬盘重新挂载磁盘到虚拟机</h2><p>使用命令或者直接修改virtualbox的存储为扩容后的文件</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ VBoxManage storageattach <span class="number">16</span><span class="built_in">c94808-3de9-4de5-8919-d8b875fbc5e9</span>(uuid的值) <span class="attr">--storagectl</span> &quot;SATA Controller&quot; <span class="attr">--port</span> <span class="number">0</span> <span class="attr">--device</span> <span class="number">0</span> <span class="attr">--type</span> hdd <span class="attr">--medium</span> resized<span class="selector-class">.vmdk</span></span><br></pre></td></tr></table></figure><h1 id="将新硬盘载入"><a href="#将新硬盘载入" class="headerlink" title="将新硬盘载入"></a>将新硬盘载入</h1><h2 id="重启虚拟机"><a href="#重启虚拟机" class="headerlink" title="重启虚拟机"></a>重启虚拟机</h2><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">vagrant reload</span></span><br></pre></td></tr></table></figure><h2 id="使用fdisk分区扩容"><a href="#使用fdisk分区扩容" class="headerlink" title="使用fdisk分区扩容"></a>使用fdisk分区扩容</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> fdisk -l</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> fdisk /dev/sda</span></span><br><span class="line"></span><br><span class="line">按p显示分区表，默认是 sda1 和 sda2。</span><br><span class="line">按n新建主分区。</span><br><span class="line">按p设置为主分区。</span><br><span class="line">输入3设置为第三分区。</span><br><span class="line">输入一次回车设置默认磁盘位置。</span><br><span class="line">再输入一次回车设置默认磁盘位置。</span><br><span class="line">输入t改变分区格式</span><br><span class="line">输入3选择第三分区</span><br><span class="line">输入8e格式成LVM格式</span><br><span class="line">输入w执行保存</span><br></pre></td></tr></table></figure><h2 id="重启虚拟机-1"><a href="#重启虚拟机-1" class="headerlink" title="重启虚拟机"></a>重启虚拟机</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> reboot</span></span><br></pre></td></tr></table></figure><h2 id="查看硬盘信息"><a href="#查看硬盘信息" class="headerlink" title="查看硬盘信息"></a>查看硬盘信息</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> fdisk -l</span></span><br></pre></td></tr></table></figure><h2 id="给新的分区创建物理卷"><a href="#给新的分区创建物理卷" class="headerlink" title="给新的分区创建物理卷"></a>给新的分区创建物理卷</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> pvcreate /dev/sda3</span></span><br></pre></td></tr></table></figure><p>查看VG Name</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> pvdisplay | grep <span class="string">&quot;VG Name&quot;</span></span></span><br></pre></td></tr></table></figure><p>查看卷组，将新分区扩展到VG Name这个组</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> vgdisplay</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> vgextend centos_centos7 /dev/sda3</span></span><br></pre></td></tr></table></figure><p>扩展逻辑分区</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> lvextend /dev/mapper/centos_centos7-root /dev/sda3</span><br></pre></td></tr></table></figure><p>更新文件系统,resize并且生效<br>centos6</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> resize2fs /dev/mapper/centos_centos7-root</span></span><br></pre></td></tr></table></figure><p>centos7</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> xfs_growfs /dev/mapper/centos_centos7-root</span></span><br></pre></td></tr></table></figure><p>重启虚拟机</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>vagrant reload</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> vagrant </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vagrant </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>两数之和</title>
      <link href="/posts/d98ef1d2.html"/>
      <url>/posts/d98ef1d2.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><p>给定一个整数数组 nums 和一个整数目标值 target，请你在该数组中找出 和为目标值 target  的那 两个 整数，并返回它们的数组下标。<br>你可以假设每种输入只会对应一个答案。但是，数组中同一个元素在答案里不能重复出现。<br>你可以按任意顺序返回答案。</p><p>示例:</p><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：nums = <span class="comment">[2,7,11,15]</span>, target = 9</span><br><span class="line">输出：<span class="comment">[0,1]</span></span><br><span class="line">解释：因为 nums<span class="comment">[0]</span> + nums<span class="comment">[1]</span> == 9 ，返回 <span class="comment">[0, 1]</span> 。</span><br></pre></td></tr></table></figure><p>思路：</p><ul><li>hash通过下标获取数据时间复杂度O(1)</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> Integer[] $nums</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> Integer $target</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> Integer[]</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">twoSum</span>(<span class="params"><span class="variable">$nums</span>, <span class="variable">$target</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$dic</span> = [];</span><br><span class="line">        <span class="keyword">foreach</span>(<span class="variable">$nums</span> <span class="keyword">as</span> <span class="variable">$i</span> =&gt; <span class="variable">$num</span>) &#123;</span><br><span class="line">            <span class="variable">$value</span> = <span class="variable">$target</span> - <span class="variable">$num</span>;</span><br><span class="line">            <span class="comment">// 判断数组中是否存在$value的下标</span></span><br><span class="line">            <span class="comment">// 如果存在则直接返回下标</span></span><br><span class="line">            <span class="comment">// 如果不存在则将当前的值为key，下标为value写入数组</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$dic</span>[<span class="variable">$value</span>])) &#123;</span><br><span class="line">                <span class="keyword">return</span> [<span class="variable">$dic</span>[<span class="variable">$value</span>], <span class="variable">$i</span>];</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$dic</span>[<span class="variable">$num</span>] = <span class="variable">$i</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> 题库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>无重复字符的最长子串</title>
      <link href="/posts/4cd9164b.html"/>
      <url>/posts/4cd9164b.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><p>给定一个字符串 s ，请你找出其中不含有重复字符的 最长子串 的长度。</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">输入: s = &quot;pwwkew&quot;</span></span><br><span class="line"><span class="section">输出: 3</span></span><br><span class="line"><span class="section">解释: 因为无重复字符的最长子串是 &quot;wke&quot;，所以其长度为 3。</span></span><br><span class="line">     请注意，你的答案必须是 子串 的长度，<span class="string">&quot;pwke&quot;</span> 是一个子序列，不是子串。</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> String $s</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> Integer</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">lengthOfLongestSubstring</span>(<span class="params"><span class="variable">$s</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 维护一个滑动窗口，窗口内为无重复字符的最长子串</span></span><br><span class="line">    <span class="comment">// 以 pwwkew 为例，遍历整个字符串</span></span><br><span class="line">    <span class="comment">// left 为滑动窗口起点索引， i 为滑动窗口终点索引</span></span><br><span class="line">    <span class="comment">// hash 记录当前滑动窗口内的字母，键为 字母，值为 索引</span></span><br><span class="line">    <span class="comment">// 全局 max 记录窗口最大长度</span></span><br><span class="line">    <span class="comment">// left=i=0, 窗口内只有一个字母 p, length=1, hash=[&#x27;p&#x27; =&gt; 0]</span></span><br><span class="line">    <span class="comment">// left=0, i=1, 索引 1 对应的字母 w 不在 hash 内，窗口向右滑动, length=2, hash=[&#x27;p&#x27; =&gt; 0, &#x27;w&#x27; =&gt; 1]</span></span><br><span class="line">    <span class="comment">// left=0, right=2, 索引 2 对应的字母 w 在 hash 内,窗口起点要更新为上一个 w 的索引的下一个位置,left=hash[&#x27;w&#x27;] + 1.</span></span><br><span class="line">    <span class="comment">// 同时， hash[&#x27;w&#x27;] 更新为新的索引 ，指向最后一个 w, hash=[&#x27;p&#x27; =&gt; 0, &#x27;w&#x27; =&gt; 2]</span></span><br><span class="line">    <span class="variable">$length</span> = <span class="title function_ invoke__">strlen</span>(<span class="variable">$s</span>);</span><br><span class="line">    <span class="variable">$left</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="variable">$hash</span> = [];</span><br><span class="line">    <span class="variable">$max</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$length</span>; ++<span class="variable">$i</span>) &#123;</span><br><span class="line">        <span class="variable">$char</span> = <span class="variable">$s</span>[<span class="variable">$i</span>];</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$hash</span>[<span class="variable">$char</span>])) &#123;</span><br><span class="line">            <span class="variable">$left</span> = <span class="title function_ invoke__">max</span>(<span class="variable">$left</span>, <span class="variable">$hash</span>[<span class="variable">$char</span>] + <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 由于剩余的数据可达到的最大字符长度超过$max,提前结束遍历</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$left</span> + <span class="variable">$max</span> &gt;= <span class="variable">$length</span>) <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$hash</span>[<span class="variable">$char</span>] = <span class="variable">$i</span>;</span><br><span class="line">        <span class="comment">// 右边索引 - 左边索引，计算出目前抽屉里的值的个数</span></span><br><span class="line">        <span class="variable">$max</span> = <span class="title function_ invoke__">max</span>(<span class="variable">$max</span>, <span class="variable">$i</span> - <span class="variable">$left</span> + <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$max</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$str</span> = <span class="string">&quot;pwwkeeww&quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">lengthOfLongestSubstring</span>(<span class="variable">$str</span>));</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> 题库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vscode代码片段</title>
      <link href="/posts/59473344.html"/>
      <url>/posts/59473344.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="comment">// Place your snippets for markdown here. Each snippet is defined under a snippet name and has a prefix, body and </span></span><br><span class="line"><span class="comment">// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:</span></span><br><span class="line"><span class="comment">// $1, $2 for tab stops, $0 for the final cursor position, and $&#123;1:label&#125;, $&#123;2:another&#125; for placeholders. Placeholders with the </span></span><br><span class="line"><span class="comment">// same ids are connected.</span></span><br><span class="line"><span class="comment">// Example:</span></span><br><span class="line"><span class="string">&quot;markdown&quot;</span>: &#123;</span><br><span class="line"><span class="string">&quot;prefix&quot;</span>: <span class="string">&quot;markdown&quot;</span>,</span><br><span class="line"><span class="string">&quot;body&quot;</span>: [</span><br><span class="line"><span class="string">&quot;---&quot;</span>,</span><br><span class="line"><span class="string">&quot;title: &quot;</span>,</span><br><span class="line"><span class="string">&quot;date: &#123;&#123;Date&#125;&#125;&quot;</span>,</span><br><span class="line">  <span class="string">&quot;&quot;</span>,</span><br><span class="line"><span class="string">&quot;tags:&quot;</span>,</span><br><span class="line">  <span class="string">&quot;- &quot;</span>,</span><br><span class="line"><span class="string">&quot;categories:&quot;</span>,</span><br><span class="line">  <span class="string">&quot;- &quot;</span></span><br><span class="line"><span class="string">&quot;---&quot;</span>,</span><br><span class="line"><span class="string">&quot;&lt;Excerpt in index | 首页摘要&gt;&quot;</span>,</span><br><span class="line"><span class="string">&quot;&quot;</span>,</span><br><span class="line"><span class="string">&quot;&lt;!-- more --&gt;&quot;</span>,</span><br><span class="line"><span class="string">&quot;&lt;The rest of contents | 余下全文&gt;&quot;</span>,</span><br><span class="line"><span class="string">&quot;<span class="subst">\n</span>&quot;</span>,</span><br><span class="line">],</span><br><span class="line"><span class="string">&quot;description&quot;</span>: <span class="string">&quot;markdown header template&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 其他 </category>
          
          <category> vscode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vscode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>远程登录配置</title>
      <link href="/posts/3f8e3d32.html"/>
      <url>/posts/3f8e3d32.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Host vagrant</span><br><span class="line">  HostName 127.0.0.1</span><br><span class="line"> <span class="built_in"> User </span>vagrant</span><br><span class="line"> <span class="built_in"> Port </span>2222</span><br><span class="line">  UserKnownHostsFile /dev/<span class="literal">null</span></span><br><span class="line">  StrictHostKeyChecking <span class="literal">no</span></span><br><span class="line">  PasswordAuthentication <span class="literal">no</span></span><br><span class="line">  IdentityFile G:/vagrantVMS/boxes/centos7-v1/0/virtualbox/vagrant_private_key</span><br><span class="line">  IdentitiesOnly <span class="literal">yes</span></span><br><span class="line">  LogLevel FATAL</span><br><span class="line"></span><br><span class="line"><span class="comment"># 免密登录</span></span><br><span class="line">Host docker-php</span><br><span class="line">  HostName 172.18.0.1</span><br><span class="line"> <span class="built_in"> Port </span>2233</span><br><span class="line"> <span class="built_in"> User </span>root</span><br><span class="line">  IdentitiesOnly <span class="literal">yes</span></span><br><span class="line">  LogLevel FATAL</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 其他 </category>
          
          <category> vscode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vscode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pgrep</title>
      <link href="/posts/86fb8a88.html"/>
      <url>/posts/86fb8a88.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h1><p>pgrep是一个命令行实用程序，可让您根据给定的条件查找正在运行的程序的进程ID。</p><ul><li>d设置一个字符串，用于分隔输出的每个进程ID</li><li>f模式参数仅用于匹配进程名</li><li>I列出进程名及进程ID</li><li>P仅选择匹配指定父进程ID的进程</li><li>u选择仅匹配指定有效用户ID进程</li><li>U选择仅匹配指定真实用户ID的进程</li></ul>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>top</title>
      <link href="/posts/1ed91fca.html"/>
      <url>/posts/1ed91fca.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="语法说明"><a href="#语法说明" class="headerlink" title="语法说明"></a>语法说明</h1><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">top</span> <span class="selector-attr">[-]</span> <span class="selector-attr">[d delay]</span> <span class="selector-attr">[q]</span> <span class="selector-attr">[c]</span> <span class="selector-attr">[S]</span> <span class="selector-attr">[s]</span> <span class="selector-attr">[i]</span> <span class="selector-attr">[n]</span> <span class="selector-attr">[b]</span></span><br></pre></td></tr></table></figure><h1 id="参数说明："><a href="#参数说明：" class="headerlink" title="参数说明："></a>参数说明：</h1><ul><li>d : 改变显示的更新速度，或是在交谈式指令列( interactive command)按 s</li><li>q : 没有任何延迟的显示速度，如果使用者是有 superuser 的权限，则 top 将会以最高的优先序执行</li><li>c : 切换显示模式，共有两种模式，一是只显示执行档的名称，另一种是显示完整的路径与名称</li><li>S : 累积模式，会将己完成或消失的子进程 ( dead child process ) 的 CPU time 累积起来</li><li>s : 安全模式，将交谈式指令取消, 避免潜在的危机</li><li>i : 不显示任何闲置 (idle) 或无用 (zombie) 的进程</li><li>n : 更新的次数，完成后将会退出 top</li><li>b : 批次档模式，搭配 “n” 参数一起使用，可以用来将 top 的结果输出到档案内</li></ul><h1 id="通过匹配查看"><a href="#通过匹配查看" class="headerlink" title="通过匹配查看"></a>通过匹配查看</h1><h3 id="使用pgrep来获得匹配命令行的pid："><a href="#使用pgrep来获得匹配命令行的pid：" class="headerlink" title="使用pgrep来获得匹配命令行的pid："></a>使用pgrep来获得匹配命令行的pid：</h3><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> top <span class="literal">-c</span> <span class="literal">-p</span> <span class="variable">$</span>(pgrep <span class="literal">-d</span><span class="string">&#x27;,&#x27;</span> <span class="operator">-f</span> COMMAND中需要匹配的文字) </span><br></pre></td></tr></table></figure><h3 id="交互方式"><a href="#交互方式" class="headerlink" title="交互方式"></a>交互方式</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ top -c</span><br><span class="line">输入o，写入<span class="attribute">COMMAND</span>=需要匹配的文字</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>获取硬盘类型</title>
      <link href="/posts/551b1547.html"/>
      <url>/posts/551b1547.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h1><p>判断cat &#x2F;sys&#x2F;block&#x2F;<em>&#x2F;queue&#x2F;rotational的返回值（其中</em>为你的硬盘设备名称，例如sda等等），如果返回1 则表示磁盘可旋转，那么就是HDD了；<br>如果返回0，则表示磁盘不可以旋转，那么就是SSD了。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ cat /sys/block/sda/queue/rotational</span><br><span class="line">0</span><br><span class="line">$ grep ^ /sys/block/*/queue/rotational</span><br><span class="line">/sys/block/ram0/queue/rotational:1</span><br><span class="line">/sys/block/sda/queue/rotational:0</span><br><span class="line">/sys/block/sdb/queue/rotational:0</span><br><span class="line">/sys/block/sdc/queue/rotational:0</span><br><span class="line">/sys/block/sdd/queue/rotational:0</span><br></pre></td></tr></table></figure><p>这种方法有个问题，那就是&#x2F;sys&#x2F;block&#x2F;下面不只有硬盘，还可能有别的块设备，它们都在干扰你的判断。</p><h1 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h1><p>使用lsblk命令进行判断，参数-d表示显示设备名称，参数-o表示仅显示特定的列。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ lsblk -d -o name,rota</span><br><span class="line">NAME ROTA</span><br><span class="line">sda 0</span><br><span class="line">sdb 0</span><br><span class="line">sdc 0</span><br><span class="line">sdd 0</span><br></pre></td></tr></table></figure><p>这种方法的优势在于它只列出了你要看的内容，结果比较简洁明了。还是那个规则，ROTA是1的表示可以旋转，反之则不能旋转。</p><h1 id="方法三"><a href="#方法三" class="headerlink" title="方法三"></a>方法三</h1><p>可以通过fdisk命令查看，参数-l表示列出磁盘详情。在输出结果中，以Disk开头的行表示磁盘简介，下面是一些详细参数，我们可以试着在这些参数中寻找一些HDD特有的关键字，比如：”heads”（磁头），”track”（磁道）和”cylinders”（柱面）。  </p><p>下面分别是HDD和SSD的输出结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Disk /dev/sda: 120.0 GB, 120034123776 bytes</span><br><span class="line">255 heads, 63 sectors/track, 14593 cylinders</span><br><span class="line">Units = cylinders of 16065 * 512 = 8225280 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class="line">Disk identifier: 0x00074f7d</span><br><span class="line">$ sudo fdisk -l</span><br><span class="line">Disk /dev/nvme0n1: 238.5 GiB, 256060514304 bytes, 500118192 sectors</span><br><span class="line">Units: sectors of 1 * 512 = 512 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class="line">Disklabel type: dos</span><br><span class="line">Disk identifier: 0xad91c214</span><br><span class="line">......</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>proxy gfwlist</title>
      <link href="/posts/40f710d0.html"/>
      <url>/posts/40f710d0.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="规则订阅地址"><a href="#规则订阅地址" class="headerlink" title="规则订阅地址"></a>规则订阅地址</h1><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="regexp">//</span>raw.githubusercontent.com<span class="regexp">/gfwlist/g</span>fwlist<span class="regexp">/master/g</span>fwlist.txt </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 其他 </category>
          
          <category> 浏览器扩展 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>vscode debug配置</title>
      <link href="/posts/9ba392b9.html"/>
      <url>/posts/9ba392b9.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;version&quot;</span>: <span class="string">&quot;0.2.0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;configurations&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">&quot;name&quot;</span>: <span class="string">&quot;Python:&quot;</span>,</span><br><span class="line">            <span class="string">&quot;type&quot;</span>: <span class="string">&quot;python&quot;</span>,</span><br><span class="line">            <span class="string">&quot;request&quot;</span>: <span class="string">&quot;launch&quot;</span>,</span><br><span class="line">            <span class="string">&quot;program&quot;</span>: <span class="string">&quot;<span class="variable">$&#123;file&#125;</span>&quot;</span>,</span><br><span class="line">            <span class="string">&quot;console&quot;</span>: <span class="string">&quot;integratedTerminal&quot;</span>,</span><br><span class="line">            <span class="string">&quot;env&quot;</span>: &#123;<span class="string">&quot;PYTHONPATH&quot;</span>:<span class="string">&quot;<span class="variable">$&#123;workspaceRoot&#125;</span>&quot;</span>&#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">&quot;name&quot;</span>: <span class="string">&quot;scrapy&quot;</span>,</span><br><span class="line">            <span class="string">&quot;type&quot;</span>: <span class="string">&quot;python&quot;</span>,</span><br><span class="line">            <span class="string">&quot;request&quot;</span>: <span class="string">&quot;launch&quot;</span>,</span><br><span class="line">            <span class="string">&quot;module&quot;</span>: <span class="string">&quot;scrapy&quot;</span>,</span><br><span class="line">            <span class="string">&quot;args&quot;</span>: [</span><br><span class="line">                <span class="string">&quot;crawl&quot;</span>,</span><br><span class="line">                <span class="string">&quot;spiderCommon&quot;</span></span><br><span class="line">            ]</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">&quot;name&quot;</span>: <span class="string">&quot;php xdebug&quot;</span>,</span><br><span class="line">            <span class="string">&quot;type&quot;</span>: <span class="string">&quot;php&quot;</span>,</span><br><span class="line">            <span class="string">&quot;request&quot;</span>: <span class="string">&quot;launch&quot;</span>,</span><br><span class="line">            <span class="string">&quot;program&quot;</span>: <span class="string">&quot;<span class="variable">$&#123;file&#125;</span>&quot;</span>,</span><br><span class="line">            <span class="string">&quot;cwd&quot;</span>: <span class="string">&quot;<span class="variable">$&#123;fileDirname&#125;</span>&quot;</span>,</span><br><span class="line">            <span class="string">&quot;port&quot;</span>: 9100</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 其他 </category>
          
          <category> vscode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vscode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vscode 配置</title>
      <link href="/posts/6284dd81.html"/>
      <url>/posts/6284dd81.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;cmake-tools-helper.cmake_download_path&quot;</span>: <span class="string">&quot;c:<span class="char escape_">\\</span>Users<span class="char escape_">\\</span>Administrator<span class="char escape_">\\</span>.vscode<span class="char escape_">\\</span>extensions<span class="char escape_">\\</span>maddouri.cmake-tools-helper-0.2.1<span class="char escape_">\\</span>cmake_download&quot;</span>,</span><br><span class="line">    <span class="string">&quot;remote.SSH.configFile&quot;</span>: <span class="string">&quot;C:<span class="char escape_">\\</span>Users<span class="char escape_">\\</span>Administrator<span class="char escape_">\\</span>.ssh<span class="char escape_">\\</span>config&quot;</span>,</span><br><span class="line">    <span class="string">&quot;terminal.integrated.shell.windows&quot;</span>: <span class="string">&quot;D:<span class="char escape_">\\</span>Program Files<span class="char escape_">\\</span>Git<span class="char escape_">\\</span>bin<span class="char escape_">\\</span>sh.exe&quot;</span>,</span><br><span class="line">    <span class="string">&quot;remote.SSH.path&quot;</span>: <span class="string">&quot;D:<span class="char escape_">\\</span>Program Files<span class="char escape_">\\</span>Git<span class="char escape_">\\</span>usr<span class="char escape_">\\</span>bin<span class="char escape_">\\</span>ssh.exe&quot;</span>,</span><br><span class="line">    <span class="string">&quot;python.pythonPath&quot;</span>: <span class="string">&quot;/usr/bin/python3&quot;</span>,</span><br><span class="line">    <span class="string">&quot;deploy&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;targets&quot;</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="string">&quot;type&quot;</span>: <span class="string">&quot;sftp&quot;</span>,</span><br><span class="line">                <span class="string">&quot;name&quot;</span>: <span class="string">&quot;pythonpachong&quot;</span>,</span><br><span class="line">                <span class="string">&quot;description&quot;</span>: <span class="string">&quot;212 python pachong&quot;</span>,</span><br><span class="line">                <span class="string">&quot;dir&quot;</span>: <span class="string">&quot;/data/http/python/pachong&quot;</span>,</span><br><span class="line">                <span class="string">&quot;host&quot;</span>: <span class="string">&quot;192.168.1.212&quot;</span>, <span class="string">&quot;port&quot;</span>: <span class="number">22</span>,</span><br><span class="line">                <span class="string">&quot;user&quot;</span>: <span class="string">&quot;root&quot;</span>, <span class="string">&quot;password&quot;</span>: <span class="string">&quot;Csh917-server&quot;</span>,</span><br><span class="line"></span><br><span class="line">                <span class="string">&quot;checkBeforeDeploy&quot;</span>: <span class="literal">true</span>,</span><br><span class="line"></span><br><span class="line">                <span class="string">&quot;mappings&quot;</span>: [</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="string">&quot;source&quot;</span>: <span class="string">&quot;E:<span class="char escape_">\\</span>work<span class="char escape_">\\</span>wamp<span class="char escape_">\\</span>www<span class="char escape_">\\</span>python<span class="char escape_">\\</span>pachong&quot;</span>,</span><br><span class="line">                        <span class="string">&quot;target&quot;</span>: <span class="string">&quot;/data/http/python/pachong&quot;</span></span><br><span class="line">                    &#125;</span><br><span class="line">                ]</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 其他 </category>
          
          <category> vscode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vscode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>windows宿主机访问虚拟机中的docker服务</title>
      <link href="/posts/e5d94df7.html"/>
      <url>/posts/e5d94df7.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h2 id="服务器ifconfig信息"><a href="#服务器ifconfig信息" class="headerlink" title="服务器ifconfig信息"></a>服务器ifconfig信息</h2><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">br</span>-<span class="number">9</span>d1a3752f9ed: flags=<span class="number">4163</span>&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu <span class="number">1500</span></span><br><span class="line">        <span class="attribute">inet</span> <span class="number">172.19.0.1</span>  netmask <span class="number">255.255.0.0</span>  broadcast <span class="number">172.19.255.255</span></span><br><span class="line">        <span class="attribute">ether</span> <span class="number">02</span>:<span class="number">42</span>:c5:<span class="number">80</span>:<span class="number">3</span>f:<span class="number">8</span>b  txqueuelen <span class="number">0</span>  (Ethernet)</span><br><span class="line">        <span class="attribute">RX</span> packets <span class="number">0</span>  bytes <span class="number">0</span> (<span class="number">0</span>.<span class="number">0</span> B)</span><br><span class="line">        <span class="attribute">RX</span> errors <span class="number">0</span>  dropped <span class="number">0</span>  overruns <span class="number">0</span>  frame <span class="number">0</span></span><br><span class="line">        <span class="attribute">TX</span> packets <span class="number">0</span>  bytes <span class="number">0</span> (<span class="number">0</span>.<span class="number">0</span> B)</span><br><span class="line">        <span class="attribute">TX</span> errors <span class="number">0</span>  dropped <span class="number">0</span> overruns <span class="number">0</span>  carrier <span class="number">0</span>  collisions <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="attribute">docker0</span>: flags=<span class="number">4099</span>&lt;UP,BROADCAST,MULTICAST&gt;  mtu <span class="number">1500</span></span><br><span class="line">        <span class="attribute">inet</span> <span class="number">172.17.0.1</span>  netmask <span class="number">255.255.0.0</span>  broadcast <span class="number">172.17.255.255</span></span><br><span class="line">        <span class="attribute">ether</span> <span class="number">02</span>:<span class="number">42</span>:<span class="number">7</span>e:a0:<span class="number">98</span>:<span class="number">91</span>  txqueuelen <span class="number">0</span>  (Ethernet)</span><br><span class="line">        <span class="attribute">RX</span> packets <span class="number">0</span>  bytes <span class="number">0</span> (<span class="number">0</span>.<span class="number">0</span> B)</span><br><span class="line">        <span class="attribute">RX</span> errors <span class="number">0</span>  dropped <span class="number">0</span>  overruns <span class="number">0</span>  frame <span class="number">0</span></span><br><span class="line">        <span class="attribute">TX</span> packets <span class="number">0</span>  bytes <span class="number">0</span> (<span class="number">0</span>.<span class="number">0</span> B)</span><br><span class="line">        <span class="attribute">TX</span> errors <span class="number">0</span>  dropped <span class="number">0</span> overruns <span class="number">0</span>  carrier <span class="number">0</span>  collisions <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="attribute">eth0</span>: flags=<span class="number">4163</span>&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu <span class="number">1500</span></span><br><span class="line">        <span class="attribute">inet</span> <span class="number">10.0.2.15</span>  netmask <span class="number">255.255.255.0</span>  broadcast <span class="number">10.0.2.255</span></span><br><span class="line">        <span class="attribute">ether</span> <span class="number">08</span>:<span class="number">00</span>:<span class="number">27</span>:<span class="number">98</span>:a2:<span class="number">83</span>  txqueuelen <span class="number">1000</span>  (Ethernet)</span><br><span class="line">        <span class="attribute">RX</span> packets <span class="number">983</span>  bytes <span class="number">118711</span> (<span class="number">115</span>.<span class="number">9</span> KiB)</span><br><span class="line">        <span class="attribute">RX</span> errors <span class="number">0</span>  dropped <span class="number">0</span>  overruns <span class="number">0</span>  frame <span class="number">0</span></span><br><span class="line">        <span class="attribute">TX</span> packets <span class="number">695</span>  bytes <span class="number">128882</span> (<span class="number">125</span>.<span class="number">8</span> KiB)</span><br><span class="line">        <span class="attribute">TX</span> errors <span class="number">0</span>  dropped <span class="number">0</span> overruns <span class="number">0</span>  carrier <span class="number">0</span>  collisions <span class="number">0</span></span><br></pre></td></tr></table></figure><h2 id="windows-主机ip"><a href="#windows-主机ip" class="headerlink" title="windows 主机ip"></a>windows 主机ip</h2><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">inet</span> <span class="number">172.28.128.3</span></span><br><span class="line">netmask <span class="number">255.255.255.0</span></span><br></pre></td></tr></table></figure><h2 id="windows主机中添加路由"><a href="#windows主机中添加路由" class="headerlink" title="windows主机中添加路由"></a>windows主机中添加路由</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 管理员权限下运行</span><br><span class="line"># route -p add docker的ip mask <span class="number">255</span>.<span class="number">255</span>.<span class="number">0</span>.<span class="number">0</span> 服务器的ip</span><br><span class="line"># 例如使用的网络是docker0，则使用docker0的inet和netmask</span><br><span class="line">$ route -p add <span class="number">172</span>.<span class="number">17</span>.<span class="number">0</span>.<span class="number">0</span> mask <span class="number">255</span>.<span class="number">255</span>.<span class="number">0</span>.<span class="number">0</span> <span class="number">172</span>.<span class="number">28</span>.<span class="number">128</span>.<span class="number">3</span></span><br><span class="line">$ <span class="built_in">ping</span> <span class="number">172</span>.<span class="number">17</span>.<span class="number">0</span>.<span class="number">1</span></span><br><span class="line"># 删除使用route delete 目标ip</span><br><span class="line"># route delete <span class="number">172</span>.<span class="number">17</span>.<span class="number">0</span>.<span class="number">0</span></span><br><span class="line">$ </span><br></pre></td></tr></table></figure><h2 id="测试链接"><a href="#测试链接" class="headerlink" title="测试链接"></a>测试链接</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 使用的是docker0的网络</span><br><span class="line">$ ssh root@<span class="number">172</span>.<span class="number">17</span>.<span class="number">0</span>.<span class="number">1</span> -p2233</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> Docker </category>
          
          <category> sshd </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker资料整理</title>
      <link href="/posts/a76edd6f.html"/>
      <url>/posts/a76edd6f.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="在alpine版本的镜像中安装bash"><a href="#在alpine版本的镜像中安装bash" class="headerlink" title="在alpine版本的镜像中安装bash"></a>在alpine版本的镜像中安装bash</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker <span class="built_in">exec</span> -ti 8a7b3af22d0b apk add --no-cache bash</span><br></pre></td></tr></table></figure><h1 id="宿主机开机启动docker内部命令-不能加t"><a href="#宿主机开机启动docker内部命令-不能加t" class="headerlink" title="宿主机开机启动docker内部命令(不能加t)"></a>宿主机开机启动docker内部命令(不能加t)</h1><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec -i xx</span><br></pre></td></tr></table></figure><h1 id="处理nginx-conf修改后容器内部没同步"><a href="#处理nginx-conf修改后容器内部没同步" class="headerlink" title="处理nginx.conf修改后容器内部没同步"></a>处理nginx.conf修改后容器内部没同步</h1><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">修改文件权限，然后重启容器后，可以同步，其他文件也可能存在一样的情况</span></span><br><span class="line">chmod 666 nginx.conf</span><br></pre></td></tr></table></figure><h1 id="docker文件挂载问题"><a href="#docker文件挂载问题" class="headerlink" title="docker文件挂载问题"></a>docker文件挂载问题</h1><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker推荐挂载文件夹，docker在进行文件挂载时，并不是仅仅挂载文件名到对应位置，而是将文件对应的inode 进行映射。</span><br></pre></td></tr></table></figure><h1 id="中文乱码处理"><a href="#中文乱码处理" class="headerlink" title="中文乱码处理"></a>中文乱码处理</h1><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">1.临时修改：</span><br><span class="line">locale</span><br><span class="line">locale -a</span><br><span class="line"><span class="attribute">LANG</span>=C.UTF-8  (有的是zh_CN.UTF-8，不过我在本地没发现这种编码)</span><br><span class="line">source /etc<span class="built_in">/profile</span></span><br><span class="line"><span class="built_in"></span></span><br><span class="line"><span class="comment"># 永久修改：修改Dockerfile</span></span><br><span class="line">在Dockerfile中添加一行</span><br><span class="line">ENV LANG C.UTF-8</span><br><span class="line"></span><br><span class="line"><span class="comment"># docker-compose.yml 中</span></span><br><span class="line">environment:</span><br><span class="line">      LANG: <span class="string">&quot;C.UTF-8&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># docker命令</span></span><br><span class="line">docker exec 容器名称 env <span class="attribute">LANG</span>=C.UTF-8 bash</span><br></pre></td></tr></table></figure><h1 id="启用systemctl"><a href="#启用systemctl" class="headerlink" title="启用systemctl"></a>启用systemctl</h1><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">entrypoint: [<span class="string">&quot;/usr/sbin/init&quot;</span>] # 修改早期的 docker run 命令，并将<span class="regexp">/usr/</span>sbin<span class="operator">/</span><span class="keyword">init</span> 作为命令(<span class="type">CMD</span>)传递给容器内支持 <span class="type">Systemd</span> <span class="keyword">init</span> 进程的用户<span class="operator">。</span></span><br></pre></td></tr></table></figure><h1 id="容器赋予root权限"><a href="#容器赋予root权限" class="headerlink" title="容器赋予root权限"></a>容器赋予root权限</h1><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">privileged</span>: <span class="keyword">true</span></span><br></pre></td></tr></table></figure><h1 id="运行mysql容器失败"><a href="#运行mysql容器失败" class="headerlink" title="运行mysql容器失败"></a>运行mysql容器失败</h1><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld <span class="attribute">--user</span>=root</span><br></pre></td></tr></table></figure><h1 id="后台运行nginx容器"><a href="#后台运行nginx容器" class="headerlink" title="后台运行nginx容器"></a>后台运行nginx容器</h1><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">nginx</span> -g daemon <span class="literal">off</span></span><br></pre></td></tr></table></figure><h1 id="O-perating-system-error-number-22-in-a-file-operation"><a href="#O-perating-system-error-number-22-in-a-file-operation" class="headerlink" title="O#perating system error number 22 in a file operation"></a>O#perating system error number 22 in a file operation</h1><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker-compose文件中添加</span><br><span class="line">command: <span class="attribute">--default-authentication-plugin</span>=mysql_native_password <span class="attribute">--innodb-use-native-aio</span>=0</span><br></pre></td></tr></table></figure><h1 id="无法访问局域网内的ip"><a href="#无法访问局域网内的ip" class="headerlink" title="无法访问局域网内的ip"></a>无法访问局域网内的ip</h1><p>开启路由转发功能</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">1. 临时开启</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">echo</span> <span class="string">&quot;1&quot;</span> &gt; /proc/sys/net/ipv4/ip_forward</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">2. 永久开启</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">echo</span> <span class="string">&quot;net.ipv4.ip_forward = 1&quot;</span> &gt;&gt; /etc/sysctl.conf</span> </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">加载，使得配置文件立即生效</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sysctl -p</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">检查是否开启成功</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sysctl -a |grep <span class="string">&quot;ip_forward&quot;</span></span>    </span><br></pre></td></tr></table></figure><h3 id="docker-network-前缀名称"><a href="#docker-network-前缀名称" class="headerlink" title="docker network 前缀名称"></a>docker network 前缀名称</h3><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 默认当前路径名：路径_*</span></span><br><span class="line"><span class="comment"># 设置环境变量 或者 .env中设置</span></span><br><span class="line">COMPOSE_PROJECT_NAME=</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用命令</title>
      <link href="/posts/6fc55794.html"/>
      <url>/posts/6fc55794.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><p>如需管理docker-compose服务，请在命令后面加上服务器名称，例如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ docker-compose up                         <span class="comment"># 创建并且启动所有容器</span></span><br><span class="line">$ docker-compose up -d                      <span class="comment"># 创建并且后台运行方式启动所有容器</span></span><br><span class="line">$ docker-compose up nginx php mysql         <span class="comment"># 创建并且启动nginx、php、mysql的多个容器</span></span><br><span class="line">$ docker-compose up -d nginx php  mysql     <span class="comment"># 创建并且已后台运行的方式启动nginx、php、mysql容器</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$ docker-compose start php                  <span class="comment"># 启动服务</span></span><br><span class="line">$ docker-compose stop php                   <span class="comment"># 停止服务</span></span><br><span class="line">$ docker-compose restart php                <span class="comment"># 重启服务</span></span><br><span class="line">$ docker-compose build php                  <span class="comment"># 构建或者重新构建服务</span></span><br><span class="line"></span><br><span class="line">$ docker-compose <span class="built_in">rm</span> php                     <span class="comment"># 删除并且停止php容器</span></span><br><span class="line">$ docker-compose down                       <span class="comment"># 停止并删除容器，网络，图像和挂载卷</span></span><br></pre></td></tr></table></figure><p>如不支持docker-compose的管理服务，请在命令后面加上服务器名称，例如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$ docker run                         <span class="comment"># 创建并且启动所有容器</span></span><br><span class="line">$ docker run -d                      <span class="comment"># 创建并且后台运行方式启动所有容器</span></span><br><span class="line">$ docker run nginx                   <span class="comment"># 创建并且启动nginx容器</span></span><br><span class="line">$ docker run -d nginx                 <span class="comment"># 创建并且已后台运行的方式启动nginx容器</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$ docker container start 容器I        <span class="comment"># 启动容器</span></span><br><span class="line">$ docker container stop 容器ID        <span class="comment"># 停止容器</span></span><br><span class="line">$ docker container restart 容器ID     <span class="comment"># 重启容器</span></span><br><span class="line"></span><br><span class="line">$ docker <span class="built_in">rm</span> 容器ID                    <span class="comment"># 删除容器</span></span><br><span class="line">$ docker rmi 镜像ID                   <span class="comment"># 删除镜像</span></span><br><span class="line">$ docker network create dnmp_net     <span class="comment"># 创建网络</span></span><br><span class="line">$ docker network <span class="built_in">rm</span> dnmp_net         <span class="comment"># 删除网络</span></span><br><span class="line">$ docker inspect 镜像ID|容器ID         <span class="comment"># 查看镜像或者容器详情</span></span><br><span class="line">$ docker rmi $(docker ps -a | grep <span class="string">&quot;none&quot;</span> | awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span>) <span class="comment"># 删除none镜像</span></span><br><span class="line">$ docker inspect -f <span class="string">&#x27;&#123;&#123;range .NetworkSettings.Networks&#125;&#125;&#123;&#123;.IPAddress&#125;&#125;&#123;&#123;end&#125;&#125;&#x27;</span> 容器ID 查看容器的ip</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> Docker </category>
          
          <category> 常用命令 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sshd</title>
      <link href="/posts/e9824289.html"/>
      <url>/posts/e9824289.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="安装sshd"><a href="#安装sshd" class="headerlink" title="安装sshd"></a>安装sshd</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">yum install openssh-server</span></span><br></pre></td></tr></table></figure><h1 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">vi /etc/ssh/sshd_config</span></span><br></pre></td></tr></table></figure><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改端口</span></span><br><span class="line"><span class="attribute">Port</span> <span class="number">2233</span></span><br><span class="line"><span class="comment"># 启用root登录</span></span><br><span class="line">PermitRootLogin <span class="literal">yes</span></span><br><span class="line"><span class="comment"># 如果使用账号密码登录，启用并且设置root密码</span></span><br><span class="line">PasswordAuthentication <span class="literal">yes</span></span><br></pre></td></tr></table></figure><h1 id="启动sshd"><a href="#启动sshd" class="headerlink" title="启动sshd"></a>启动sshd</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">systemctl start sshd</span></span><br></pre></td></tr></table></figure><h1 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h1><h2 id="服务器ifconfig信息"><a href="#服务器ifconfig信息" class="headerlink" title="服务器ifconfig信息"></a>服务器ifconfig信息</h2><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">br</span>-<span class="number">9</span>d1a3752f9ed: flags=<span class="number">4163</span>&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu <span class="number">1500</span></span><br><span class="line">        <span class="attribute">inet</span> <span class="number">172.18.0.1</span>  netmask <span class="number">255.255.0.0</span>  broadcast <span class="number">172.19.255.255</span></span><br><span class="line">        <span class="attribute">ether</span> <span class="number">02</span>:<span class="number">42</span>:c5:<span class="number">80</span>:<span class="number">3</span>f:<span class="number">8</span>b  txqueuelen <span class="number">0</span>  (Ethernet)</span><br><span class="line">        <span class="attribute">RX</span> packets <span class="number">0</span>  bytes <span class="number">0</span> (<span class="number">0</span>.<span class="number">0</span> B)</span><br><span class="line">        <span class="attribute">RX</span> errors <span class="number">0</span>  dropped <span class="number">0</span>  overruns <span class="number">0</span>  frame <span class="number">0</span></span><br><span class="line">        <span class="attribute">TX</span> packets <span class="number">0</span>  bytes <span class="number">0</span> (<span class="number">0</span>.<span class="number">0</span> B)</span><br><span class="line">        <span class="attribute">TX</span> errors <span class="number">0</span>  dropped <span class="number">0</span> overruns <span class="number">0</span>  carrier <span class="number">0</span>  collisions <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="attribute">docker0</span>: flags=<span class="number">4099</span>&lt;UP,BROADCAST,MULTICAST&gt;  mtu <span class="number">1500</span></span><br><span class="line">        <span class="attribute">inet</span> <span class="number">172.17.0.1</span>  netmask <span class="number">255.255.0.0</span>  broadcast <span class="number">172.17.255.255</span></span><br><span class="line">        <span class="attribute">ether</span> <span class="number">02</span>:<span class="number">42</span>:<span class="number">7</span>e:a0:<span class="number">98</span>:<span class="number">91</span>  txqueuelen <span class="number">0</span>  (Ethernet)</span><br><span class="line">        <span class="attribute">RX</span> packets <span class="number">0</span>  bytes <span class="number">0</span> (<span class="number">0</span>.<span class="number">0</span> B)</span><br><span class="line">        <span class="attribute">RX</span> errors <span class="number">0</span>  dropped <span class="number">0</span>  overruns <span class="number">0</span>  frame <span class="number">0</span></span><br><span class="line">        <span class="attribute">TX</span> packets <span class="number">0</span>  bytes <span class="number">0</span> (<span class="number">0</span>.<span class="number">0</span> B)</span><br><span class="line">        <span class="attribute">TX</span> errors <span class="number">0</span>  dropped <span class="number">0</span> overruns <span class="number">0</span>  carrier <span class="number">0</span>  collisions <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="attribute">eth0</span>: flags=<span class="number">4163</span>&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu <span class="number">1500</span></span><br><span class="line">        <span class="attribute">inet</span> <span class="number">10.0.2.15</span>  netmask <span class="number">255.255.255.0</span>  broadcast <span class="number">10.0.2.255</span></span><br><span class="line">        <span class="attribute">ether</span> <span class="number">08</span>:<span class="number">00</span>:<span class="number">27</span>:<span class="number">98</span>:a2:<span class="number">83</span>  txqueuelen <span class="number">1000</span>  (Ethernet)</span><br><span class="line">        <span class="attribute">RX</span> packets <span class="number">983</span>  bytes <span class="number">118711</span> (<span class="number">115</span>.<span class="number">9</span> KiB)</span><br><span class="line">        <span class="attribute">RX</span> errors <span class="number">0</span>  dropped <span class="number">0</span>  overruns <span class="number">0</span>  frame <span class="number">0</span></span><br><span class="line">        <span class="attribute">TX</span> packets <span class="number">695</span>  bytes <span class="number">128882</span> (<span class="number">125</span>.<span class="number">8</span> KiB)</span><br><span class="line">        <span class="attribute">TX</span> errors <span class="number">0</span>  dropped <span class="number">0</span> overruns <span class="number">0</span>  carrier <span class="number">0</span>  collisions <span class="number">0</span></span><br></pre></td></tr></table></figure><h2 id="容器ip"><a href="#容器ip" class="headerlink" title="容器ip"></a>容器ip</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker inspect container_id</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">&quot;Gateway&quot;</span>: <span class="string">&quot;172.17.0.1&quot;</span>,</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">&quot;IPAddress&quot;</span>: <span class="string">&quot;172.17.0.2&quot;</span>,</span></span><br></pre></td></tr></table></figure><h2 id="密钥方式登录配置"><a href="#密钥方式登录配置" class="headerlink" title="密钥方式登录配置"></a>密钥方式登录配置</h2><h3 id="生成密钥对"><a href="#生成密钥对" class="headerlink" title="生成密钥对"></a>生成密钥对</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">如果设置密码，则登录要服务器时，需要输入密码</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ssh-keygen -t rsa</span></span><br></pre></td></tr></table></figure><h3 id="在服务器上安装公钥"><a href="#在服务器上安装公钥" class="headerlink" title="在服务器上安装公钥"></a>在服务器上安装公钥</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cat</span> ~/.ssh/id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys</span></span><br></pre></td></tr></table></figure><h3 id="将客户端公钥追加到服务器端"><a href="#将客户端公钥追加到服务器端" class="headerlink" title="将客户端公钥追加到服务器端"></a>将客户端公钥追加到服务器端</h3><h4 id="ssh-copy-id-自动完成"><a href="#ssh-copy-id-自动完成" class="headerlink" title="ssh-copy-id 自动完成"></a>ssh-copy-id 自动完成</h4><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>ssh-copy-id -i ~<span class="regexp">/.ssh/id</span>_rsa.pub root<span class="variable">@172</span>.<span class="number">17.0</span>.<span class="number">1</span> -p2233</span><br></pre></td></tr></table></figure><h4 id="手动操作"><a href="#手动操作" class="headerlink" title="手动操作"></a>手动操作</h4><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入服务器</span></span><br><span class="line"><span class="variable">$ </span>vi ~<span class="regexp">/.ssh/authorized</span>_keys</span><br><span class="line"><span class="comment"># 换行后，将客户端的id_rsa.pub内容追加到该文件中</span></span><br></pre></td></tr></table></figure><h3 id="修改文件权限"><a href="#修改文件权限" class="headerlink" title="修改文件权限"></a>修改文件权限</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">权限默认值，无需修改</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">chmod</span> 644 authorized_keys</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">chmod</span> 700 ~/.ssh</span></span><br></pre></td></tr></table></figure><h3 id="开启密钥登录"><a href="#开启密钥登录" class="headerlink" title="开启密钥登录"></a>开启密钥登录</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">vi /etc/ssh/sshd_config</span></span><br></pre></td></tr></table></figure><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 开启密钥登录</span></span><br><span class="line"><span class="attribute">PubkeyAuthentication</span> <span class="literal">yes</span></span><br></pre></td></tr></table></figure><h1 id="登录-1"><a href="#登录-1" class="headerlink" title="登录"></a>登录</h1><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用的是docker0的网络</span></span><br><span class="line"><span class="variable">$ </span>ssh root<span class="variable">@172</span>.<span class="number">17.0</span>.<span class="number">1</span> -p2233</span><br><span class="line"><span class="comment"># 或者直接连接容器ip</span></span><br><span class="line"><span class="variable">$ </span>ssh root<span class="variable">@172</span>.<span class="number">17.0</span>.<span class="number">2</span> -p2233</span><br></pre></td></tr></table></figure><h1 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h1><h2 id="Host-key-verification-failed"><a href="#Host-key-verification-failed" class="headerlink" title="Host key verification failed."></a>Host key verification failed.</h2><p>ECDSA host key for [172.18.0.1]:2233 has changed and you have requested strict checking.<br>Host key verification failed.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ssh-keygen -R <span class="string">&quot;[172.18.0.1]:2233&quot;</span></span></span><br></pre></td></tr></table></figure><h2 id="docker下无法登录"><a href="#docker下无法登录" class="headerlink" title="docker下无法登录"></a>docker下无法登录</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">增加sshd的端口转发</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> linux </category>
          
          <category> sshd </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>cmake 编译安装</title>
      <link href="/posts/33d65e5.html"/>
      <url>/posts/33d65e5.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h1><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ wget https:<span class="regexp">//gi</span>thub.com<span class="regexp">/Kitware/</span>CMake<span class="regexp">/releases/</span>download<span class="regexp">/v3.24.0/</span>cmake-<span class="number">3.24</span>.<span class="number">0</span>.tar.gz</span><br></pre></td></tr></table></figure><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">tar -xvf cmake-3.24.0.tar.gz</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> cmake-3.24.0</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">./bootstrap --prefix=/usr/local/webserver/cmake/cmake</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">gmake &amp;&amp; gmake install</span></span><br></pre></td></tr></table></figure><h1 id="建立软链接"><a href="#建立软链接" class="headerlink" title="建立软链接"></a>建立软链接</h1><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ln -s <span class="regexp">/usr/</span>local<span class="regexp">/webserver/</span>cmake<span class="regexp">/cmake/</span>bin<span class="regexp">/cmake /u</span>sr<span class="regexp">/bin/</span>cmake</span><br></pre></td></tr></table></figure><h1 id="查看安装版本"><a href="#查看安装版本" class="headerlink" title="查看安装版本"></a>查看安装版本</h1><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cmake <span class="comment">--version</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>libzip 编译安装</title>
      <link href="/posts/1707e975.html"/>
      <url>/posts/1707e975.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h1><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ wget https:<span class="regexp">//</span>libzip.org<span class="regexp">/download/</span>libzip-<span class="number">1.9</span>.<span class="number">2</span>.tar.gz</span><br></pre></td></tr></table></figure><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">tar -xvf libzip-1.9.2.tar.gz</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> libzip-1.9.2</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建build目录</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">mkdir</span> build &amp;&amp; <span class="built_in">cd</span> build</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">在刚刚建立的build目录中</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">注意使用cmake .. 的情况是会把libzip 安装到/usr/lib64 请自行了解/usr/local/lib64 和 /usr/lib64 的区别，为了把他安装到/usr/lib64我们选择给他指定目录</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">cmake -DCMAKE_INSTALL_PREFIX=/usr ..</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">编译和安装软件</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">make &amp;&amp; make install</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">通过命令查看是否生效</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">pkg-config --libs libzip</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>named域名服务器部署</title>
      <link href="/posts/52a7d0f0.html"/>
      <url>/posts/52a7d0f0.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ yum install <span class="built_in">bind</span></span><br></pre></td></tr></table></figure><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">sudo</span> vim /etc/named.rfc1912.zones</span><br></pre></td></tr></table></figure><h3 id="添加配置项"><a href="#添加配置项" class="headerlink" title="添加配置项"></a>添加配置项</h3><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">zone <span class="string">&quot;cat.cs&quot;</span> IN &#123;</span><br><span class="line">        type master<span class="comment">;</span></span><br><span class="line">        file <span class="string">&quot;cat.zone&quot;</span><span class="comment">;</span></span><br><span class="line">        allow-update &#123; none<span class="comment">; &#125;;</span></span><br><span class="line">&#125;<span class="comment">;</span></span><br></pre></td></tr></table></figure><h3 id="新增对应配置文件"><a href="#新增对应配置文件" class="headerlink" title="新增对应配置文件"></a>新增对应配置文件</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cp</span> /var/named/named.localhost /var/named/cat.zone</span><br><span class="line">$ vim /var/named/cat.zone</span><br></pre></td></tr></table></figure><h3 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h3><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$TTL</span> <span class="number">86400</span></span><br><span class="line">@       <span class="keyword">IN</span> <span class="keyword">SOA</span>          cat.cs. root (</span><br><span class="line">                                        <span class="number">1</span>       <span class="comment">; serial</span></span><br><span class="line">                                        <span class="number">1</span>D      <span class="comment">; refresh</span></span><br><span class="line">                                        <span class="number">1</span>H      <span class="comment">; retry</span></span><br><span class="line">                                        <span class="number">1</span>W      <span class="comment">; expire</span></span><br><span class="line">                                        <span class="number">0</span> )     <span class="comment">; minimum</span></span><br><span class="line"></span><br><span class="line">@       <span class="keyword">IN</span>      <span class="keyword">NS</span>      ns.cat.cs.</span><br><span class="line">ns      <span class="keyword">IN</span>      <span class="keyword">A</span>       <span class="number">192.168.1.212</span></span><br></pre></td></tr></table></figure><h2 id="修改权限"><a href="#修改权限" class="headerlink" title="修改权限"></a>修改权限</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">chown</span> root:named /var/named/*.zone</span><br></pre></td></tr></table></figure><h2 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ service named start</span><br></pre></td></tr></table></figure><h2 id="测试连接"><a href="#测试连接" class="headerlink" title="测试连接"></a>测试连接</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ dig cat.cs @127.0.0.1 +short</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>二分查找</title>
      <link href="/posts/e8eb0481.html"/>
      <url>/posts/e8eb0481.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h1><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">二分查找针对的是一个有序的数据集合，查找思想有点类似分治思想。</span><br><span class="line">每次都通过跟区间的中间元素对比，将待查找的区间缩小为之前的一半，直到找到要查找的元素，或者区间被缩小为 0</span><br></pre></td></tr></table></figure><h1 id="性能"><a href="#性能" class="headerlink" title="性能"></a>性能</h1><figure class="highlight isbl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">时间复杂度: <span class="function"><span class="title">O</span>(<span class="variable">logn</span>)</span></span><br></pre></td></tr></table></figure><h1 id="局限性"><a href="#局限性" class="headerlink" title="局限性"></a>局限性</h1><h3 id="二分查找依赖的是顺序表结构，简单点说就是数组。"><a href="#二分查找依赖的是顺序表结构，简单点说就是数组。" class="headerlink" title="二分查找依赖的是顺序表结构，简单点说就是数组。"></a>二分查找依赖的是顺序表结构，简单点说就是数组。</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">那二分查找能否依赖其他数据结构呢？比如链表。答案是不可以的，主要原因是二分查找算法需要按照下标随机访问元素。</span><br><span class="line">我们在数组和链表那两节讲过，数组按照下标随机访问数据的时间复杂度是 <span class="built_in">O</span>(<span class="number">1</span>)，而链表随机访问的时间复杂度是 <span class="built_in">O</span>(n)。</span><br><span class="line">所以，如果数据使用链表存储，二分查找的时间复杂就会变得很高。</span><br><span class="line"></span><br><span class="line">二分查找只能用在数据是通过顺序表来存储的数据结构上。如果你的数据是通过其他数据结构存储的，则无法应用二分查找。</span><br></pre></td></tr></table></figure><h3 id="二分查找针对的是有序数据。"><a href="#二分查找针对的是有序数据。" class="headerlink" title="二分查找针对的是有序数据。"></a>二分查找针对的是有序数据。</h3><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">二分查找对这一点的要求比较苛刻，数据必须是有序的。如果数据没有序，我们需要先排序。排序的时间复杂度最低是 <span class="built_in">O</span>(nlogn)。</span><br><span class="line">所以，如果我们针对的是一组静态的数据，没有频繁地插入、删除，我们可以进行一次排序，多次二分查找。这样排序的成本可被均摊，二分查找的边际成本就会比较低。</span><br><span class="line">但是，如果我们的数据集合有频繁的插入和删除操作，要想用二分查找，要么每次插入、删除操作之后保证数据仍然有序，要么在每次二分查找之前都先进行排序。</span><br><span class="line">针对这种动态数据集合，无论哪种方法，维护有序的成本都是很高的。</span><br><span class="line">所以，二分查找只能用在插入、删除操作不频繁，一次排序多次查找的场景中。针对动态变化的数据集合，二分查找将不再适用。</span><br></pre></td></tr></table></figure><h3 id="数据量太小不适合二分查找"><a href="#数据量太小不适合二分查找" class="headerlink" title="数据量太小不适合二分查找"></a>数据量太小不适合二分查找</h3><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">如果要处理的数据量很小，完全没有必要用二分查找，顺序遍历就足够了。</span><br><span class="line">比如我们在一个大小为<span class="number"> 10 </span>的数组中查找一个元素，不管用二分查找还是顺序遍历，查找速度都差不多。只有数据量比较大的时候，二分查找的优势才会比较明显。</span><br><span class="line">不过，这里有一个例外。如果数据之间的比较操作非常耗时，不管数据量大小，我都推荐使用二分查找。</span><br><span class="line">比如，数组中存储的都是长度超过<span class="number"> 300 </span>的字符串，如此长的两个字符串之间比对大小，就会非常耗时。</span><br><span class="line">我们需要尽可能地减少比较次数，而比较次数的减少会大大提高性能，这个时候二分查找就比顺序遍历更有优势。</span><br></pre></td></tr></table></figure><h3 id="数据量太大也不适合二分查找"><a href="#数据量太大也不适合二分查找" class="headerlink" title="数据量太大也不适合二分查找"></a>数据量太大也不适合二分查找</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">二分查找的底层需要依赖数组这种数据结构，而数组为了支持随机访问的特性，要求内存空间连续，对内存的要求比较苛刻。</span><br><span class="line">比如，我们有 1GB 大小的数据，如果希望用数组来存储，那就需要 1GB 的连续内存空间。</span><br><span class="line">注意这里的“连续”二字，也就是说，即便有 2GB 的内存空间剩余，但是如果这剩余的 2GB 内存空间都是零散的，</span><br><span class="line">没有连续的 1GB 大小的内存空间，那照样无法申请一个 1GB 大小的数组。</span><br><span class="line">而我们的二分查找是作用在数组这种数据结构之上的，所以太大的数据用数组存储就比较吃力了，也就不能用二分查找了。</span><br></pre></td></tr></table></figure><h1 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h1><h3 id="非递归写法"><a href="#非递归写法" class="headerlink" title="非递归写法"></a>非递归写法</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 二分查找 非递归写法</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> array $numbers</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> int $length 数组长度</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> int $value 要查找的值</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> int 查找值的index</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">bSearch</span>(<span class="params"><span class="variable">$numbers</span>, <span class="variable">$length</span>, <span class="variable">$value</span></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 开始和结束下标</span></span><br><span class="line">    <span class="variable">$low</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="variable">$high</span> = <span class="variable">$length</span> - <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="variable">$low</span> &lt;= <span class="variable">$high</span>) &#123;</span><br><span class="line"><span class="comment">//        $mid = $low + ($high - $low) / 2;</span></span><br><span class="line">        <span class="comment">// 获取中间值</span></span><br><span class="line">        <span class="variable">$mid</span> = <span class="variable">$low</span> + ((<span class="variable">$high</span> - <span class="variable">$low</span>) &gt;&gt; <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$numbers</span>[<span class="variable">$mid</span>] == <span class="variable">$value</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$mid</span>;</span><br><span class="line">        &#125; <span class="keyword">elseif</span> (<span class="variable">$numbers</span>[<span class="variable">$mid</span>] &lt; <span class="variable">$value</span>) &#123;</span><br><span class="line">            <span class="comment">// 如果查找的值大于中间值，要找的元素在[mid + 1, high]之间</span></span><br><span class="line">            <span class="variable">$low</span> = <span class="variable">$mid</span> + <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 如果查找的值小于中间值，要找的元素在[low, mid - 1]之间</span></span><br><span class="line">            <span class="variable">$high</span> = <span class="variable">$mid</span> - <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$numbers</span> = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">22</span>,<span class="number">33</span>,<span class="number">55</span>,<span class="number">77</span>,<span class="number">99</span>];</span><br><span class="line"><span class="variable">$index</span> = <span class="title function_ invoke__">bSearch</span>(<span class="variable">$numbers</span>, <span class="title function_ invoke__">count</span>(<span class="variable">$numbers</span>), <span class="number">55</span>);</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$index</span>, <span class="variable">$numbers</span>[<span class="variable">$index</span>]);</span><br></pre></td></tr></table></figure><h3 id="递归写法"><a href="#递归写法" class="headerlink" title="递归写法"></a>递归写法</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 二分查找</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> array $numbers</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> int $length 数组长度</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> int $value 要查找的值</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> int 查找值的index</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">binSearch</span>(<span class="params"><span class="variable">$numbers</span>, <span class="variable">$length</span>, <span class="variable">$value</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">bsearchInternally</span>(<span class="variable">$numbers</span>, <span class="number">0</span>, <span class="variable">$length</span> - <span class="number">1</span>, <span class="variable">$value</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 二分查找 递归写法</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> array $numbers</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> int $low 开始index</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> int $high 结束index</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> int $value 要查找的值</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> int 查找值的index</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">bsearchInternally</span>(<span class="params"><span class="variable">$numbers</span>, <span class="variable">$low</span>, <span class="variable">$high</span>, <span class="variable">$value</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$low</span> &gt; <span class="variable">$high</span>) <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$mid</span> = <span class="variable">$low</span> + ((<span class="variable">$high</span> - <span class="variable">$low</span>) &gt;&gt; <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$numbers</span>[<span class="variable">$mid</span>] == <span class="variable">$value</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$mid</span>;</span><br><span class="line">    &#125; <span class="keyword">elseif</span> (<span class="variable">$numbers</span>[<span class="variable">$mid</span>] &lt; <span class="variable">$value</span>) &#123;</span><br><span class="line">        <span class="comment">// 如果查找的值大于中间值，要找的元素在[mid + 1, high]之间</span></span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">bsearchInternally</span>(<span class="variable">$numbers</span>, <span class="variable">$mid</span> + <span class="number">1</span>, <span class="variable">$high</span>, <span class="variable">$value</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 如果查找的值小于中间值，要找的元素在[low, mid - 1]之间</span></span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">bsearchInternally</span>(<span class="variable">$numbers</span>, <span class="variable">$low</span>, <span class="variable">$mid</span> - <span class="number">1</span>, <span class="variable">$value</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$numbers</span> = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">22</span>,<span class="number">33</span>,<span class="number">55</span>,<span class="number">77</span>,<span class="number">99</span>];</span><br><span class="line"><span class="variable">$index</span> = <span class="title function_ invoke__">binSearch</span>(<span class="variable">$numbers</span>, <span class="title function_ invoke__">count</span>(<span class="variable">$numbers</span>), <span class="number">55</span>);</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$index</span>, <span class="variable">$numbers</span>[<span class="variable">$index</span>]);</span><br></pre></td></tr></table></figure><h3 id="查找第一个值等于给定值的元素"><a href="#查找第一个值等于给定值的元素" class="headerlink" title="查找第一个值等于给定值的元素"></a>查找第一个值等于给定值的元素</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 二分查找</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> array $numbers</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> int $length 数组长度</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> int $value 要查找的值</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> int</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">bSearch</span>(<span class="params"><span class="variable">$numbers</span>, <span class="variable">$length</span>, <span class="variable">$value</span></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 开始和结束下标</span></span><br><span class="line">    <span class="variable">$low</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="variable">$high</span> = <span class="variable">$length</span> - <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="variable">$low</span> &lt;= <span class="variable">$high</span>) &#123;</span><br><span class="line"><span class="comment">//        $mid = $low + ($high - $low) / 2;</span></span><br><span class="line">        <span class="comment">// 获取中间值</span></span><br><span class="line">        <span class="variable">$mid</span> = <span class="variable">$low</span> + ((<span class="variable">$high</span> - <span class="variable">$low</span>) &gt;&gt; <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$numbers</span>[<span class="variable">$mid</span>] == <span class="variable">$value</span>) &#123;</span><br><span class="line">            <span class="comment">// 如果 mid 等于 0，那这个元素已经是数组的第一个元素，那它肯定是我们要找的；</span></span><br><span class="line">            <span class="comment">// 如果 mid 不等于 0，但 a[mid]的前一个元素 a[mid-1]不等于 value，那也说明 a[mid]就是我们要找的第一个值等于给定值的元素。</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$mid</span> == <span class="number">0</span> || (<span class="variable">$numbers</span>[<span class="variable">$mid</span> - <span class="number">1</span>] != <span class="variable">$numbers</span>[<span class="variable">$mid</span>])) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="variable">$mid</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// a[mid]的前一个元素 a[mid-1]等于 value， 说明元素在更小的区间[low, mid - 1]</span></span><br><span class="line">                <span class="variable">$high</span> = <span class="variable">$mid</span> - <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">elseif</span> (<span class="variable">$numbers</span>[<span class="variable">$mid</span>] &lt; <span class="variable">$value</span>) &#123;</span><br><span class="line">            <span class="comment">// 如果查找的值大于中间值，要找的元素在[mid + 1, high]之间</span></span><br><span class="line">            <span class="variable">$low</span> = <span class="variable">$mid</span> + <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$high</span> = <span class="variable">$mid</span> - <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$numbers</span> = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">22</span>,<span class="number">22</span>,<span class="number">33</span>,<span class="number">33</span>,<span class="number">55</span>,<span class="number">77</span>,<span class="number">99</span>];</span><br><span class="line"><span class="variable">$index</span> = <span class="title function_ invoke__">bSearch</span>(<span class="variable">$numbers</span>, <span class="title function_ invoke__">count</span>(<span class="variable">$numbers</span>), <span class="number">22</span>);</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$index</span>, <span class="variable">$numbers</span>[<span class="variable">$index</span>]);</span><br></pre></td></tr></table></figure><h3 id="查找最后一个值等于给定值的元素"><a href="#查找最后一个值等于给定值的元素" class="headerlink" title="查找最后一个值等于给定值的元素"></a>查找最后一个值等于给定值的元素</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 二分查找</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> array $numbers</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> int $length 数组长度</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> int $value 要查找的值</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> int</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">bSearch</span>(<span class="params"><span class="variable">$numbers</span>, <span class="variable">$length</span>, <span class="variable">$value</span></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 开始和结束下标</span></span><br><span class="line">    <span class="variable">$low</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="variable">$high</span> = <span class="variable">$length</span> - <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="variable">$low</span> &lt;= <span class="variable">$high</span>) &#123;</span><br><span class="line"><span class="comment">//        $mid = $low + ($high - $low) / 2;</span></span><br><span class="line">        <span class="comment">// 获取中间值</span></span><br><span class="line">        <span class="variable">$mid</span> = <span class="variable">$low</span> + ((<span class="variable">$high</span> - <span class="variable">$low</span>) &gt;&gt; <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$numbers</span>[<span class="variable">$mid</span>] == <span class="variable">$value</span>) &#123;</span><br><span class="line">            <span class="comment">// 如果元素已经是数组的最后一个元素，那它肯定是我们要找的；</span></span><br><span class="line">            <span class="comment">// 如果元素是最后一个元素，但 a[mid]的后一个元素 a[mid+1]不等于 value，那也说明 a[mid]就是我们要找的最后一个值等于给定值的元素。</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$mid</span> == <span class="variable">$length</span> - <span class="number">1</span> || (<span class="variable">$numbers</span>[<span class="variable">$mid</span> + <span class="number">1</span>] != <span class="variable">$numbers</span>[<span class="variable">$mid</span>])) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="variable">$mid</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// a[mid]的前一个元素 a[mid-1]等于 value， 说明元素在更小的区间[mid+1, high]</span></span><br><span class="line">                <span class="variable">$low</span> = <span class="variable">$mid</span> + <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">elseif</span> (<span class="variable">$numbers</span>[<span class="variable">$mid</span>] &lt; <span class="variable">$value</span>) &#123;</span><br><span class="line">            <span class="comment">// 如果查找的值大于中间值，要找的元素在[mid + 1, high]之间</span></span><br><span class="line">            <span class="variable">$low</span> = <span class="variable">$mid</span> + <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$high</span> = <span class="variable">$mid</span> - <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$numbers</span> = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">22</span>,<span class="number">22</span>,<span class="number">33</span>,<span class="number">33</span>,<span class="number">55</span>,<span class="number">77</span>,<span class="number">99</span>];</span><br><span class="line"><span class="variable">$index</span> = <span class="title function_ invoke__">bSearch</span>(<span class="variable">$numbers</span>, <span class="title function_ invoke__">count</span>(<span class="variable">$numbers</span>), <span class="number">22</span>);</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$index</span>, <span class="variable">$numbers</span>[<span class="variable">$index</span>]);</span><br></pre></td></tr></table></figure><h3 id="查找第一个大于等于给定值的元素"><a href="#查找第一个大于等于给定值的元素" class="headerlink" title="查找第一个大于等于给定值的元素"></a>查找第一个大于等于给定值的元素</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 二分查找</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> array $numbers</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> int $length 数组长度</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> int $value 要查找的值</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> int</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">bSearch</span>(<span class="params"><span class="variable">$numbers</span>, <span class="variable">$length</span>, <span class="variable">$value</span></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 开始和结束下标</span></span><br><span class="line">    <span class="variable">$low</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="variable">$high</span> = <span class="variable">$length</span> - <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="variable">$low</span> &lt;= <span class="variable">$high</span>) &#123;</span><br><span class="line"><span class="comment">//        $mid = $low + ($high - $low) / 2;</span></span><br><span class="line">        <span class="comment">// 获取中间值</span></span><br><span class="line">        <span class="variable">$mid</span> = <span class="variable">$low</span> + ((<span class="variable">$high</span> - <span class="variable">$low</span>) &gt;&gt; <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$numbers</span>[<span class="variable">$mid</span>] &gt;= <span class="variable">$value</span>) &#123;</span><br><span class="line">            <span class="comment">// 如果 mid 等于 0，那这个元素已经是数组的第一个元素，那它肯定是我们要找的；</span></span><br><span class="line">            <span class="comment">// 如果 mid 不等于 0，但 a[mid]的前一个元素 a[mid-1] 小于 value，那也说明 a[mid]就是我们要找的第一个值大于等于给定值的元素。</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$mid</span> == <span class="number">0</span> || (<span class="variable">$numbers</span>[<span class="variable">$mid</span> - <span class="number">1</span>] &lt; <span class="variable">$numbers</span>[<span class="variable">$mid</span>])) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="variable">$mid</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// a[mid]的前一个元素 a[mid-1]等于 value， 说明元素在更小的区间[mid+1, high]</span></span><br><span class="line">                <span class="variable">$high</span> = <span class="variable">$mid</span> - <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 如果查找的值大于中间值，要找的元素在[mid + 1, high]之间</span></span><br><span class="line">            <span class="variable">$low</span> = <span class="variable">$mid</span> + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$numbers</span> = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">22</span>,<span class="number">22</span>,<span class="number">33</span>,<span class="number">33</span>,<span class="number">55</span>,<span class="number">77</span>,<span class="number">99</span>];</span><br><span class="line"><span class="variable">$index</span> = <span class="title function_ invoke__">bSearch</span>(<span class="variable">$numbers</span>, <span class="title function_ invoke__">count</span>(<span class="variable">$numbers</span>), <span class="number">22</span>);</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$index</span>, <span class="variable">$numbers</span>[<span class="variable">$index</span>]);</span><br></pre></td></tr></table></figure><h3 id="查找最后一个小于等于给定值的元素"><a href="#查找最后一个小于等于给定值的元素" class="headerlink" title="查找最后一个小于等于给定值的元素"></a>查找最后一个小于等于给定值的元素</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 二分查找</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> array $numbers</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> int $length 数组长度</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> int $value 要查找的值</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> int</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">bSearch</span>(<span class="params"><span class="variable">$numbers</span>, <span class="variable">$length</span>, <span class="variable">$value</span></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 开始和结束下标</span></span><br><span class="line">    <span class="variable">$low</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="variable">$high</span> = <span class="variable">$length</span> - <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="variable">$low</span> &lt;= <span class="variable">$high</span>) &#123;</span><br><span class="line"><span class="comment">//        $mid = $low + ($high - $low) / 2;</span></span><br><span class="line">        <span class="comment">// 获取中间值</span></span><br><span class="line">        <span class="variable">$mid</span> = <span class="variable">$low</span> + ((<span class="variable">$high</span> - <span class="variable">$low</span>) &gt;&gt; <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$numbers</span>[<span class="variable">$mid</span>] &lt;= <span class="variable">$value</span>) &#123;</span><br><span class="line">            <span class="comment">// 如果元素已经是数组的最后一个元素，那它肯定是我们要找的；</span></span><br><span class="line">            <span class="comment">// 如果元素是最后一个元素，但 a[mid]的后一个元素 a[mid+1]大于 value，那也说明 a[mid]就是我们要找的最后一个值等于给定值的元素。</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$mid</span> == <span class="variable">$length</span> - <span class="number">1</span> || <span class="variable">$numbers</span>[<span class="variable">$mid</span> + <span class="number">1</span>] &gt; <span class="variable">$numbers</span>[<span class="variable">$mid</span>]) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="variable">$mid</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// a[mid]的前一个元素 a[mid-1]等于 value， 说明元素在更小的区间[mid+1, high]</span></span><br><span class="line">                <span class="variable">$low</span> = <span class="variable">$mid</span> + <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 如果查找的值大于中间值，要找的元素在[mid + 1, high]之间</span></span><br><span class="line">            <span class="variable">$high</span> = <span class="variable">$mid</span> - <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$numbers</span> = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">22</span>,<span class="number">22</span>,<span class="number">33</span>,<span class="number">33</span>,<span class="number">55</span>,<span class="number">77</span>,<span class="number">99</span>];</span><br><span class="line"><span class="variable">$index</span> = <span class="title function_ invoke__">bSearch</span>(<span class="variable">$numbers</span>, <span class="title function_ invoke__">count</span>(<span class="variable">$numbers</span>), <span class="number">22</span>);</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$index</span>, <span class="variable">$numbers</span>[<span class="variable">$index</span>]);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基数排序</title>
      <link href="/posts/6367b42a.html"/>
      <url>/posts/6367b42a.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="一、原理"><a href="#一、原理" class="headerlink" title="一、原理"></a>一、原理</h1><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">将整数按位数切割成不同的数字，然后按每个位数分别比较。</span><br><span class="line">由于整数也可以表达字符串（比如名字或日期）和特定格式的浮点数，所以基数排序也不是只能使用于整数。</span><br><span class="line"></span><br><span class="line">基数排序对要排序的数据是有要求的，需要可以分割出独立的“位”来比较，而且位之间有递进的关系，</span><br><span class="line">如果 <span class="selector-tag">a</span> 数据的高位比 <span class="selector-tag">b</span> 数据大，那剩下的低位就不用比较了。除此之外，每一位的数据范围不能太大，</span><br><span class="line">要可以用线性排序算法来排序，否则，基数排序的时间复杂度就无法做到 <span class="built_in">O</span>(n) 了。</span><br></pre></td></tr></table></figure><h1 id="性能"><a href="#性能" class="headerlink" title="性能"></a>性能</h1><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">时间复杂度都是 <span class="built_in">O</span>(n)。</span><br></pre></td></tr></table></figure><h1 id="三、实现"><a href="#三、实现" class="headerlink" title="三、实现"></a>三、实现</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$numbers</span> = [</span><br><span class="line">    <span class="number">1234</span>,</span><br><span class="line">    <span class="number">4321</span>,</span><br><span class="line">    <span class="number">12</span>,</span><br><span class="line">    <span class="number">31</span>,</span><br><span class="line">    <span class="number">187238</span>,</span><br><span class="line">    <span class="number">412</span>,</span><br><span class="line">];</span><br><span class="line"><span class="variable">$max</span> = <span class="title function_ invoke__">strval</span>(<span class="title function_ invoke__">max</span>(<span class="variable">$numbers</span>)); <span class="comment">// 获取最大数</span></span><br><span class="line"><span class="variable">$loopNum</span> = <span class="title function_ invoke__">strlen</span>(<span class="variable">$max</span>); <span class="comment">// 计算最大数的长度，决定循环次数</span></span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$loopNum</span>; ++<span class="variable">$i</span>) &#123;</span><br><span class="line">    <span class="title function_ invoke__">radixSort</span>(<span class="variable">$numbers</span>, <span class="variable">$i</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$numbers</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 基数排序</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> array $numbers 数组</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> int $loopNum 次方数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">radixSort</span>(<span class="params"><span class="keyword">array</span> &amp;<span class="variable">$numbers</span>, <span class="variable">$loopNum</span></span>) </span>&#123;</span><br><span class="line">    <span class="variable">$length</span> = <span class="title function_ invoke__">count</span>(<span class="variable">$numbers</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$length</span> &lt;= <span class="number">1</span>) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 除数，决定比较的位数</span></span><br><span class="line">    <span class="variable">$divisor</span> = <span class="title function_ invoke__">pow</span>(<span class="number">10</span>, <span class="variable">$loopNum</span>);</span><br><span class="line">    <span class="comment">// 创建10个值为NULL的元素数组</span></span><br><span class="line">    <span class="variable">$bucket</span> = (<span class="keyword">new</span> <span class="title class_">\SplFixedArray</span>(<span class="number">10</span>))-&gt;<span class="title function_ invoke__">toArray</span>();</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$numbers</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$number</span>) &#123;</span><br><span class="line">        <span class="variable">$index</span> = (<span class="variable">$number</span> / <span class="variable">$divisor</span>) % <span class="number">10</span>; <span class="comment">// 计算分配到哪个桶</span></span><br><span class="line">        <span class="variable">$bucket</span>[<span class="variable">$index</span>][] = <span class="variable">$number</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 从桶中获取数据</span></span><br><span class="line">    <span class="variable">$k</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="number">10</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">        <span class="keyword">while</span> (<span class="title function_ invoke__">count</span>(<span class="variable">$bucket</span>[<span class="variable">$i</span>]) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="comment">// 将bucket第一个元素弹出，并赋值给number数组，同时k + 1</span></span><br><span class="line">            <span class="variable">$numbers</span>[<span class="variable">$k</span>++] = <span class="title function_ invoke__">array_shift</span>(<span class="variable">$bucket</span>[<span class="variable">$i</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>桶排序</title>
      <link href="/posts/9fe164cc.html"/>
      <url>/posts/9fe164cc.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="一、原理"><a href="#一、原理" class="headerlink" title="一、原理"></a>一、原理</h1><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">核心思想是将要排序的数据分到几个有序的桶里，每个桶里的数据再单独进行排序。</span><br><span class="line">桶内排完序之后，再把每个桶里的数据按照顺序依次取出，组成的序列就是有序的了。</span><br></pre></td></tr></table></figure><h1 id="性能"><a href="#性能" class="headerlink" title="性能"></a>性能</h1><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">时间复杂度都是 <span class="built_in">O</span>(n)。</span><br></pre></td></tr></table></figure><h1 id="三、实现"><a href="#三、实现" class="headerlink" title="三、实现"></a>三、实现</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$numbers</span> = [<span class="number">11</span>,<span class="number">23</span>,<span class="number">45</span>,<span class="number">67</span>,<span class="number">88</span>,<span class="number">99</span>,<span class="number">22</span>,<span class="number">34</span>,<span class="number">56</span>,<span class="number">78</span>,<span class="number">90</span>,<span class="number">12</span>,<span class="number">34</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">91</span>,<span class="number">92</span>,<span class="number">93</span>,<span class="number">93</span>,<span class="number">94</span>,<span class="number">95</span>,<span class="number">94</span>,<span class="number">95</span>,<span class="number">96</span>,<span class="number">97</span>,<span class="number">98</span>,<span class="number">99</span>,<span class="number">100</span>];</span><br><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="title function_ invoke__">bucketSort</span>(<span class="variable">$numbers</span>, <span class="number">10</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 执行桶排序</span></span><br><span class="line"><span class="comment"> * 当一个桶内数据个数过多，需要继续分桶</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> array $numbers 需要排序的数组</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> int $size 每个桶数据个数</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">bucketSort</span>(<span class="params"><span class="keyword">array</span> <span class="variable">$numbers</span>, <span class="variable">$size</span></span>) </span>&#123;</span><br><span class="line">    <span class="variable">$min</span> = <span class="title function_ invoke__">min</span>(<span class="variable">$numbers</span>);</span><br><span class="line">    <span class="variable">$max</span> = <span class="title function_ invoke__">max</span>(<span class="variable">$numbers</span>);</span><br><span class="line">    <span class="variable">$length</span> = <span class="title function_ invoke__">count</span>(<span class="variable">$numbers</span>);</span><br><span class="line">    <span class="comment">// 获得桶数量</span></span><br><span class="line">    <span class="variable">$bucketNumber</span> =  <span class="title function_ invoke__">ceil</span>((<span class="variable">$max</span> - <span class="variable">$min</span>) / <span class="variable">$length</span>) + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$buckets</span> = [];</span><br><span class="line">    <span class="comment">// 将数据分配到桶中</span></span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$numbers</span> <span class="keyword">as</span> <span class="variable">$value</span>) &#123;</span><br><span class="line">        <span class="variable">$index</span> = <span class="title function_ invoke__">ceil</span>((<span class="variable">$value</span> - <span class="variable">$min</span>) / <span class="variable">$length</span>);</span><br><span class="line">        <span class="variable">$buckets</span>[<span class="variable">$index</span>][] = <span class="variable">$value</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$result</span> = [];</span><br><span class="line">    <span class="comment">// 对每个桶进行快速排序</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>;<span class="variable">$i</span> &lt; <span class="variable">$bucketNumber</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">        <span class="comment">// 获取桶数据以及桶数据个数</span></span><br><span class="line">        <span class="variable">$bucket</span> = <span class="variable">$buckets</span>[<span class="variable">$i</span>];</span><br><span class="line">        <span class="variable">$length</span> = <span class="title function_ invoke__">count</span>(<span class="variable">$bucket</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$length</span> == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 当桶的元素超过10个，则再次进行分桶</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$length</span> &gt; <span class="variable">$size</span>) &#123;</span><br><span class="line">            <span class="variable">$bucket</span> = <span class="title function_ invoke__">bucketSort</span>(<span class="variable">$bucket</span>, <span class="variable">$size</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="title function_ invoke__">quickSortInternally</span>(<span class="variable">$bucket</span>, <span class="number">0</span>, <span class="title function_ invoke__">count</span>(<span class="variable">$bucket</span>) - <span class="number">1</span>);</span><br><span class="line">        <span class="variable">$result</span> = <span class="title function_ invoke__">array_merge</span>(<span class="variable">$result</span>, <span class="variable">$bucket</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$result</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 执行快速排序</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> array $arr</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> int $start 开始下标</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> int $end 结束下标</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">quickSortInternally</span>(<span class="params">&amp;<span class="variable">$arr</span>, <span class="variable">$start</span>, <span class="variable">$end</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$start</span> &gt;= <span class="variable">$end</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取中间点位置</span></span><br><span class="line">    <span class="variable">$middle</span> = <span class="title function_ invoke__">partition</span>(<span class="variable">$arr</span>, <span class="variable">$start</span>, <span class="variable">$end</span>);</span><br><span class="line">    <span class="title function_ invoke__">quickSortInternally</span>(<span class="variable">$arr</span>, <span class="variable">$start</span>, <span class="variable">$middle</span> - <span class="number">1</span>);</span><br><span class="line">    <span class="title function_ invoke__">quickSortInternally</span>(<span class="variable">$arr</span>, <span class="variable">$middle</span> + <span class="number">1</span>, <span class="variable">$end</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 交换数据进行排序，获取中间点</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> $arr</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> $start</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> $end</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> mixed</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">partition</span>(<span class="params">&amp;<span class="variable">$arr</span>, <span class="variable">$start</span>, <span class="variable">$end</span></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 将最后一个作为中间点</span></span><br><span class="line">    <span class="variable">$pivot</span> = <span class="variable">$arr</span>[<span class="variable">$end</span>];</span><br><span class="line">    <span class="variable">$i</span> = <span class="variable">$start</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 从$start下标遍历</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="variable">$j</span> = <span class="variable">$start</span>; <span class="variable">$j</span> &lt; <span class="variable">$end</span>; ++<span class="variable">$j</span>) &#123;</span><br><span class="line">        <span class="comment">// 如果遍历的元素小于中间点，并且下标不相同，则交换两个数据</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$arr</span>[<span class="variable">$j</span>] &lt; <span class="variable">$pivot</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$i</span> == <span class="variable">$j</span>) &#123;</span><br><span class="line">                <span class="variable">$i</span>++;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$tmp</span> = <span class="variable">$arr</span>[<span class="variable">$i</span>];</span><br><span class="line">                <span class="variable">$arr</span>[<span class="variable">$i</span>] = <span class="variable">$arr</span>[<span class="variable">$j</span>];</span><br><span class="line">                <span class="variable">$i</span>++;</span><br><span class="line">                <span class="variable">$arr</span>[<span class="variable">$j</span>] = <span class="variable">$tmp</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 将最后一个数据和$i交换数据，$i为未处理数据的下标</span></span><br><span class="line">    <span class="variable">$tmp</span> = <span class="variable">$arr</span>[<span class="variable">$i</span>];</span><br><span class="line">    <span class="variable">$arr</span>[<span class="variable">$i</span>] = <span class="variable">$arr</span>[<span class="variable">$end</span>];</span><br><span class="line">    <span class="variable">$arr</span>[<span class="variable">$end</span>] = <span class="variable">$tmp</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$i</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计数排序</title>
      <link href="/posts/cb625b07.html"/>
      <url>/posts/cb625b07.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="一、原理"><a href="#一、原理" class="headerlink" title="一、原理"></a>一、原理</h1><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">计数排序其实是桶排序的一种特殊情况。当要排序的 <span class="built_in">n</span> 个数据，所处的范围并不大的时候，比如最大值是 k，</span><br><span class="line">我们就可以把数据划分成 k 个桶。每个桶内的数据值都是相同的，省掉了桶内排序的时间。</span><br><span class="line"></span><br><span class="line">计数排序只能用在数据范围不大的场景中，如果数据范围 k 比要排序的数据 <span class="built_in">n</span> 大很多，就不适合用计数排序了。而且，计数排序只能给非负整数排序，如果要排序的数据是其他类型的，要将其在不改变相对大小的情况下，转化为非负整数。</span><br></pre></td></tr></table></figure><h1 id="性能"><a href="#性能" class="headerlink" title="性能"></a>性能</h1><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">时间复杂度都是 <span class="built_in">O</span>(n)。</span><br></pre></td></tr></table></figure><h1 id="三、实现"><a href="#三、实现" class="headerlink" title="三、实现"></a>三、实现</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$numbers</span> = [<span class="number">11</span>,<span class="number">23</span>,<span class="number">45</span>,<span class="number">67</span>,<span class="number">88</span>,<span class="number">99</span>,<span class="number">22</span>,<span class="number">34</span>,<span class="number">56</span>,<span class="number">78</span>,<span class="number">90</span>,<span class="number">12</span>,<span class="number">34</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">91</span>,<span class="number">92</span>,<span class="number">93</span>,<span class="number">93</span>,<span class="number">94</span>,<span class="number">95</span>,<span class="number">94</span>,<span class="number">95</span>,<span class="number">96</span>,<span class="number">97</span>,<span class="number">98</span>,<span class="number">99</span>,<span class="number">100</span>];</span><br><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="title function_ invoke__">countSort</span>(<span class="variable">$numbers</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 计数排序</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> array $numbers 需要排序的数组 </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">countSort</span>(<span class="params"><span class="variable">$numbers</span></span>) </span>&#123;</span><br><span class="line">    <span class="variable">$length</span> = <span class="title function_ invoke__">count</span>(<span class="variable">$numbers</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$length</span> &lt;= <span class="number">1</span>) <span class="keyword">return</span> <span class="variable">$numbers</span>;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$max</span> = <span class="title function_ invoke__">max</span>(<span class="variable">$numbers</span>);</span><br><span class="line">    <span class="comment">// 统计每个分数的人数</span></span><br><span class="line">    <span class="variable">$countArr</span> = [];</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$numbers</span> <span class="keyword">as</span> <span class="variable">$number</span>) &#123;</span><br><span class="line">        <span class="variable">$countArr</span>[<span class="variable">$number</span>]++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 顺序求和</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">1</span>; <span class="variable">$i</span> &lt;= <span class="variable">$max</span>; ++<span class="variable">$i</span>) &#123;</span><br><span class="line">        <span class="variable">$countArr</span>[<span class="variable">$i</span>] += <span class="variable">$countArr</span>[<span class="variable">$i</span> - <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 排序</span></span><br><span class="line">    <span class="variable">$temp</span> = [];</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$numbers</span> <span class="keyword">as</span> <span class="variable">$index</span> =&gt; <span class="variable">$number</span>) &#123;</span><br><span class="line">        <span class="comment">// 每次循环，计数数组的元素值减一，因为数组放到了temp数组中</span></span><br><span class="line">        <span class="comment">// 由于下标0开始，所以使用-1后的元素的值为key</span></span><br><span class="line">        <span class="variable">$countArr</span>[<span class="variable">$number</span>] --;</span><br><span class="line">        <span class="variable">$temp</span>[<span class="variable">$countArr</span>[<span class="variable">$number</span>]] = <span class="variable">$number</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$length</span>; ++<span class="variable">$i</span>) &#123;</span><br><span class="line">        <span class="variable">$numbers</span>[<span class="variable">$i</span>] = <span class="variable">$temp</span>[<span class="variable">$i</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$numbers</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>快速排序</title>
      <link href="/posts/ff8068c0.html"/>
      <url>/posts/ff8068c0.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h1><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">快排利用的也是分治思想。乍看起来，它有点像快速排序，但是思路其实完全不一样。我们待会会讲两者的区别。现在，我们先来看下快排的核心思想。</span><br><span class="line">快排的思想是这样的：如果要排序数组中下标从 <span class="selector-tag">p</span> 到 <span class="attribute">r</span> 之间的一组数据，我们选择 <span class="selector-tag">p</span> 到 <span class="attribute">r</span> 之间的任意一个数据作为 pivot（分区点）。</span><br><span class="line">我们遍历 <span class="selector-tag">p</span> 到 <span class="attribute">r</span> 之间的数据，将小于 pivot 的放到左边，将大于 pivot 的放到右边，将 pivot 放到中间。经过这一步骤之后，数组 <span class="selector-tag">p</span> 到 <span class="attribute">r</span> 之间的数据就被分成了三个部分，前面 <span class="selector-tag">p</span> 到 <span class="selector-tag">q</span>-<span class="number">1</span> 之间都是小于 pivot 的，中间是 pivot，后面的 <span class="selector-tag">q</span>+<span class="number">1</span> 到 <span class="attribute">r</span> 之间是大于 pivot 的。。</span><br></pre></td></tr></table></figure><h1 id="快排和归并区别"><a href="#快排和归并区别" class="headerlink" title="快排和归并区别"></a>快排和归并区别</h1><p>快排和归并用的都是分治思想，递推公式和递归代码也非常相似，那它们的区别在哪里呢？</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">快速排序的处理过程是由下到上的，先处理子问题，然后再合并。</span><br><span class="line">而快排正好相反，它的处理过程是由上到下的，先分区，然后再处理子问题。</span><br><span class="line">快速排序虽然是稳定的、时间复杂度为 <span class="built_in">O</span>(nlogn) 的排序算法，但是它是非原地排序算法。</span><br><span class="line">我们前面讲过，归并之所以是非原地排序算法，主要原因是合并函数无法在原地执行。</span><br><span class="line">快速排序通过设计巧妙的原地分区函数，可以实现原地排序，解决了快速排序占用太多内存的问题。</span><br></pre></td></tr></table></figure><h1 id="性能"><a href="#性能" class="headerlink" title="性能"></a>性能</h1><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">第一，快速排序是稳定的排序算法吗？</span><br><span class="line">快速排序不是一个稳定的排序算法。  </span><br><span class="line"></span><br><span class="line">第二，快速排序的时间复杂度是多少？</span><br><span class="line">时间复杂度都是 <span class="built_in">O</span>(nlogn)。  </span><br><span class="line"></span><br><span class="line">第三，快速排序的空间复杂度是多少？</span><br><span class="line">采用原地排序，所以空间复杂度是 <span class="built_in">O</span>(<span class="number">1</span>)。</span><br></pre></td></tr></table></figure><h1 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 快速排序</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> array $arr</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">quickSort</span>(<span class="params">&amp;<span class="variable">$arr</span></span>) </span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">quickSortInternally</span>(<span class="variable">$arr</span>, <span class="number">0</span>, <span class="title function_ invoke__">count</span>(<span class="variable">$arr</span>) - <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 执行快速排序</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> array $arr</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> int $start 开始下标</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> int $end 结束下标</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">quickSortInternally</span>(<span class="params">&amp;<span class="variable">$arr</span>, <span class="variable">$start</span>, <span class="variable">$end</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$start</span> &gt;= <span class="variable">$end</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取中间点位置</span></span><br><span class="line">    <span class="variable">$middle</span> = <span class="title function_ invoke__">partition</span>(<span class="variable">$arr</span>, <span class="variable">$start</span>, <span class="variable">$end</span>);</span><br><span class="line">    <span class="title function_ invoke__">quickSortInternally</span>(<span class="variable">$arr</span>, <span class="variable">$start</span>, <span class="variable">$middle</span> - <span class="number">1</span>);</span><br><span class="line">    <span class="title function_ invoke__">quickSortInternally</span>(<span class="variable">$arr</span>, <span class="variable">$middle</span> + <span class="number">1</span>, <span class="variable">$end</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 交换数据进行排序，获取中间点</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> $arr</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> $start</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> $end</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> mixed</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">partition</span>(<span class="params">&amp;<span class="variable">$arr</span>, <span class="variable">$start</span>, <span class="variable">$end</span></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 将最后一个作为中间点</span></span><br><span class="line">    <span class="variable">$pivot</span> = <span class="variable">$arr</span>[<span class="variable">$end</span>];</span><br><span class="line">    <span class="variable">$i</span> = <span class="variable">$start</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 从$start下标遍历</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="variable">$j</span> = <span class="variable">$start</span>; <span class="variable">$j</span> &lt; <span class="variable">$end</span>; ++<span class="variable">$j</span>) &#123;</span><br><span class="line">        <span class="comment">// 如果遍历的元素小于中间点，并且下标不相同，则交换两个数据</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$arr</span>[<span class="variable">$j</span>] &lt; <span class="variable">$pivot</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$i</span> == <span class="variable">$j</span>) &#123;</span><br><span class="line">                <span class="variable">$i</span>++;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$tmp</span> = <span class="variable">$arr</span>[<span class="variable">$i</span>];</span><br><span class="line">                <span class="variable">$arr</span>[<span class="variable">$i</span>] = <span class="variable">$arr</span>[<span class="variable">$j</span>];</span><br><span class="line">                <span class="variable">$i</span>++;</span><br><span class="line">                <span class="variable">$arr</span>[<span class="variable">$j</span>] = <span class="variable">$tmp</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 将最后一个数据和$i交换数据，$i为未处理数据的下标</span></span><br><span class="line">    <span class="variable">$tmp</span> = <span class="variable">$arr</span>[<span class="variable">$i</span>];</span><br><span class="line">    <span class="variable">$arr</span>[<span class="variable">$i</span>] = <span class="variable">$arr</span>[<span class="variable">$end</span>];</span><br><span class="line">    <span class="variable">$arr</span>[<span class="variable">$end</span>] = <span class="variable">$tmp</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$i</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a1</span> = [<span class="number">10</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">3</span>];</span><br><span class="line"><span class="title function_ invoke__">quickSort</span>(<span class="variable">$a1</span>);</span><br><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="variable">$a1</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>冒泡排序</title>
      <link href="/posts/7430112.html"/>
      <url>/posts/7430112.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="一、原理"><a href="#一、原理" class="headerlink" title="一、原理"></a>一、原理</h1><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">冒泡排序只会操作相邻的两个数据。每次冒泡操作都会对相邻的两个元素进行比较，看是否满足大小关系要求。  </span><br><span class="line">如果不满足就让它俩互换。一次冒泡会让至少一个元素移动到它应该在的位置，重复 <span class="built_in">n</span> 次，就完成了 <span class="built_in">n</span> 个数据的排序工作。</span><br></pre></td></tr></table></figure><h1 id="二、性能"><a href="#二、性能" class="headerlink" title="二、性能"></a>二、性能</h1><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">第一，冒泡排序是原地排序算法吗？</span><br><span class="line">冒泡的过程只涉及相邻数据的交换操作，只需要常量级的临时空间，</span><br><span class="line">所以它的空间复杂度为 <span class="built_in">O</span>(<span class="number">1</span>)，是一个原地排序算法。</span><br><span class="line"></span><br><span class="line">第二，冒泡排序是稳定的排序算法吗？</span><br><span class="line">在冒泡排序中，只有交换才可以改变两个元素的前后顺序。</span><br><span class="line">为了保证冒泡排序算法的稳定性，当有相邻的两个元素大小相等的时候，</span><br><span class="line">我们不做交换，相同大小的数据在排序前后不会改变顺序，所以冒泡排序是稳定的排序算法。</span><br><span class="line"></span><br><span class="line">第三，冒泡排序的时间复杂度是多少？</span><br><span class="line">最好情况下，要排序的数据已经是有序的了，我们只需要进行一次冒泡操作，</span><br><span class="line">就可以结束了，所以最好情况时间复杂度是 <span class="built_in">O</span>(n)。</span><br><span class="line">而最坏的情况是，要排序的数据刚好是倒序排列的，我们需要进行 n 次冒泡操作，所以最坏情况时间复杂度为 <span class="built_in">O</span>(n2)。</span><br></pre></td></tr></table></figure><h1 id="三、实现"><a href="#三、实现" class="headerlink" title="三、实现"></a>三、实现</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 冒泡排序</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">bubbleSort</span>(<span class="params">&amp;<span class="variable">$arr</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$length</span> = <span class="title function_ invoke__">count</span>(<span class="variable">$arr</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$length</span> &lt;= <span class="number">1</span>) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$length</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">        <span class="variable">$flag</span> = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="variable">$j</span> = <span class="number">0</span>; <span class="variable">$j</span> &lt; <span class="variable">$length</span> - <span class="variable">$i</span> - <span class="number">1</span>; <span class="variable">$j</span>++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$arr</span>[<span class="variable">$j</span>] &gt; <span class="variable">$arr</span>[<span class="variable">$j</span> + <span class="number">1</span>]) &#123;</span><br><span class="line">                <span class="variable">$tmp</span> = <span class="variable">$arr</span>[<span class="variable">$j</span>];</span><br><span class="line">                <span class="variable">$arr</span>[<span class="variable">$j</span>] = <span class="variable">$arr</span>[<span class="variable">$j</span> + <span class="number">1</span>];</span><br><span class="line">                <span class="variable">$arr</span>[<span class="variable">$j</span> + <span class="number">1</span>] = <span class="variable">$tmp</span>;</span><br><span class="line">                <span class="variable">$flag</span> = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable">$flag</span>) &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$arr</span> = [<span class="number">1</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">4</span>];</span><br><span class="line"><span class="title function_ invoke__">bubbleSort</span>(<span class="variable">$arr</span>);</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$arr</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>归并排序</title>
      <link href="/posts/1599bffe.html"/>
      <url>/posts/1599bffe.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="一、原理"><a href="#一、原理" class="headerlink" title="一、原理"></a>一、原理</h1><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">如果要排序一个数组，我们先把数组从中间分成前后两部分，</span><br><span class="line">然后对前后两部分分别排序，再将排好序的两部分合并在一起，这样整个数组就都有序了。</span><br></pre></td></tr></table></figure><h1 id="性能"><a href="#性能" class="headerlink" title="性能"></a>性能</h1><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">第一，归并排序是稳定的排序算法吗？</span><br><span class="line">归并排序是一个稳定的排序算法。  </span><br><span class="line"></span><br><span class="line">第二，归并排序的时间复杂度是多少？</span><br><span class="line">时间复杂度都是 <span class="built_in">O</span>(nlogn)。  </span><br><span class="line"></span><br><span class="line">第三，归并排序的空间复杂度是多少？</span><br><span class="line">在任意时刻，CPU 只会有一个函数在执行，也就只会有一个临时的内存空间在使用。</span><br><span class="line">临时内存空间最大也不会超过 n 个数据的大小，所以空间复杂度是 <span class="built_in">O</span>(n)。</span><br></pre></td></tr></table></figure><h1 id="三、实现"><a href="#三、实现" class="headerlink" title="三、实现"></a>三、实现</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 递归调用函数</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> array $arr 数组</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> int $p 开始下标</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> int $r 结束下标</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> array</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">mergeSortRecursive</span>(<span class="params"><span class="variable">$arr</span>, <span class="variable">$p</span>, <span class="variable">$r</span></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 如果已经到最后一个下标时，返回最后一个的值</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$p</span> &gt;= <span class="variable">$r</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> [<span class="variable">$arr</span>[<span class="variable">$r</span>]];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 分治思想，获取中间位置的下标</span></span><br><span class="line">    <span class="variable">$middle</span> = <span class="title function_ invoke__">intval</span>((<span class="variable">$p</span> + <span class="variable">$r</span>) / <span class="number">2</span>);</span><br><span class="line">    <span class="comment">// 递归对数组进行分治排序，然后合并排序后的数组</span></span><br><span class="line">    <span class="variable">$left</span> = <span class="title function_ invoke__">mergeSortRecursive</span>(<span class="variable">$arr</span>, <span class="variable">$p</span>, <span class="variable">$middle</span>);</span><br><span class="line">    <span class="variable">$right</span> = <span class="title function_ invoke__">mergeSortRecursive</span>(<span class="variable">$arr</span>, <span class="variable">$middle</span> + <span class="number">1</span>, <span class="variable">$r</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">merge</span>(<span class="variable">$left</span>, <span class="variable">$right</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 合并函数</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> array $left 左边的数组</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> array $right 右边的数组</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> array</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">merge</span>(<span class="params"><span class="variable">$left</span>, <span class="variable">$right</span></span>) </span>&#123;</span><br><span class="line">    <span class="variable">$tmp</span> = [];</span><br><span class="line">    <span class="variable">$i</span> = <span class="variable">$j</span> = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$leftLen</span> = <span class="title function_ invoke__">count</span>(<span class="variable">$left</span>);</span><br><span class="line">    <span class="variable">$rightLen</span> = <span class="title function_ invoke__">count</span>(<span class="variable">$right</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 我们用两个游标 i 和 j，分别指向 $left和 $right的第一个元素。</span></span><br><span class="line">    <span class="comment">// 比较这两个元素 $left[$i]和 $right[$j]，如果 $left[$i]&lt;=$right[$j]，我们就把 $left[$i]放入到临时数组 $tmp，</span></span><br><span class="line">    <span class="comment">// 并且 $i 后移一位，否则将 $right[$j]放入到数组 $tmp，$j 后移一位。</span></span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$left</span>[<span class="variable">$i</span>] &lt; <span class="variable">$right</span>[<span class="variable">$j</span>]) &#123;</span><br><span class="line">            <span class="variable">$tmp</span>[] = <span class="variable">$left</span>[<span class="variable">$i</span>];</span><br><span class="line">            <span class="variable">$i</span>++;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$tmp</span>[] = <span class="variable">$right</span>[<span class="variable">$j</span>];</span><br><span class="line">            <span class="variable">$j</span>++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">while</span> (<span class="variable">$i</span> &lt; <span class="variable">$leftLen</span> &amp;&amp; <span class="variable">$j</span> &lt; <span class="variable">$rightLen</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 判断还有剩余数据的数组</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$i</span> &lt; <span class="variable">$leftLen</span>) &#123;</span><br><span class="line">        <span class="variable">$start</span> = <span class="variable">$i</span>;</span><br><span class="line">        <span class="variable">$end</span> = <span class="variable">$leftLen</span>;</span><br><span class="line">        <span class="variable">$copyArr</span> = <span class="variable">$left</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$start</span> = <span class="variable">$j</span>;</span><br><span class="line">        <span class="variable">$end</span> = <span class="variable">$rightLen</span>;</span><br><span class="line">        <span class="variable">$copyArr</span> = <span class="variable">$right</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 将剩余的数据拷贝到临时数组 tmp</span></span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        <span class="variable">$tmp</span>[] = <span class="variable">$copyArr</span>[<span class="variable">$start</span>++];</span><br><span class="line">    &#125; <span class="keyword">while</span> (<span class="variable">$start</span> &lt; <span class="variable">$end</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$tmp</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$arr</span> = [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">2</span>];</span><br><span class="line"><span class="variable">$length</span> = <span class="title function_ invoke__">count</span>(<span class="variable">$arr</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 开始下标</span></span><br><span class="line"><span class="variable">$p</span> = <span class="number">0</span>;</span><br><span class="line"><span class="comment">// 结束下标</span></span><br><span class="line"><span class="variable">$r</span> = <span class="variable">$length</span> - <span class="number">1</span>;</span><br><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="title function_ invoke__">mergeSortRecursive</span>(<span class="variable">$arr</span>, <span class="variable">$p</span>, <span class="variable">$r</span>));</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>插入排序</title>
      <link href="/posts/85f0af4b.html"/>
      <url>/posts/85f0af4b.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="一、原理"><a href="#一、原理" class="headerlink" title="一、原理"></a>一、原理</h1><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">我们将数组中的数据分为两个区间，已排序区间和未排序区间。</span><br><span class="line">初始已排序区间只有一个元素，就是数组的第一个元素。</span><br><span class="line">插入算法的核心思想是取未排序区间中的元素，在已排序区间中找到合适的插入位置将其插入，并保证已排序区间数据一直有序。</span><br><span class="line">重复这个过程，直到未排序区间中元素为空，算法结束。</span><br></pre></td></tr></table></figure><h1 id="二、性能"><a href="#二、性能" class="headerlink" title="二、性能"></a>二、性能</h1><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">第一，插入排序是原地排序算法吗？</span><br><span class="line">从实现过程可以很明显地看出，插入排序算法的运行并不需要额外的存储空间，所以空间复杂度是 <span class="built_in">O</span>(<span class="number">1</span>)，也就是说，这是一个原地排序算法。</span><br><span class="line"></span><br><span class="line">第二，插入排序是稳定的排序算法吗？</span><br><span class="line">在插入排序中，对于值相同的元素，我们可以选择将后面出现的元素，插入到前面出现元素的后面，这样就可以保持原有的前后顺序不变，所以插入排序是稳定的排序算法。</span><br><span class="line"></span><br><span class="line">第三，插入排序的时间复杂度是多少？</span><br><span class="line">如果要排序的数据已经是有序的，我们并不需要搬移任何数据。如果我们从尾到头在有序数据组里面查找插入位置，每次只需要比较一个数据就能确定插入的位置。所以这种情况下，最好是时间复杂度为 <span class="built_in">O</span>(n)。注意，这里是从尾到头遍历已经有序的数据。</span><br><span class="line"></span><br><span class="line">如果数组是倒序的，每次插入都相当于在数组的第一个位置插入新的数据，所以需要移动大量的数据，所以最坏情况时间复杂度为 <span class="built_in">O</span>(n2)。</span><br><span class="line">还记得我们在数组中插入一个数据的平均时间复杂度是多少吗？没错，是 <span class="built_in">O</span>(n)。</span><br><span class="line">所以，对于插入排序来说，每次插入操作都相当于在数组中插入一个数据，循环执行 n 次插入操作，所以平均时间复杂度为 <span class="built_in">O</span>(n2)。。</span><br></pre></td></tr></table></figure><h1 id="三、实现"><a href="#三、实现" class="headerlink" title="三、实现"></a>三、实现</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 插入排序</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">insertionSort</span>(<span class="params">&amp;<span class="variable">$arr</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$n</span> = <span class="title function_ invoke__">count</span>(<span class="variable">$arr</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$n</span> &lt;= <span class="number">1</span>) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">1</span>; <span class="variable">$i</span> &lt; <span class="variable">$n</span>; ++<span class="variable">$i</span>) &#123;</span><br><span class="line">        <span class="variable">$value</span> = <span class="variable">$arr</span>[<span class="variable">$i</span>];</span><br><span class="line">        <span class="variable">$j</span> = <span class="variable">$i</span> - <span class="number">1</span>;</span><br><span class="line">        <span class="comment">// 查找插入的位置</span></span><br><span class="line">        <span class="keyword">for</span> (; <span class="variable">$j</span> &gt;= <span class="number">0</span>; --<span class="variable">$j</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$arr</span>[<span class="variable">$j</span>] &gt; <span class="variable">$value</span>) &#123;</span><br><span class="line">                <span class="variable">$arr</span>[<span class="variable">$j</span> + <span class="number">1</span>] = <span class="variable">$arr</span>[<span class="variable">$j</span>];  <span class="comment">// 数据移动</span></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$arr</span>[<span class="variable">$j</span> + <span class="number">1</span>] = <span class="variable">$value</span>; <span class="comment">// 插入数据</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$arr</span> = [<span class="number">1</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">4</span>];</span><br><span class="line"><span class="title function_ invoke__">insertionSort</span>(<span class="variable">$arr</span>);</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$arr</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>选择排序</title>
      <link href="/posts/7430112.html"/>
      <url>/posts/7430112.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="一、原理"><a href="#一、原理" class="headerlink" title="一、原理"></a>一、原理</h1><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">我们将数组中的数据分为两个区间，已排序区间和未排序区间。</span><br><span class="line">每次会从未排序区间中找到最小的元素，将其放到已排序区间的末尾。</span><br><span class="line">重复这个过程，直到未排序区间中元素为空，算法结束。</span><br></pre></td></tr></table></figure><h1 id="二、性能"><a href="#二、性能" class="headerlink" title="二、性能"></a>二、性能</h1><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">第一，冒泡排序是原地排序算法吗？</span><br><span class="line">选择排序空间复杂度为 <span class="built_in">O</span>(<span class="number">1</span>)，是一种原地排序算法。</span><br><span class="line"></span><br><span class="line">第二，冒泡排序是稳定的排序算法吗？</span><br><span class="line">选择排序是一种不稳定的排序算法。</span><br><span class="line">选择排序每次都要找剩余未排序元素中的最小值，并和前面的元素交换位置，这样破坏了稳定性。</span><br><span class="line"></span><br><span class="line">第三，冒泡排序的时间复杂度是多少？</span><br><span class="line">选择排序的最好情况时间复杂度、最坏情况和平均情况时间复杂度都为 <span class="built_in">O</span>(n2)。</span><br></pre></td></tr></table></figure><h1 id="三、实现"><a href="#三、实现" class="headerlink" title="三、实现"></a>三、实现</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 选择排序</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">selectionSort</span>(<span class="params">&amp;<span class="variable">$arr</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$length</span> = <span class="title function_ invoke__">count</span>(<span class="variable">$arr</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$length</span> &lt;= <span class="number">1</span>) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$length</span> - <span class="number">1</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">        <span class="comment">//先假设最小的值的位置</span></span><br><span class="line">        <span class="variable">$p</span> = <span class="variable">$i</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="variable">$j</span> = <span class="variable">$i</span> + <span class="number">1</span>; <span class="variable">$j</span> &lt; <span class="variable">$length</span>; <span class="variable">$j</span>++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$arr</span>[<span class="variable">$p</span>] &gt; <span class="variable">$arr</span>[<span class="variable">$j</span>]) &#123;</span><br><span class="line">                <span class="variable">$p</span> = <span class="variable">$j</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$tmp</span> = <span class="variable">$arr</span>[<span class="variable">$p</span>];</span><br><span class="line">        <span class="variable">$arr</span>[<span class="variable">$p</span>] = <span class="variable">$arr</span>[<span class="variable">$i</span>];</span><br><span class="line">        <span class="variable">$arr</span>[<span class="variable">$i</span>] = <span class="variable">$tmp</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$arr</span> = [<span class="number">1</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">4</span>];</span><br><span class="line"><span class="title function_ invoke__">selectionSort</span>(<span class="variable">$arr</span>);</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$arr</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hadoop常用命令</title>
      <link href="/posts/eca9a482.html"/>
      <url>/posts/eca9a482.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h3 id="1-输出以日期命名的文件夹，并且命名日期低于指定值的文件夹路径"><a href="#1-输出以日期命名的文件夹，并且命名日期低于指定值的文件夹路径" class="headerlink" title="1. 输出以日期命名的文件夹，并且命名日期低于指定值的文件夹路径"></a>1. 输出以日期命名的文件夹，并且命名日期低于指定值的文件夹路径</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hadoop fs -<span class="built_in">du</span> -h /img/*|grep -E <span class="string">&quot;[0-9a-zA-Z/]+/[0-9]+&quot;</span>|<span class="built_in">sort</span> -t <span class="string">&#x27;/&#x27;</span> -k 4nr|awk -F <span class="string">&#x27;/&#x27;</span> <span class="string">&#x27;&#123;if ($(NF)&lt;20220516) print $0&#125;&#x27;</span></span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> hadoop </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hadoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>json生成table</title>
      <link href="/posts/8c45e8c2.html"/>
      <url>/posts/8c45e8c2.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">table</span> &#123;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border-collapse</span>: collapse;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border-top</span>: <span class="number">1px</span> solid <span class="number">#ddd</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">border-left</span>: <span class="number">1px</span> solid <span class="number">#ddd</span>;</span></span><br><span class="line"><span class="language-css">    <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">th</span>, <span class="selector-tag">td</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#ddd</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border-right</span>: <span class="number">1px</span> solid <span class="number">#ddd</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">padding</span>: <span class="number">8px</span> <span class="number">0</span> <span class="number">8px</span> <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.optionButtom</span>&#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#217fff</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">padding</span>: <span class="number">5px</span> <span class="number">8px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">color</span>: <span class="number">#217fff</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">text-decoration</span>: none;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.extractTable</span> <span class="selector-tag">td</span><span class="selector-pseudo">:first-of-type</span> <span class="selector-tag">span</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">padding-left</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.icon-arrow</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border</span>: <span class="number">6px</span> solid transparent;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">color</span>: <span class="number">#c9c9c9</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.arrow-right</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border-left</span>: <span class="number">5px</span> solid;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border-left-color</span>: initial;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">top</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.arrow-down</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border-top</span>: <span class="number">5px</span> solid;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border-top-color</span>: initial;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">top</span>: <span class="number">24px</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">&quot;extractTable&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span> <span class="attr">colspan</span>=<span class="string">&quot;1&quot;</span> <span class="attr">rowspan</span>=<span class="string">&quot;1&quot;</span> <span class="attr">class</span>=<span class="string">&quot;&quot;</span>&gt;</span>参数名<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span> <span class="attr">colspan</span>=<span class="string">&quot;1&quot;</span> <span class="attr">rowspan</span>=<span class="string">&quot;1&quot;</span> <span class="attr">class</span>=<span class="string">&quot;&quot;</span>&gt;</span>类型<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span> <span class="attr">colspan</span>=<span class="string">&quot;1&quot;</span> <span class="attr">rowspan</span>=<span class="string">&quot;1&quot;</span> <span class="attr">class</span>=<span class="string">&quot;&quot;</span>&gt;</span>说明<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span> <span class="attr">colspan</span>=<span class="string">&quot;1&quot;</span> <span class="attr">rowspan</span>=<span class="string">&quot;1&quot;</span> <span class="attr">class</span>=<span class="string">&quot;&quot;</span>&gt;</span>示例<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span> <span class="attr">colspan</span>=<span class="string">&quot;1&quot;</span> <span class="attr">rowspan</span>=<span class="string">&quot;1&quot;</span> <span class="attr">class</span>=<span class="string">&quot;&quot;</span>&gt;</span>操作<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 格式化数据</span></span></span><br><span class="line"><span class="language-javascript">    $(<span class="string">&#x27;.formatData&#x27;</span>).<span class="title function_">on</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> re = $(<span class="string">&#x27;textarea[name=&quot;re&quot;]&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (re &amp;&amp; re.<span class="title function_">val</span>()) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 将填写的json字符串转换为json对象再转换为字符串，格式化</span></span></span><br><span class="line"><span class="language-javascript">            re.<span class="title function_">val</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>($.<span class="title function_">parseJSON</span>(re.<span class="title function_">val</span>()), <span class="literal">null</span>, <span class="string">&#x27;\t&#x27;</span>));</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 提取到右侧</span></span></span><br><span class="line"><span class="language-javascript">    $(<span class="string">&#x27;.extractToRight&#x27;</span>).<span class="title function_">on</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> parentEle = $(<span class="variable language_">this</span>).<span class="title function_">parents</span>(<span class="string">&#x27;.form-group&#x27;</span>),</span></span><br><span class="line"><span class="language-javascript">            extractDataEle = parentEle.<span class="title function_">find</span>(<span class="string">&#x27;textarea&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (extractDataEle &amp;&amp; extractDataEle.<span class="title function_">val</span>()) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 将填写的json字符串转换为json对象再转换为字符串，格式化</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">let</span> extractBody = parentEle.<span class="title function_">find</span>(<span class="string">&#x27;.extractTable tbody&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">            extractBody.<span class="title function_">empty</span>();</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">recursiveObjectToTable</span>($.<span class="title function_">parseJSON</span>(extractDataEle.<span class="title function_">val</span>()), <span class="number">0</span>, extractBody, <span class="string">&#x27;&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">/**</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">     * 递归提取json对象生成table</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">     * <span class="doctag">@param</span> object json对象</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">     * <span class="doctag">@param</span> int level 层级</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">     * <span class="doctag">@param</span> element table元素 $(&#x27;table&#x27;)</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">     * <span class="doctag">@param</span> string | int parentKey 父类key</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">     */</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">recursiveObjectToTable</span>(<span class="params">obj, level, element, parentKey</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (<span class="title function_">typeof</span>(obj) == <span class="string">&#x27;object&#x27;</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">let</span> i = <span class="number">0</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            $.<span class="title function_">each</span>(obj, <span class="keyword">function</span>(<span class="params">key, value</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// 填充参数名、类型、说明、示例、操作</span></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">let</span> className = <span class="string">&#x27;extract-level-&#x27;</span> + level + <span class="string">&#x27; extract-index-&#x27;</span> + i,</span></span><br><span class="line"><span class="language-javascript">                    tdHtml = <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                    trElement = element.<span class="title function_">find</span>(<span class="string">&#x27;.&#x27;</span> + className),</span></span><br><span class="line"><span class="language-javascript">                    keyType = <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                    isObj = <span class="title function_">typeof</span>(value) == <span class="string">&#x27;object&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                    curLevel = level,</span></span><br><span class="line"><span class="language-javascript">                    dataValue = value;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">if</span> (!<span class="built_in">isNaN</span>(value)) &#123;</span></span><br><span class="line"><span class="language-javascript">                    keyType = <span class="string">&#x27;int&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> ($.<span class="title function_">isArray</span>(value)) &#123;</span></span><br><span class="line"><span class="language-javascript">                    keyType = <span class="string">&#x27;array&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">                    dataValue = <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (isObj) &#123;</span></span><br><span class="line"><span class="language-javascript">                    keyType = <span class="string">&#x27;object&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">                    dataValue = <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">                &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                    keyType = <span class="title function_">typeof</span>(value);</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// 如果是对象并且key是int类型，则不显示在table种。如果是数组则要显示</span></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// if (isNaN(key)) &#123;</span></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//     curLevel = level + 1;</span></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// if (!(keyType == &#x27;object&#x27; &amp;&amp; !isNaN(key))) &#123;</span></span></span><br><span class="line"><span class="language-javascript">                curLevel = level + <span class="number">1</span>;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">if</span> (<span class="number">1</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">if</span> (trElement.<span class="property">length</span> == <span class="number">0</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="keyword">let</span> arrowHtml = <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">                        <span class="keyword">if</span> (isObj) &#123;</span></span><br><span class="line"><span class="language-javascript">                            arrowHtml = <span class="string">&#x27;&lt;i class=&quot;icon-arrow arrow-down&quot;&gt;&lt;/i&gt;&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">                        &#125;</span></span><br><span class="line"><span class="language-javascript">                        element.<span class="title function_">append</span>(</span></span><br><span class="line"><span class="language-javascript">                            <span class="string">&#x27;&lt;tr class=&quot;&#x27;</span> + className + <span class="string">&#x27;&quot; item-level=&quot;&#x27;</span> + level + <span class="string">&#x27;&quot; parentKey=&quot;&#x27;</span> + parentKey + <span class="string">&#x27;&quot;&gt;&#x27;</span> +</span></span><br><span class="line"><span class="language-javascript">                            <span class="string">&#x27;&lt;td style=&quot;position: relative;padding-left: &#x27;</span> + (curLevel * <span class="number">10</span>) + <span class="string">&#x27;px&quot;&gt;&#x27;</span> + arrowHtml + <span class="string">&#x27;&lt;span&gt;&#x27;</span> + key + <span class="string">&#x27;&lt;/span&gt;&lt;/td&gt;&#x27;</span> +</span></span><br><span class="line"><span class="language-javascript">                            <span class="string">&#x27;&lt;td&gt;&#x27;</span> + keyType + <span class="string">&#x27;&lt;/td&gt;&#x27;</span> +</span></span><br><span class="line"><span class="language-javascript">                            <span class="string">&#x27;&lt;td&gt;&lt;/td&gt;&#x27;</span> +</span></span><br><span class="line"><span class="language-javascript">                            <span class="string">&#x27;&lt;td&gt;&#x27;</span> + dataValue + <span class="string">&#x27;&lt;/td&gt;&#x27;</span> +</span></span><br><span class="line"><span class="language-javascript">                            <span class="string">&#x27;&lt;td&gt;&lt;button type=&quot;button&quot; class=&quot;btn btn-danger&quot; onclick=&quot;del(this)&quot;&gt;删除&lt;/button&gt;&lt;/td&gt;&#x27;</span> +</span></span><br><span class="line"><span class="language-javascript">                            <span class="string">&#x27;&lt;/tr&gt;&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                        );</span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// 如果是对象，则递归</span></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">if</span> (isObj) &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">let</span> curParentKey;</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">if</span> (parentKey) &#123;</span></span><br><span class="line"><span class="language-javascript">                        curParentKey = parentKey + <span class="string">&#x27;|&#x27;</span> + key;</span></span><br><span class="line"><span class="language-javascript">                    &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                        curParentKey = key;</span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                    <span class="title function_">recursiveObjectToTable</span>(value, curLevel, element, curParentKey);</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                i++;</span></span><br><span class="line"><span class="language-javascript">            &#125;);</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    $(<span class="string">&#x27;.extractToRight&#x27;</span>).<span class="title function_">click</span>();</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 点击展开折叠</span></span></span><br><span class="line"><span class="language-javascript">    $(<span class="string">&#x27;.extractTable&#x27;</span>).<span class="title function_">on</span>(<span class="string">&#x27;click&#x27;</span>, <span class="string">&#x27;tr&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> parentKey = $(<span class="variable language_">this</span>).<span class="title function_">attr</span>(<span class="string">&#x27;parentKey&#x27;</span>),</span></span><br><span class="line"><span class="language-javascript">            arrow = $(<span class="variable language_">this</span>).<span class="title function_">find</span>(<span class="string">&#x27;i&#x27;</span>),</span></span><br><span class="line"><span class="language-javascript">            curKey = $(<span class="variable language_">this</span>).<span class="title function_">find</span>(<span class="string">&#x27;td&#x27;</span>).<span class="title function_">eq</span>(<span class="number">0</span>).<span class="title function_">text</span>(),</span></span><br><span class="line"><span class="language-javascript">            searchParentKey = <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (parentKey != <span class="string">&#x27;&#x27;</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            searchParentKey = parentKey + <span class="string">&quot;|&quot;</span> + curKey;</span></span><br><span class="line"><span class="language-javascript">        &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">            searchParentKey = curKey;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        childsEle = $(<span class="variable language_">this</span>).<span class="title function_">parents</span>(<span class="string">&#x27;.extractTable&#x27;</span>).<span class="title function_">find</span>(<span class="string">&quot;tr[parentKey^=&#x27;&quot;</span> + searchParentKey + <span class="string">&quot;&#x27;]&quot;</span>); <span class="comment">// 获取parentKey指定开头元素</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 点击折叠</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (arrow.<span class="title function_">hasClass</span>(<span class="string">&#x27;arrow-down&#x27;</span>)) &#123;</span></span><br><span class="line"><span class="language-javascript">            arrow.<span class="title function_">removeClass</span>(<span class="string">&#x27;arrow-down&#x27;</span>).<span class="title function_">addClass</span>(<span class="string">&#x27;arrow-right&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">            childsEle.<span class="title function_">hide</span>();</span></span><br><span class="line"><span class="language-javascript">        &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">            arrow.<span class="title function_">removeClass</span>(<span class="string">&#x27;arrow-right&#x27;</span>).<span class="title function_">addClass</span>(<span class="string">&#x27;arrow-down&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">            childsEle.<span class="title function_">show</span>();</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>awk</title>
      <link href="/posts/c4a2fe4.html"/>
      <url>/posts/c4a2fe4.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h3 id="查询b文件中包含a文件内容的数据"><a href="#查询b文件中包含a文件内容的数据" class="headerlink" title="查询b文件中包含a文件内容的数据"></a>查询b文件中包含a文件内容的数据</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ awk <span class="string">&#x27;NR==FNR&#123;x[$0];next&#125;&#123;for(i in x)if($0~i)print&#125;&#x27;</span> <span class="selector-tag">a</span><span class="selector-class">.txt</span> <span class="selector-tag">b</span>.txt</span><br></pre></td></tr></table></figure><h3 id="让grep查找符合规则条件的文件内容，格式为每行一个规则样式"><a href="#让grep查找符合规则条件的文件内容，格式为每行一个规则样式" class="headerlink" title="让grep查找符合规则条件的文件内容，格式为每行一个规则样式"></a>让grep查找符合规则条件的文件内容，格式为每行一个规则样式</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ grep -f <span class="selector-tag">a</span><span class="selector-class">.txt</span> <span class="selector-tag">b</span>.txt</span><br></pre></td></tr></table></figure><h3 id="awk正则表达式-打印符合数据"><a href="#awk正则表达式-打印符合数据" class="headerlink" title="awk正则表达式, 打印符合数据"></a>awk正则表达式, 打印符合数据</h3><p>a.log内容为ip 2022:01:01:00 info<br>结果为2022:01:01:00 ip 2022:01:01:00 info</p><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ awk &#x27;&#123;match($0,/<span class="comment">[0-9]</span>+:<span class="comment">[0-9]</span>+:<span class="comment">[0-9]</span>+:<span class="comment">[0-9]</span>+/,res);print res<span class="comment">[0]</span>, $0&#125;&#x27; a.log</span><br></pre></td></tr></table></figure><h3 id="使用多个分隔符-先使用空格分割，然后对分割结果再使用”-”分割"><a href="#使用多个分隔符-先使用空格分割，然后对分割结果再使用”-”分割" class="headerlink" title="使用多个分隔符.先使用空格分割，然后对分割结果再使用”,”分割"></a>使用多个分隔符.先使用空格分割，然后对分割结果再使用”,”分割</h3><p>a.log内容为10 There are orange,apple,mongo<br>结果为10 There apple</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ awk -F <span class="string">&#x27;[ ,]&#x27;</span> <span class="string">&#x27;&#123;print <span class="subst">$1</span>,<span class="subst">$2</span>,<span class="subst">$5</span>&#125;&#x27;</span> a.log</span><br></pre></td></tr></table></figure><h3 id="将多行内容组合成一行"><a href="#将多行内容组合成一行" class="headerlink" title="将多行内容组合成一行"></a>将多行内容组合成一行</h3><p>aaa<br>bbb<br>组合成aaa,bbb,</p><figure class="highlight erlang"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">$ </span>awk &#x27;&#123;printf <span class="string">$2</span><span class="string">&quot;,&quot;</span>&#125;&#x27;</span><br></pre></td></tr></table></figure><h3 id="变量赋值"><a href="#变量赋值" class="headerlink" title="变量赋值"></a>变量赋值</h3><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ gawk -F <span class="string">&#x27;/&#x27;</span> -v <span class="keyword">date</span>=<span class="string">&quot;$(date -d &quot;</span>$&#123;DATE&#125; <span class="number">15</span> days ago<span class="string">&quot; &quot;</span>+%Y%m%d<span class="string">&quot;)&quot;</span> <span class="string">&#x27;&#123;if ($(NF)&lt;date) print $0&#125;&#x27;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>json_encode索引数组和关联数组处理</title>
      <link href="/posts/7d7d04c8.html"/>
      <url>/posts/7d7d04c8.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="一、-索引数组"><a href="#一、-索引数组" class="headerlink" title="一、 索引数组"></a>一、 索引数组</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$arr</span> = []; <span class="comment">// 输出 []</span></span><br><span class="line"><span class="variable">$arr</span> = [[<span class="string">&#x27;name&#x27;</span> =&gt; <span class="string">&#x27;cat&#x27;</span>], [<span class="string">&#x27;name&#x27;</span> =&gt; <span class="string">&#x27;cat1]]</span></span><br><span class="line"><span class="string">$arr = [0 =&gt; [&#x27;</span>name<span class="string">&#x27; =&gt; &#x27;</span>cat<span class="string">&#x27;], 1 =&gt; [&#x27;</span>name<span class="string">&#x27; =&gt; &#x27;</span>cat1<span class="string">&#x27;]];</span></span><br><span class="line"><span class="string">echo json_encode($arr);</span></span><br><span class="line"><span class="string">// 输出 [&#123;&quot;name&quot;: &quot;cat&quot;&#125;]</span></span><br></pre></td></tr></table></figure><h1 id="二、关联数组"><a href="#二、关联数组" class="headerlink" title="二、关联数组"></a>二、关联数组</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$arr</span> = []; <span class="comment">// 输出 []</span></span><br><span class="line"><span class="variable">$arr</span> = [<span class="string">&quot;a&quot;</span> =&gt; [<span class="string">&#x27;name&#x27;</span> =&gt; <span class="string">&#x27;cat&#x27;</span>], <span class="string">&quot;b&quot;</span> =&gt; [<span class="string">&#x27;name&#x27;</span> =&gt; <span class="string">&#x27;cat1&#x27;</span>]];</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">json_encode</span>(<span class="variable">$arr</span>);</span><br><span class="line"><span class="comment">// 输出 &#123;&#123;&quot;name&quot;: &quot;cat&quot;&#125;&#125;</span></span><br></pre></td></tr></table></figure><h1 id="三、标准库arrayObject"><a href="#三、标准库arrayObject" class="headerlink" title="三、标准库arrayObject"></a>三、标准库arrayObject</h1><p>如果需要索引数组按照关联数组的方式输出，维持数据结构不变则需要使用标准库ArrayObject转换为数组对象</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$arr</span> = <span class="keyword">new</span> <span class="title function_ invoke__">arrayObject</span>();</span><br><span class="line"><span class="variable">$arr</span> = [<span class="number">0</span> =&gt; [<span class="string">&#x27;name&#x27;</span> =&gt; <span class="string">&#x27;cat&#x27;</span>], <span class="number">1</span> =&gt; [<span class="string">&#x27;name&#x27;</span> =&gt; <span class="string">&#x27;cat1&#x27;</span>]];</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">json_encode</span>(<span class="variable">$arr</span>);</span><br><span class="line"><span class="comment">// 输出 &#123;&#123;&quot;name&quot;: &quot;cat&quot;&#125;&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql缓存机制</title>
      <link href="/posts/583a888f.html"/>
      <url>/posts/583a888f.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="一、-MySQL缓存简介"><a href="#一、-MySQL缓存简介" class="headerlink" title="一、 MySQL缓存简介"></a>一、 MySQL缓存简介</h1><h2 id="1-MySQL缓存机制说明"><a href="#1-MySQL缓存机制说明" class="headerlink" title="1. MySQL缓存机制说明"></a>1. MySQL缓存机制说明</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MySQL缓存机制即缓存<span class="keyword">sql</span> 文本及缓存结果，用KV形式保存再服务器内存中，如果运行相同的<span class="keyword">sql</span>，服务器直接从缓存中去获取结果，不需要再去解析、优化、执行<span class="keyword">sql</span></span><br></pre></td></tr></table></figure><h2 id="2-MySQL缓存失效"><a href="#2-MySQL缓存失效" class="headerlink" title="2. MySQL缓存失效"></a>2. MySQL缓存失效</h2><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> 在表的结构或数据发生改变时，查询缓存中的数据不再有效，查询缓存值的相关条目将被清空</span><br><span class="line"><span class="number">2.</span> <span class="keyword">INSERT</span>、<span class="keyword">UPDATE</span>、 <span class="keyword">DELETE</span>、<span class="keyword">TRUNCATE</span>、<span class="keyword">ALTER</span> <span class="keyword">TABLE</span>、<span class="keyword">DROP</span> <span class="keyword">TABLE</span>或<span class="keyword">DROP</span> <span class="keyword">DATABASE</span>会导致缓存数据失效</span><br></pre></td></tr></table></figure><h2 id="3-使用场景"><a href="#3-使用场景" class="headerlink" title="3. 使用场景"></a>3. 使用场景</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1.</span> 对于频繁更新的表，查询缓存不合适</span><br><span class="line"><span class="bullet">2.</span> 对于一些不变的数据且有大量相同sql查询的表，查询缓存可以大大提高查询的性能</span><br></pre></td></tr></table></figure><h2 id="二、-命中条件"><a href="#二、-命中条件" class="headerlink" title="二、 命中条件"></a>二、 命中条件</h2><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> 大小写敏感的hash查找实现的</span><br><span class="line"><span class="number">2.</span> 以<span class="keyword">SQL</span>、数据库名和客户端协议等作为KEY</span><br><span class="line"><span class="number">3.</span> 在判断命中前，MySQL不会解析<span class="keyword">SQL</span>，而是使用<span class="keyword">SQL</span>去查询缓存，<span class="keyword">SQL</span>上的任何字符的不同，如空格、注释等都会导致缓存不命中</span><br><span class="line"><span class="number">4.</span> 如果查询有不确定的数据，如<span class="keyword">like</span> now()、<span class="built_in">current_date</span>()，那么查询完成后结果都不会被缓存</span><br></pre></td></tr></table></figure><h1 id="三、工作流程"><a href="#三、工作流程" class="headerlink" title="三、工作流程"></a>三、工作流程</h1><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> 服务器接收<span class="keyword">SQL</span>，以<span class="keyword">SQL</span>和一些其他条件为key查找缓存表</span><br><span class="line"><span class="number">2.</span> 如果缓存命中，则直接返回缓存</span><br><span class="line"><span class="number">3.</span> 如果缓存没有命中，则执行<span class="keyword">SQL</span>查询，包括<span class="keyword">SQL</span>解析、预处理、再由优化器生成对应的执行计划。</span><br><span class="line"><span class="number">4.</span> MySql根据优化器生成的执行计划，调用存储引擎的API执行查询。</span><br><span class="line"><span class="number">4.</span> 将<span class="keyword">SQL</span>查询结果写入缓存表(不确定函数不缓存，例如now())，将结果返回给客户端。</span><br></pre></td></tr></table></figure><h1 id="四、MySQL缓存管理"><a href="#四、MySQL缓存管理" class="headerlink" title="四、MySQL缓存管理"></a>四、MySQL缓存管理</h1><h2 id="1-缓存的内存管理"><a href="#1-缓存的内存管理" class="headerlink" title="1. 缓存的内存管理"></a>1. 缓存的内存管理</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1.</span> MySQL缓存机制会在内存中开辟一块内存（query<span class="emphasis">_cache_</span>size）区来维护缓存数据，其中大概有40K的空间是用来维护缓存数据的元数据的，</span><br><span class="line">例如空间内存、数据表和查询结果的映射，SQL和查询结果的映射。</span><br><span class="line"><span class="bullet">2.</span> MySQL缓存机制将大内存块分为小内存块（query<span class="emphasis">_cache_</span>min<span class="emphasis">_res_</span>unit)，每个小块中存储自身的类型、大小和查询结果数据，还有前后内存块的指针。</span><br><span class="line"><span class="bullet">3.</span> MySQL缓存机制会在SQL查询开始（还未得到结果）时就去申请一块内存空间，所以即使缓存数据没有达到这个大小也需要占用申请的内存块空间（like linux filesystem’s block)。</span><br><span class="line">如果超出申请内存块的大小，则需要再申请一个内存块。当查询完成发现申请的内存有富余，则会将富余的内存空间释放掉，因而可能会造成内存碎片。</span><br></pre></td></tr></table></figure><h2 id="2-缓存失败"><a href="#2-缓存失败" class="headerlink" title="2. 缓存失败"></a>2. 缓存失败</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1.</span> 当某个表正在写入数据，则这个表的缓存将会处于失效状态</span><br><span class="line"><span class="bullet">2.</span> 在InnoDB中，如果某个事务修改了表，则这个表的缓存在事务提交前都会处于失效状态，即在事务提交前，这个表的相关查询都无法被缓存</span><br></pre></td></tr></table></figure><h1 id="五、缓存的使用时机"><a href="#五、缓存的使用时机" class="headerlink" title="五、缓存的使用时机"></a>五、缓存的使用时机</h1><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1.</span> 通过缓存命中率判断</span><br><span class="line">缓存命中率 = 缓存命中次数 (Qcache<span class="emphasis">_hits) / 查询次数 (Com_</span>select)</span><br><span class="line"></span><br><span class="line"><span class="bullet">2.</span> 通过缓存写入率判断</span><br><span class="line">写入率 = 缓存写入次数 (Qcache<span class="emphasis">_inserts) / 查询次数 (Qcache_</span>inserts)</span><br><span class="line"></span><br><span class="line"><span class="bullet">3.</span> 通过命中-写入率判断</span><br><span class="line">比率 = 命中次数 (Qcache<span class="emphasis">_hits) / 写入次数 (Qcache_</span>inserts),</span><br><span class="line"></span><br><span class="line">高性能MySQL中称之为比较能反映性能提升的指数，一般来说达到3:1则算是查询缓存有效，而最好能够达到10:1</span><br></pre></td></tr></table></figure><h1 id="六、缓存参数配置"><a href="#六、缓存参数配置" class="headerlink" title="六、缓存参数配置"></a>六、缓存参数配置</h1><h2 id="1-查看缓存相关配置"><a href="#1-查看缓存相关配置" class="headerlink" title="1. 查看缓存相关配置"></a>1. 查看缓存相关配置</h2><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt;<span class="keyword">SHOW</span> VARIABLES <span class="keyword">LIKE</span> <span class="string">&#x27;%query_cache%&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="number">1.</span>query_cache_type</span><br><span class="line">是否打开缓存，可选参数有：</span><br><span class="line">- <span class="keyword">OFF</span>（<span class="number">0</span>）：关闭 ，不使用查询缓存</span><br><span class="line">- <span class="keyword">ON</span>（<span class="number">1</span>）：总是打开 ，始终使用查询缓存</span><br><span class="line">- DEMAND（<span class="number">2</span>）：按需使用查询缓存，只有明确写了SQL_CACHE的查询才会写入缓存</span><br><span class="line"></span><br><span class="line">如果query_cache_type为<span class="number">1</span>而又不想利用查询缓存中的数据，可以用下面的<span class="keyword">SQL</span>：</span><br><span class="line">- <span class="keyword">SELECT</span> SQL_NO_CACHE * <span class="keyword">FROM</span> my_table <span class="keyword">WHERE</span> condition;</span><br><span class="line">如果值为<span class="number">2</span>，要使用缓存的话，需要使用SQL_CACHE开关参数：</span><br><span class="line">- <span class="keyword">SELECT</span> SQL_CACHE * <span class="keyword">FROM</span> my_table <span class="keyword">WHERE</span> condition;</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>query_cache_size</span><br><span class="line">缓存使用的总内存空间大小，单位是字节，这个值必须是<span class="number">1024</span>的整数倍；否则MySQL实际分配可能跟这个数值不同(感觉这个应该跟文件系统的blcok大小有关)</span><br><span class="line">默认情况下query_cache_size为<span class="number">0</span>，表示为查询缓存预留的内存为<span class="number">0</span>，则无法使用查询缓存</span><br><span class="line">设置query_cache_size的值</span><br><span class="line">- <span class="keyword">SET</span> <span class="keyword">GLOBAL</span> query_cache_size = <span class="number">134217728</span>; <span class="comment">-- 注意值如果设得太小不会生效</span></span><br><span class="line"></span><br><span class="line"><span class="number">3.</span>query_cache_min_res_unit</span><br><span class="line">分配内存块时的最小单位大小</span><br><span class="line"></span><br><span class="line"><span class="number">4.</span>query_cache_limit</span><br><span class="line">MySQL能够缓存的最大结果，如果超出，则增加 Qcache_not_cached的值，并删除查询结果</span><br><span class="line"></span><br><span class="line"><span class="number">5.</span>query_cache_wlock_invalidate</span><br><span class="line">如果某个数据表被锁住，是否仍然从缓存中返回数据，默认是<span class="keyword">OFF</span>，表示仍然可以返回</span><br><span class="line"></span><br><span class="line"><span class="number">6.</span> <span class="keyword">GLOBAL</span> STATUS 中关于缓存的参数解释</span><br><span class="line">Qcache_free_blocks：缓存池中空闲块的个数</span><br><span class="line">Qcache_free_memory：缓存中空闲内存量</span><br><span class="line">Qcache_hits：缓存命中次数</span><br><span class="line">Qcache_inserts：缓存写入次数</span><br><span class="line">Qcache_lowmen_prunes：因内存不足删除缓存次数</span><br><span class="line">Qcache_not_cached：查询未被缓存次数,例如查询结果超出缓存块大小,查询中包含可变函数等</span><br><span class="line">Qcache_queries_in_cache：当前缓存中缓存的<span class="keyword">SQL</span>数量</span><br><span class="line">Qcache_total_blocks：缓存总block数</span><br></pre></td></tr></table></figure><h1 id="七、减少缓存碎片策略"><a href="#七、减少缓存碎片策略" class="headerlink" title="七、减少缓存碎片策略"></a>七、减少缓存碎片策略</h1><figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">选择合适的<span class="keyword">block</span>大小</span><br><span class="line">使用 <span class="keyword">FLUSH</span> QUERY CACHE 命令整理碎片，这个命令在整理缓存期间，会导致其他连接无法使用查询缓存</span><br></pre></td></tr></table></figure><h1 id="八、清空缓存的命令"><a href="#八、清空缓存的命令" class="headerlink" title="八、清空缓存的命令"></a>八、清空缓存的命令</h1><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">RESET QUERY <span class="keyword">CACHE</span>; <span class="comment">// 从查询缓存中移出所有查询。</span></span><br><span class="line">FLUSH TABLES; <span class="comment">//关闭所有打开的表，同时该操作将会清空查询缓存中的内容。</span></span><br></pre></td></tr></table></figure><h1 id="九-InnoDB查询缓存"><a href="#九-InnoDB查询缓存" class="headerlink" title="九. InnoDB查询缓存"></a>九. InnoDB查询缓存</h1><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">InnoDB存储引擎会对每个表设置一个事务计数器，里面存储当前最大的事务ID</span><br><span class="line">当一个事务提交时，InnoDB会使用MVCC中系统最大的事务ID更新当前表的计数器</span><br><span class="line">只有比这个最大ID大的事务能使用查询缓存，其他比这个ID小的事务则不能使用查询缓存</span><br><span class="line">在InnoDB中，所有加锁操作的事务都不使用任何查询缓存</span><br><span class="line">查询必须是完全相同的(逐字节相同)才能够被认为是相同的。</span><br><span class="line">查询字符串由于其它原因使用不同的数据库、不同的协议版本或者不同的默认字符集都会被认为是不同的查询而分别进行缓存。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>COUNT(*)、COUNT(1)、COUNT(字段)区别</title>
      <link href="/posts/9ad8d7b0.html"/>
      <url>/posts/9ad8d7b0.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h2 id="1、初识COUNT"><a href="#1、初识COUNT" class="headerlink" title="1、初识COUNT"></a>1、初识COUNT</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、<span class="built_in">COUNT</span>(expr) ，返回<span class="keyword">SELECT</span>语句检索的行中expr的值不为<span class="keyword">NULL</span>的数量。结果是一个<span class="type">BIGINT</span>值。</span><br><span class="line"><span class="number">2</span>、如果查询结果没有命中任何记录，则返回<span class="number">0</span></span><br><span class="line"><span class="number">3</span>、但是，值得注意的是，<span class="built_in">COUNT</span>(<span class="operator">*</span>) 的统计结果中，会包含值为<span class="keyword">NULL</span>的行数。</span><br></pre></td></tr></table></figure><h2 id="2-COUNT-字段-、COUNT-常量-和COUNT-之间的区别"><a href="#2-COUNT-字段-、COUNT-常量-和COUNT-之间的区别" class="headerlink" title="2.COUNT(字段)、COUNT(常量)和COUNT(*)之间的区别"></a>2.COUNT(字段)、COUNT(常量)和COUNT(*)之间的区别</h2><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">COUNT(常量) 和 COUNT<span class="comment">(*) 表示的是直接查询符合条件的数据库表的行数。</span></span><br><span class="line"><span class="comment">而COUNT(列名)表示的是查询符合条件的列的值不为NULL的行数。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">COUNT(*)</span>是SQL92定义的标准统计行数的语法，因为是标准语法，所以MySQL数据库进行过很多优化。</span><br><span class="line">SQL92：是数据库的一个ANSI/ISO标准。它定义了一种语言（SQL）以及数据库的行为（事务、隔离级别等）。</span><br></pre></td></tr></table></figure><h2 id="3-COUNT-的优化"><a href="#3-COUNT-的优化" class="headerlink" title="3.COUNT(*)的优化"></a>3.COUNT(*)的优化</h2><p>MySQL主要使用2种执行引擎：</p><p>MyISAM</p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">MyISAM不支持事务，MyISAM中的锁是表级锁</span><br><span class="line"></span><br><span class="line">MyISAM做了一个简单的优化，把表的总行数单独记录下来，如果执行<span class="keyword">count</span>(*)时可以直接返回，前提是不能有<span class="keyword">where</span>条件。</span><br><span class="line"></span><br><span class="line">MyISAM是表级锁，不会有并发的行操作，所以查到的结果是准确的。</span><br></pre></td></tr></table></figure><p>InnoDB</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">InnoDB支持事务，并且支持行级锁</span><br><span class="line"></span><br><span class="line">InnoDB不能使用这种缓存操作，因为支持事务，大部分操作都是行级锁，行可能被并行修改，那么缓存记录不准确。</span><br><span class="line">但是，InnoDB还是针对COUNT(*)语句做了些优化的。</span><br><span class="line">通过低成本的索引进行扫表，而不关注表的具体内容。</span><br><span class="line"></span><br><span class="line">InnoDB中索引分为聚簇索引（主键索引）和非聚簇索引（非主键索引），聚簇索引的叶子节点中保存的是整行记录，而非聚簇索引的叶子节点中保存的是该行记录的主键的值。</span><br><span class="line">MySQL会优先选择最小的非聚簇索引来扫表。</span><br><span class="line">优化的前提是查询语句中不包含<span class="keyword">where</span>条件和<span class="keyword">group</span> <span class="keyword">by</span>条件。</span><br></pre></td></tr></table></figure><h2 id="4-COUNT-和COUNT-1"><a href="#4-COUNT-和COUNT-1" class="headerlink" title="4.COUNT(*)和COUNT(1)"></a>4.COUNT(*)和COUNT(1)</h2><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">MySQL官方文档这么说：</span><br><span class="line">    InnoDB handles <span class="keyword">SELECT</span> COUNT<span class="comment">(*) and SELECT COUNT(1) operations in the same way. There is no performance difference.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">所以，对于count(1)和count(*)</span>，MySQL的优化是完全一样的，根本不存在谁更快！</span><br><span class="line">但依旧建议使用count<span class="comment">(*)，因为这是SQL92定义的标准统计行数的语法。</span></span><br></pre></td></tr></table></figure><h2 id="5-COUNT-字段"><a href="#5-COUNT-字段" class="headerlink" title="5.COUNT(字段)"></a>5.COUNT(字段)</h2><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">进行全表扫描，判断指定字段的值是否为<span class="literal">NULL</span>，不为<span class="literal">NULL</span>则累加。</span><br><span class="line">性能比<span class="built_in">count</span>(<span class="number">1</span>)和<span class="built_in">count</span>(*)慢。</span><br></pre></td></tr></table></figure><h2 id="6-总结"><a href="#6-总结" class="headerlink" title="6.总结"></a>6.总结</h2><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">COUNT函数的用法，主要用于统计表行数。主要用法有COUNT<span class="comment">(*)、COUNT(字段)和COUNT(1)。</span></span><br><span class="line"><span class="comment">因为COUNT(*)</span>是SQL92定义的标准统计行数的语法，所以MySQL对他进行了很多优化，MyISAM中会直接把表的总行数单独记录下来供COUNT<span class="comment">(*)查询，而InnoDB则会在扫表的时候选择最小的索引来降低成本。当然，这些优化的前提都是没有进行where和group的条件查询。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">在InnoDB中COUNT(*)</span>和COUNT(<span class="number">1</span>)实现上没有区别，而且效率一样，但是COUNT(字段)需要进行字段的非NULL判断，所以效率会低一些。</span><br><span class="line">因为COUNT<span class="comment">(*)是SQL92定义的标准统计行数的语法，并且效率高，所以请直接使用COUNT(*)</span>查询表的行数！</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>高性能mysql笔记</title>
      <link href="/posts/32ec3ef1.html"/>
      <url>/posts/32ec3ef1.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="一、加快ALTER-TABLE操作速度"><a href="#一、加快ALTER-TABLE操作速度" class="headerlink" title="一、加快ALTER TABLE操作速度"></a>一、加快ALTER TABLE操作速度</h1><p>MYSQL执行大部分修改表的操作，都是创建新的表，然后从旧的表复制数据到新表，然后删除旧表。</p><h2 id="1-修改默认值"><a href="#1-修改默认值" class="headerlink" title="1.修改默认值"></a>1.修改默认值</h2><p>修改默认值，不触发重建表操作</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt;ALTER TABLE table ALTER COLUMN name SET DEFAULT &#x27;&#x27;;</span><br></pre></td></tr></table></figure><h2 id="2-只修改-frm"><a href="#2-只修改-frm" class="headerlink" title="2.只修改.frm"></a>2.只修改.frm</h2><h3 id="1-创建一张相同结构的空表，并进行所需要的修改"><a href="#1-创建一张相同结构的空表，并进行所需要的修改" class="headerlink" title="1. 创建一张相同结构的空表，并进行所需要的修改"></a>1. 创建一张相同结构的空表，并进行所需要的修改</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt;CREATE TABLE table_new LIKE table;</span><br><span class="line">mysql&gt;ALTER TABLE table_new MODIFY COLUMN updateTime INT();</span><br></pre></td></tr></table></figure><h3 id="2-执行FLUSH-TABLES-WITH-READ-LOCK-这将会关闭所有正在使用的表，并禁止任何表被打开。"><a href="#2-执行FLUSH-TABLES-WITH-READ-LOCK-这将会关闭所有正在使用的表，并禁止任何表被打开。" class="headerlink" title="2. 执行FLUSH TABLES WITH READ LOCK,这将会关闭所有正在使用的表，并禁止任何表被打开。"></a>2. 执行FLUSH TABLES WITH READ LOCK,这将会关闭所有正在使用的表，并禁止任何表被打开。</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt;FLUSH TABLES WITH READ LOCK;</span><br></pre></td></tr></table></figure><h3 id="3-交换-frm"><a href="#3-交换-frm" class="headerlink" title="3. 交换.frm"></a>3. 交换.frm</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">mv</span> table.frm table_tmp.frm</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">mv</span> table_new.frm table.frm</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">mv</span> table_tmp.frm table_new.frm</span></span><br></pre></td></tr></table></figure><h3 id="4-执行UNLOCK-TABLES，释放只读锁"><a href="#4-执行UNLOCK-TABLES，释放只读锁" class="headerlink" title="4. 执行UNLOCK TABLES，释放只读锁"></a>4. 执行UNLOCK TABLES，释放只读锁</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt;UNLOCK TABLES;</span><br></pre></td></tr></table></figure><h3 id="5-删除创建的临时表"><a href="#5-删除创建的临时表" class="headerlink" title="5. 删除创建的临时表"></a>5. 删除创建的临时表</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt;DROP TABLE table_new;</span><br></pre></td></tr></table></figure><h1 id="二、EXPLAIN说明"><a href="#二、EXPLAIN说明" class="headerlink" title="二、EXPLAIN说明"></a>二、EXPLAIN说明</h1><h2 id="1-type说明"><a href="#1-type说明" class="headerlink" title="1.type说明"></a>1.type说明</h2><p>由上到下，性能由最差到最好<br>ALL：Full Table Scan， MySQL将遍历全表以找到匹配的行<br>index：Full Index Scan，index与ALL区别为index类型只遍历索引树<br>range：索引范围扫描，对索引的扫描开始于某一点，返回匹配值域的行，常见于between、&lt;、&gt;等的查询<br>ref：非唯一性索引扫描，返回匹配某个单独值的所有行。常见于使用非唯一索引即唯一索引的非唯一前缀进行的查找<br>eq_ref：唯一性索引扫描，对于每个索引键，表中只有一条记录与之匹配。常见于主键或唯一索引扫描<br>const、system：当MySQL对查询某部分进行优化，并转换为一个常量时，使用这些类型访问。如将主键置于where列表中，MySQL就能将该查询转换为一个常量<br>NULL：MySQL在优化过程中分解语句，执行时甚至不用访问表或索引  </p><h2 id="2-Extra说明"><a href="#2-Extra说明" class="headerlink" title="2.Extra说明"></a>2.Extra说明</h2><p>Using index (JSON property: using_index)<br>表示直接访问索引就能够获取到所需要的数据（覆盖索引），不需要通过索引回表；<br>覆盖索引:一个索引包含（或者说覆盖）所有需要查询的字段的值。我们称之为“覆盖索引”。也不需要回表操作</p><p>Using where (JSON property: attached_condition)<br>表示MySQL服务器在存储引擎收到记录后进行“后过滤”（Post-filter）,如果查询未能使用索引，Using where的作用只是提醒我们MySQL将用where子句来过滤结果集。  这个一般发生在MySQL服务器，而不是存储引擎层。一般发生在不能走索引扫描的情况下或者走索引扫描，但是有些查询条件不在索引当中的情况下。</p><p>Using index condition (JSON property: using_index_condition)<br>通过访问索引元组并首先测试它们以确定是否读取完整表行来读取表。以这种方式，索引信息用于推迟读取完整表行，除非是必要的。</p><p>Using temporary<br>表示MySQL需要使用临时表来存储结果集，常见于排序和分组查询</p><p>Using filesort<br>MySQL中无法利用索引完成的排序操作称为“文件排序”</p><p>Using Index Condition<br>在MySQL 5.6版本后加入的新特性（Index Condition Pushdown）;会先条件过滤索引，过滤完索引后找到所有符合索引条件的数据行，随后用 WHERE 子句中的其他条件去过滤这些数据行；</p><h2 id="3-使用EXTENDED"><a href="#3-使用EXTENDED" class="headerlink" title="3.使用EXTENDED"></a>3.使用EXTENDED</h2><p>额外显示mysql优化后的语句</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt;<span class="keyword">EXPLAIN</span> EXTENDED <span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">user</span>;</span><br><span class="line">mysql&gt;<span class="keyword">SHOW</span> WARNINGS;</span><br></pre></td></tr></table></figure><h1 id="二、索引"><a href="#二、索引" class="headerlink" title="二、索引"></a>二、索引</h1><h2 id="1-索引匹配"><a href="#1-索引匹配" class="headerlink" title="1. 索引匹配"></a>1. 索引匹配</h2><p>全值匹配：和索引中的所有列进行匹配<br>匹配最左前缀：只使用索引的第一列<br>匹配列前缀：只匹配列的值开头部分<br>    (ALTER TABLE ADD KEY(column_name, 4); 可以减少索引大小)<br>匹配范围值：精确匹配某一列并范围匹配另外一列：<br>只访问索引的查询：</p><h2 id="3-选择合适的索引列顺序"><a href="#3-选择合适的索引列顺序" class="headerlink" title="3.选择合适的索引列顺序"></a>3.选择合适的索引列顺序</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt;SELECT COUNT(*), SUM(uid=1), SUM(group_id=111) FROM (table);</span><br><span class="line">******************************************************************</span><br><span class="line">    COUNT(*): 20000</span><br><span class="line">    SUM(uid=1): 50</span><br><span class="line">    SUM(group_id=111): 18000</span><br><span class="line">假设输出数据如上，group_id和总数相近，该列添加索引则没有什么意义</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt;SELECT COUNT(DISTINCT column1) / COUNT(*) AS column1, COUNT(DISTINCT column2) / COUNT(*) AS column2, COUNT(*) FROM (table);</span><br><span class="line">*******************************************************************</span><br><span class="line">    column1： 0.03</span><br><span class="line">    column2：0.02</span><br><span class="line">索引列按照输出结果值从大到小排列。</span><br><span class="line">mysql&gt;ALTER TABLE (table) ADD KEY (column1, column2);</span><br></pre></td></tr></table></figure><h1 id="三、使用索引扫描来做排序"><a href="#三、使用索引扫描来做排序" class="headerlink" title="三、使用索引扫描来做排序"></a>三、使用索引扫描来做排序</h1><p>如果索引不能覆盖查询的全部列，就不得不扫描一条索引就回表查询一次对应的行。这基本上都是随机的IO，通常比顺序全表扫描慢，尤其在IO密集型工作负载时。</p><h2 id="1-必要条件"><a href="#1-必要条件" class="headerlink" title="1.必要条件"></a>1.必要条件</h2><ol><li>索引的列和ORDER BY 子句的顺序完全一致，并且所有列的排序方向一致，才能使用索引排序。</li><li>联表时，必须ORDER BY的列为一个表的列才行，既符合第一条</li><li>必须符合最左前缀要求(前导列为常量时除外)</li><li>前导列(索引前几个列)为常量时(field&#x3D;’xxx’或者ref为常量)，WHERE或者JOIN的这些列指定了常量</li></ol><h2 id="2-ORDER-BY-前导列常量索引排序"><a href="#2-ORDER-BY-前导列常量索引排序" class="headerlink" title="2.ORDER BY 前导列常量索引排序"></a>2.ORDER BY 前导列常量索引排序</h2><p>前导列为常量时，WHERE或者JOIN的这些列指定了常量，即使ORDER BY 不符合最左前缀，也可以按照索引排序。</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">索引(<span class="type">date</span>, uid, custom_id)</span><br><span class="line">mysql&gt;<span class="keyword">SELECT</span> * <span class="keyword">FROM</span> (<span class="keyword">table</span>) <span class="keyword">WHERE</span> <span class="type">date</span>=<span class="string">&#x27;&#x27;</span> <span class="keyword">AND</span> uid=<span class="string">&#x27;x&#x27;</span> <span class="keyword">ORDER</span> <span class="keyword">BY</span> custom_id;</span><br></pre></td></tr></table></figure><h2 id="3-索引检测"><a href="#3-索引检测" class="headerlink" title="3.索引检测"></a>3.索引检测</h2><p>pt-duplicate-key-checker：通过分析表结构来找出冗余和重复的索引。<br>pt-index-usage：读取查询日志，并对每条查询进行EXPLAIN操作，然后打印出关于索引和查询的报告，找出未使用的索引和服务质量差的查询。</p><h2 id="4-延迟关联"><a href="#4-延迟关联" class="headerlink" title="4.延迟关联"></a>4.延迟关联</h2><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt;<span class="keyword">SELECT</span> 非索引的字段 <span class="keyword">FROM</span> (<span class="keyword">table</span>) <span class="keyword">INNER</span> <span class="keyword">JOIN</span> (<span class="keyword">SELECT</span> <span class="keyword">primary key</span> <span class="keyword">FROM</span> (<span class="keyword">table</span>)) <span class="keyword">AS</span> A <span class="keyword">USING</span> (<span class="keyword">primary key</span>);</span><br><span class="line">mysql&gt;<span class="keyword">SELECT</span> * <span class="keyword">FROM</span> (<span class="keyword">table</span>) <span class="keyword">INNER</span> <span class="keyword">JOIN</span> (<span class="keyword">SELECT</span> id <span class="keyword">FROM</span> (<span class="keyword">table</span>)) <span class="keyword">AS</span> A <span class="keyword">USING</span> (id);</span><br></pre></td></tr></table></figure><h2 id="5-数据碎片类型"><a href="#5-数据碎片类型" class="headerlink" title="5. 数据碎片类型:"></a>5. 数据碎片类型:</h2><p>行碎片：<br>    数据行被存储为多个地方的多个片段中。即使查询只从索引中访问一行记录，行碎片也会导致性能下降</p><p>行间碎片：<br>    逻辑上的顺序的页或者行在磁盘上不是顺序存储的。<br>    行间碎片对诸如全表扫描和聚簇索引扫描之类的操作有很大的影响，因为这些操作原本能够从磁盘上顺序存储的数据中获益。</p><p>剩余空间碎片：<br>    数据页中有大量的空余空间。这会导致服务器读取大量不需要的数据，从而造成浪费。</p><p>对于MyISAM表，这三种碎片化都可能发生。InnoDB不会出现短小的行碎片，InnoDB会在移动短小的行并重写到一个片段中。<br>可以通过OPTIMIZE TABLE或者重新导入导出来重新整理数据。</p><p>MyISAM可以通过排序算法重建索引来消除碎片。<br>InnoDB可以通过删除索引，重新创建索引消除碎片。<br>对于不支持OPTIMIZE TABLE的存储引擎，可以通过将表的存储引擎修改为当前的引擎即可。</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt;ALERT TABLE (table) ENGINE<span class="operator">=</span>(engine)<span class="comment">;</span></span><br></pre></td></tr></table></figure><p>可以通过XtraBackUp –stats以非备份的方式运行，只打印索引和表的统计情况，<br>包括页中的数据量和空余空间，也可以用来确定数据的碎片化程度。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">xtrabackup --backup --stats --user=root --password=123456 --datadir=/mydata/data --target-dir=/backdir/fullback</span></span><br></pre></td></tr></table></figure><h2 id="5-总结"><a href="#5-总结" class="headerlink" title="5.总结"></a>5.总结</h2><p>选择索引和编写利用这些索引的查询时，有如下三个原则：</p><ol><li>单行访问是很慢的。如果服务器从存储中读取一个数据块只是为了获取其中一行，那么就浪费很多工作。<br>最好读取的块尽可能多所需要的行。使用索引可以创建位置引用以提升效率。</li></ol><p>2.按顺序访问范围数据是很快的，这有两个原因。第一，顺序IO不需要多次磁盘寻道，所以比随机IO快很多。<br>第二，如果服务器能够按照需要顺序读取数据，那么不需要再额外的排序操作，并且GROUP BY查询也无需再做排序和将行按组进行聚合计算了。</p><ol start="3"><li>索引覆盖查询是很快的。如果一个索引包含所需要的所有列，那么存储引擎就不需要再回表查询找行。这避免了大量的单行访问。</li></ol><h1 id="五、查询优化处理"><a href="#五、查询优化处理" class="headerlink" title="五、查询优化处理"></a>五、查询优化处理</h1><h2 id="1-查询优化器"><a href="#1-查询优化器" class="headerlink" title="1.查询优化器"></a>1.查询优化器</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 查看</span><br><span class="line">msyql<span class="operator">&gt;</span><span class="keyword">select</span> SQL_NO_CACHE <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> <span class="keyword">user</span>;</span><br><span class="line">mysql<span class="operator">&gt;</span><span class="keyword">show</span> status <span class="keyword">like</span> <span class="string">&#x27;Last_query_cost&#x27;</span>;</span><br><span class="line"># <span class="keyword">value</span>表示优化器认为大概需要做<span class="number">41187</span>个数据页的随机查找才能完成上面的查询。</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------+--------------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name   <span class="operator">|</span> <span class="keyword">Value</span>        <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------+--------------+</span></span><br><span class="line"><span class="operator">|</span> Last_query_cost <span class="operator">|</span> <span class="number">41187.199000</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------+--------------+</span></span><br></pre></td></tr></table></figure><h2 id="2-查询状态"><a href="#2-查询状态" class="headerlink" title="2.查询状态"></a>2.查询状态</h2><p>对于MySql的连接，或者说一个线程，任何时刻都有一个状态，该状态表示MySql当前正在做什么。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span><span class="keyword">SHOW</span> <span class="keyword">FULL</span> PROCESSLIST;</span><br></pre></td></tr></table></figure><p>sleep<br>线程正在等待客户端发送新的请求</p><p>query<br>线程正在执行查询或者正在将结果发送给客户端</p><p>locked<br>在MySQL的服务层，该线程正在等待表锁。在存储引擎级别实现的行锁，例如InnoDb的行锁，并不会体现在线程状态中</p><p>analying and statistics<br>线程正在收集存储引擎的统计信息，并生成查询的执行计划</p><p>copying to tmp table (on disk)<br>线程正在执行查询，并且将一个结果集复制到一个临时表中。这个状态要么执行GROUP BY，要么文件排序操作，或者UNION操作。<br>如果这个状态后面有”on disk”，表示MySQL正在将一个内存临时表放到磁盘上</p><p>sorting result<br>线程正在对结果集进行排序</p><p>sending data<br>线程可能在多种状态之间传递数据，或者生成结果集，或者在向客户端返回数据</p><h2 id="3-COUNT-优化"><a href="#3-COUNT-优化" class="headerlink" title="3.COUNT(*)优化"></a>3.COUNT(*)优化</h2><p>MyISAM，不带where下的COUNT(*)非常快，可以通过内置的特性直接获取。<br>可以通过以下方式来避免使用WHERE。<br>基于100w数据的情况下，测试出效率由高到低如下：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt;<span class="keyword">select</span> count(<span class="keyword">type</span>=<span class="number">1</span> <span class="keyword">or</span> <span class="keyword">NULL</span>),count(<span class="keyword">type</span>=<span class="number">2</span> <span class="keyword">or</span> <span class="keyword">NULL</span>) <span class="keyword">from</span> city_house.(<span class="keyword">table</span>);</span><br><span class="line">mysql&gt;<span class="keyword">select</span> SUM(<span class="keyword">type</span>=<span class="number">1</span>),SUM(<span class="keyword">type</span>=<span class="number">2</span>) <span class="keyword">from</span> city_house.(<span class="keyword">table</span>);</span><br><span class="line">mysql&gt;<span class="keyword">select</span> count(*) <span class="keyword">from</span> city_house.(<span class="keyword">table</span>) <span class="keyword">where</span> <span class="keyword">type</span> = <span class="number">1</span> <span class="keyword">or</span> <span class="keyword">type</span> =<span class="number">2</span> <span class="keyword">GROUP</span> <span class="keyword">by</span> `<span class="keyword">type</span>`;</span><br></pre></td></tr></table></figure><h2 id="4-LIMIT优化"><a href="#4-LIMIT优化" class="headerlink" title="4.LIMIT优化"></a>4.LIMIT优化</h2><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># <span class="keyword">limit</span>会获取<span class="number">100010</span>，然后抛弃<span class="number">100000</span>条数据。对于获取非索引的字段会很慢</span><br><span class="line">mysql&gt;<span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">limit</span> <span class="number">100000</span>,<span class="number">10</span>;</span><br><span class="line"># 通过延迟关联优化</span><br><span class="line">mysql&gt;<span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">join</span> (<span class="keyword">select</span> id <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">limit</span> <span class="number">100000</span>,<span class="number">10</span>) <span class="keyword">using</span> (id);</span><br></pre></td></tr></table></figure><h2 id="5-UNION优化"><a href="#5-UNION优化" class="headerlink" title="5.UNION优化"></a>5.UNION优化</h2><p>MySQL总是通过创建并填充临时表的方式来执行UNION查询。<br>除非确实需要服务器消除重复的行，否则一定要使用UNION ALL。<br>如果没有ALL关键词，MySQL会给临时表加上DISTINCT，这会导致对整个临时表的数据做唯一性检查，这样做代价非常大。</p><h2 id="编写偷懒的UNION，抑制查询"><a href="#编写偷懒的UNION，抑制查询" class="headerlink" title="编写偷懒的UNION，抑制查询"></a>编写偷懒的UNION，抑制查询</h2><p>通过偷懒的UNIONX抑制数据返回。只有当第一个表没有数据时，才会去第二个表查询。<br>一旦在第一个表查询岛数据，我们就定义一个@found变量。我们通过在结果中做一次赋值实现，然后将赋值放在行数greatest中来避免返回额外的数据。<br>为了明确数据来源于哪张表，新增了一个表明的列。最后我们需要在查询的末尾将变量重置为null，这样保证遍历时，不干扰后面的结果。</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt;<span class="keyword">select</span> <span class="string">&#x27;base&#x27;</span>,greatest(@<span class="built_in">found</span> := <span class="number">-1</span>, uid) <span class="keyword">as</span> maxuid <span class="keyword">user</span> <span class="keyword">where</span> uid =<span class="number">143557</span></span><br><span class="line"><span class="keyword">union</span> <span class="keyword">all</span></span><br><span class="line"><span class="keyword">select</span> <span class="string">&#x27;info&#x27;</span>,uid <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> uid = <span class="number">143556</span> <span class="keyword">and</span> @<span class="built_in">found</span> <span class="keyword">is</span> <span class="keyword">null</span> <span class="keyword">and</span> (@<span class="built_in">found</span>:=<span class="keyword">NUll</span>) <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span>;</span><br></pre></td></tr></table></figure><h2 id="分区表"><a href="#分区表" class="headerlink" title="分区表"></a>分区表</h2><h3 id="分区表原理"><a href="#分区表原理" class="headerlink" title="分区表原理"></a>分区表原理</h3><p>分区表由多个相关的底层表实现，这些底层也是句柄对象表示，所以我们可以直接访问各个分区。<br>存储引擎管理分区的各个底层表和管理普通表一样(所有的底层表都要使用相同的存储引擎)，分区表的索引只是在所有的底层表上各自添加了相同的索引。<br>5.7.6以前文件上存在多个#part的文件</p><p>分区表select insert update delete，分区表都会先打开并锁定所有底层表</p><h3 id="分区表会出现问题的情况"><a href="#分区表会出现问题的情况" class="headerlink" title="分区表会出现问题的情况"></a>分区表会出现问题的情况</h3><ol><li><p>NULL值会导致分区过滤无效<br>当分区方法返回null时，会被存放到第一个分区</p></li><li><p>分区表的列和索引列不匹配<br>如果定义的索引和分区的列不匹配，会导致查询无法进行分区过滤。</p></li><li><p>选择分区的成本可能很高<br>特别范围分区时，服务器需要扫描所有的分区来找到正确的答案。类似这种线性搜索的效果不高，随着分区的增加，成本随着增加，对于大多数系统来说100个左右的分区没有问题</p></li><li><p>打开和锁定所有底层表的成本可能很高  </p></li><li><p>维护分区的成本可能很高<br>重组分区或者ALTER语句的操作，需要先创建临时分区，再复制数据到其中，最后删除原分区</p></li></ol><h3 id="查询优化"><a href="#查询优化" class="headerlink" title="查询优化"></a>查询优化</h3><p>对于访问分区表来说，很重要的一点是在where条件中带入分区列，这样可以过滤掉无须访问的分区。</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 查看优化器是否执行了分区过滤</span><br><span class="line">mysql&gt;<span class="keyword">EXPLAIN</span> PARTITIONS <span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">USER</span>;</span><br></pre></td></tr></table></figure><h3 id="绑定变量"><a href="#绑定变量" class="headerlink" title="绑定变量"></a>绑定变量</h3><p>当创建一个绑定变量的SQL时，客户端向服务器发送一个SQL语句的原型。<br>服务器端收到这个SQL语句框架后，解析并保存这个SQL语句的部分执行计划，返回给客户端一个SQL语句处理句柄。以后每次执行这类查询，客户端都执行这个句柄。</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt;insert into tbname <span class="variable constant_">VALUES</span> (<span class="string">?,</span> <span class="string">?,</span> <span class="string">?)</span>;</span><br></pre></td></tr></table></figure><p>MySql使用绑定变量的时候，可以更高效的执行大量的重复语句：</p><ol><li>在服务器端只要解析一次SQL语句</li><li>在服务器端某些优化器的工作只需要执行一次，因为它会缓存一部分的执行计划。 (如果需要根据传入参数进行计算时，无法缓存这部分计划)</li><li>以二进制的方式只发送参数和句柄，比起每次都发送ASCII码文本效率更高。<br>一个二进制的日期字段只需要三个字节，但如果是ASCII则需要十个字节。<br>不过最大的节省还是来自于BLOB和TEXT字段，绑定变量的形式可以分块传输，而无须一次性传输。<br>二进制协议在客户端也可能节省很多内存，减少了网络开销，另外还节省了将数据从存储原始格式转换为文本格式的开销。</li><li>仅仅是参数，而不是整个查询语句需要发送到服务器端，所以网络开销会更小</li><li>MySQL在存储参数的时候，直接将其存放到缓存中，不再需要在内存中多次复制。</li></ol><p>绑定变量也更安全，无须在应用程序中处理转义，一则更简单，二则也大大减少了SQL注入和攻击的风险。</p><h3 id="全文索引"><a href="#全文索引" class="headerlink" title="全文索引"></a>全文索引</h3><p>MySql优先使用全文索引，然后才使用WHERE</p>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> mysql </category>
          
          <category> 高性能mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>composer 修改仓库</title>
      <link href="/posts/ef20ed86.html"/>
      <url>/posts/ef20ed86.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><p>安装 laravel 失败处理</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl error <span class="number">28</span> <span class="keyword">while</span> downloading <span class="keyword">https</span>://repo.packagist.org/p2/psr/<span class="keyword">http</span>-client.json: Operation timed out <span class="keyword">after</span> <span class="number">10000</span> <span class="built_in">milliseconds</span> <span class="keyword">with</span> <span class="number">0</span> out <span class="keyword">of</span> <span class="number">0</span> <span class="keyword">bytes</span> received</span><br></pre></td></tr></table></figure><p>修改 composer 仓库</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ composer config -<span class="selector-tag">g</span> repo<span class="selector-class">.packagist</span> composer https:<span class="comment">//mirrors.aliyun.com/composer/</span></span><br></pre></td></tr></table></figure><p>设置PATH</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">export</span> <span class="attribute">PATH</span>=<span class="string">&quot;~/.config/composer/vendor/bin:<span class="variable">$PATH</span>&quot;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pt-query-digest 慢日志分析</title>
      <link href="/posts/aeba0a25.html"/>
      <url>/posts/aeba0a25.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="一、安装"><a href="#一、安装" class="headerlink" title="一、安装"></a>一、安装</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> yum install https://repo.percona.com/yum/percona-release-latest.noarch.rpm</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> percona-release <span class="built_in">enable</span> tools release</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">sudo</span> yum install percona-toolkit</span></span><br></pre></td></tr></table></figure><h1 id="二、语法和使用"><a href="#二、语法和使用" class="headerlink" title="二、语法和使用"></a>二、<a href="https://www.percona.com/doc/percona-toolkit/3.0/pt-query-digest.html">语法和使用</a></h1><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="keyword">pt</span>-query-digest mysql-slow.<span class="built_in">log</span></span><br><span class="line"># 指定数据库分析</span><br><span class="line">$ <span class="keyword">pt</span>-query-digest mysql-slow.<span class="built_in">log</span> --<span class="built_in">type</span>=slowlog --<span class="built_in">filter</span> <span class="string">&#x27;($event-&gt;&#123;db&#125; || &quot;&quot;) =~ m/^mysql/i&#x27;</span></span><br><span class="line"># 执行用户分析</span><br><span class="line">$ <span class="keyword">pt</span>-query-digest mysql-slow.<span class="built_in">log</span> --<span class="built_in">type</span>=slowlog --<span class="built_in">filter</span> <span class="string">&#x27;($event-&gt;&#123;user&#125; || &quot;&quot;) =~ m/^root/i&#x27;</span> </span><br></pre></td></tr></table></figure><h2 id="1-语法"><a href="#1-语法" class="headerlink" title="1.语法"></a>1.语法</h2><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">pt-query-digest <span class="selector-attr">[OPTIONS]</span> <span class="selector-attr">[FILES]</span> <span class="selector-attr">[DSN]</span></span><br><span class="line"><span class="attr">--create-review-table</span> 当使用<span class="attr">--review</span>参数把分析结果输出到表中时，如果没有表就自动创建。</span><br><span class="line"><span class="attr">--create-history-table</span> 当使用<span class="attr">--history</span>参数把分析结果输出到表中时，如果没有表就自动创建。</span><br><span class="line"><span class="attr">--filter</span> 对输入的慢查询按指定的字符串进行匹配过滤后再进行分析</span><br><span class="line"><span class="attr">--limit</span> 限制输出结果百分比或数量，默认值是<span class="number">20</span>,即将最慢的<span class="number">20</span>条语句输出，如果是<span class="number">50%</span>则按总响应时间占比从大到小排序，输出到总和达到<span class="number">50%</span>位置截止。</span><br><span class="line"><span class="attr">--host</span> mysql服务器地址</span><br><span class="line"><span class="attr">--user</span> mysql用户名</span><br><span class="line"><span class="attr">--password</span> mysql用户密码</span><br><span class="line"><span class="attr">--history</span> 将分析结果保存到表中，分析结果比较详细，下次再使用<span class="attr">--history</span>时，如果存在相同的语句，且查询所在的时间区间和历史表中的不同，则会记录到数据表中，可以通过查询同一CHECKSUM来比较某类型查询的历史变化。</span><br><span class="line"><span class="attr">--review</span> 将分析结果保存到表中，这个分析只是对查询条件进行参数化，一个类型的查询一条记录，比较简单。当下次使用<span class="attr">--review</span>时，如果存在相同的语句分析，就不会记录到数据表中。</span><br><span class="line"><span class="attr">--output</span> 分析结果输出类型，值可以是<span class="built_in">report</span>(标准分析报告)、<span class="built_in">slowlog</span>(Mysql slow log)、json、json-anon，一般使用report，以便于阅读。</span><br><span class="line"><span class="attr">--since</span> 从什么时间开始分析，值为字符串，可以是指定的某个”yyyy-mm-<span class="selector-tag">dd</span> <span class="selector-attr">[hh:mm:ss]</span>”格式的时间点，也可以是简单的一个时间值：<span class="built_in">s</span>(秒)、<span class="built_in">h</span>(小时)、<span class="built_in">m</span>(分钟)、<span class="built_in">d</span>(天)，如<span class="number">12</span>h就表示从<span class="number">12</span>小时前开始统计。</span><br><span class="line"><span class="attr">--until</span> 截止时间，配合—since可以分析一段时间内的慢查询。</span><br></pre></td></tr></table></figure><h2 id="2-输出结果解析"><a href="#2-输出结果解析" class="headerlink" title="2.输出结果解析"></a>2.输出结果解析</h2><h3 id="1-总体统计结果"><a href="#1-总体统计结果" class="headerlink" title="(1) 总体统计结果"></a>(1) 总体统计结果</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">用户时间，系统时间，物理内存占用大小，虚拟内存占用大小</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">5.3s user <span class="keyword">time</span>, 530ms system <span class="keyword">time</span>, 28.73M rss, 125.29M vsz</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Current <span class="built_in">date</span>: Thu Jan 20 14:29:24 2022</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Hostname: centos7-v1</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Files: mysql-slow.log</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Overall(总查询数): 13.32k total, 52 unique(唯一查询数), 0.00 QPS(Query Per Second 每秒请求数), 0.00x concurrency(并发数) __________</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment"># Time range(查询执行的时间范围): 2021-07-22 09:18:21 to 2022-01-19 10:36:09</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Attribute          total     min     max     avg     95%  stddev(标准)  median(中等)</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">============     ======= ======= ======= ======= ======= ======= =======</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Exec <span class="keyword">time</span>         39987s      1s   1964s      3s      7s     22s      2s</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Lock <span class="keyword">time</span>             3s       0   124ms   215us   273us     2ms   194us</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Rows sent        340.80M       0 352.77k  26.21k  83.83k  43.04k   9.33k (发送到客户端行数)</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Rows examine       9.39G       0   6.00M 739.43k   1.39M 479.10k 790.84k (sql扫描行数)</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Query size         6.91M       6  28.34k  544.19  719.66  360.75  719.66 (查询字节数)</span></span><br></pre></td></tr></table></figure><h3 id="2-分组统计结果"><a href="#2-分组统计结果" class="headerlink" title="(2) 分组统计结果"></a>(2) 分组统计结果</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Profile</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">排名 查询指纹 Response <span class="keyword">time</span>：总的响应时间 Calls：执行次数 R/Call：平均每次执行的响应时间</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Rank Query ID                            Response <span class="keyword">time</span>    Calls R/Call</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">==== =================================== ================ ===== =======</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">   1 0xF7E793AD5965FDE698A73EDDF501A102  25710.4656 64.3%  8518  3.0184  1.49 SELECT</span> </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">   2 0x15945C636C00F53419144C6B43DD503F   6883.2103 17.2%  3061  2.2487  1.74 SELECT</span> </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">MISC 0xMISC(剩余查询的小时)                5133.6071 12.8%   104 49.3616   0.0 &lt;40 ITEMS&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-查询SQL概况"><a href="#3-查询SQL概况" class="headerlink" title="(3) 查询SQL概况"></a>(3) 查询SQL概况</h3><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"># 查询的顺序号和分组统计的Rank一致。每秒请求数、并发数、查询指纹</span><br><span class="line"># 通过tail -c +<span class="number">968618</span> mysql-slow.log 查看细节</span><br><span class="line"># Query <span class="number">1</span>: <span class="number">0.01</span> QPS, <span class="number">0.02</span>x concurrency, ID <span class="number">0xF7E793AD5965FDE698A73EDDF501A102</span> at byte <span class="number">968618</span></span><br><span class="line"># This item is included <span class="keyword">in</span> the report because it matches --limit.</span><br><span class="line"># V/M：响应时间Variance-to-mean的比率，离差指数。指数高的查询对应的执行时间变化较大，这类查询比较值得优化，通常可以使用--explain 来查看查询的执行计划</span><br><span class="line"># Item：查询对象</span><br><span class="line"># Scores: V/M = <span class="number">1.49</span></span><br><span class="line"># Time range: <span class="number">2022</span><span class="number">-01</span><span class="number">-01</span> <span class="number">10</span>:<span class="number">06</span>:<span class="number">14</span> to <span class="number">2022</span><span class="number">-01</span><span class="number">-17</span> <span class="number">08</span>:<span class="number">01</span>:<span class="number">17</span></span><br><span class="line"># Attribute    pct   total     min     max     avg     <span class="number">95</span>%  stddev  median</span><br><span class="line"># ============ === ======= ======= ======= ======= ======= ======= =======</span><br><span class="line"># Count         <span class="number">63</span>    <span class="number">8518</span></span><br><span class="line"># Exec time     <span class="number">64</span>  <span class="number">25710</span>s      <span class="number">1</span>s     <span class="number">25</span>s      <span class="number">3</span>s      <span class="number">8</span>s      <span class="number">2</span>s      <span class="number">3</span>s</span><br><span class="line"># Lock time     <span class="number">66</span>      <span class="number">2</span>s   <span class="number">116</span>us    <span class="number">33</span>ms   <span class="number">224</span>us   <span class="number">273</span>us   <span class="number">400</span>us   <span class="number">204</span>us</span><br><span class="line"># Rows sent     <span class="number">22</span>  <span class="number">77.18</span>M       <span class="number">0</span>   <span class="number">9.77</span>k   <span class="number">9.28</span>k   <span class="number">9.33</span>k   <span class="number">1.90</span>k   <span class="number">9.33</span>k</span><br><span class="line"># Rows examine  <span class="number">90</span>   <span class="number">8.50</span>G <span class="number">120.04</span>k   <span class="number">1.49</span>M   <span class="number">1.02</span>M   <span class="number">1.46</span>M <span class="number">269.00</span>k <span class="number">961.27</span>k</span><br><span class="line"># Query size    <span class="number">85</span>   <span class="number">5.91</span>M     <span class="number">723</span>     <span class="number">728</span>  <span class="number">727.56</span>  <span class="number">719.66</span>       <span class="number">0</span>  <span class="number">719.66</span></span><br><span class="line"># String:</span><br><span class="line"># Databases    spider_scheduler</span><br><span class="line"># Hosts        localhost</span><br><span class="line"># Users        dataUseWeb</span><br><span class="line"># Query_time distribution</span><br><span class="line"># 查询执行时间分布的直方图：<span class="number">1</span>微妙、<span class="number">10</span>微妙、<span class="number">100</span>微妙、<span class="number">1</span>毫秒、<span class="number">10</span>毫秒、<span class="number">100</span>毫秒，<span class="number">1</span>秒，<span class="number">10</span>秒以上查询的分布情况</span><br><span class="line">#   <span class="number">1</span>us</span><br><span class="line">#  <span class="number">10</span>us</span><br><span class="line"># <span class="number">100</span>us</span><br><span class="line">#   <span class="number">1</span>ms</span><br><span class="line">#  <span class="number">10</span>ms</span><br><span class="line"># <span class="number">100</span>ms</span><br><span class="line">#    <span class="number">1</span>s  ################################################################</span><br><span class="line">#  <span class="number">10</span>s+  #</span><br><span class="line"># Tables</span><br><span class="line">#    SHOW TABLE STATUS FROM `mysql` LIKE <span class="string">&#x27;user&#x27;</span>\G</span><br><span class="line"># 执行计划信息</span><br><span class="line"># EXPLAIN <span class="comment">/*!50100 PARTITIONS*/</span></span><br><span class="line"># 执行的语句</span><br><span class="line">SELECT * FROM mysql.user;</span><br></pre></td></tr></table></figure><h2 id="三、常用工具使用"><a href="#三、常用工具使用" class="headerlink" title="三、常用工具使用"></a>三、常用工具使用</h2><h3 id="1-所有工具"><a href="#1-所有工具" class="headerlink" title="1.所有工具"></a>1.所有工具</h3><table cellspacing="0" cellpadding="2" border="1">   <tbody>    <tr>     <td><p>工具类别</p></td>     <td><p>工具命令</p></td>     <td><p>工具作用</p></td>     <td><p>备注</p></td>    </tr>    <tr>     <td rowspan="5"><p>开发类</p></td>     <td><p><span lang="EN-US">pt-duplicate-key-checker</span></p></td>     <td><p>列出并删除重复的索引和外键</p></td>     <td></td>    </tr>    <tr>     <td><p><span lang="EN-US">pt-online-schema-change</span></p></td>     <td><p>在线修改表结构</p></td>     <td></td>    </tr>    <tr>     <td><p><span lang="EN-US">pt-query-advisor</span></p></td>     <td><p>分析查询语句，并给出建议，有<span lang="EN-US">bug</span></p></td>     <td><p>已废弃</p></td>    </tr>    <tr>     <td><p><span lang="EN-US">pt-show-grants</span></p></td>     <td><p>规范化和打印权限</p></td>     <td></td>    </tr>    <tr>     <td><p><span lang="EN-US">pt-upgrade</span></p></td>     <td><p>在多个服务器上执行查询，并比较不同</p></td>     <td></td>    </tr>    <tr>     <td rowspan="4"><p>性能类</p></td>     <td><p><span lang="EN-US">pt-index-usage</span></p></td>     <td><p>分析日志中索引使用情况，并出报告</p></td>     <td></td>    </tr>    <tr>     <td><p><span lang="EN-US">pt-pmp</span></p></td>     <td><p>为查询结果跟踪，并汇总跟踪结果</p></td>     <td></td>    </tr>    <tr>     <td><p><span lang="EN-US">pt-visual-explain</span></p></td>     <td><p>格式化执行计划</p></td>     <td></td>    </tr>    <tr>     <td><p><span lang="EN-US">pt-table-usage</span></p></td>     <td><p>分析日志中查询并分析表使用情况</p></td>     <td><p><span lang="EN-US">pt 2.2新增命令</span></p></td>    </tr>    <tr>     <td rowspan="3"><p>配置类</p></td>     <td><p><span lang="EN-US">pt-config-diff</span></p></td>     <td><p>比较配置文件和参数</p></td>     <td></td>    </tr>    <tr>     <td><p><span lang="EN-US">pt-mysql-summary</span></p></td>     <td><p>对<span lang="EN-US">mysql配置和<span lang="EN-US">status进行汇总</span></span></p></td>     <td></td>    </tr>    <tr>     <td><p><span lang="EN-US">pt-variable-advisor</span></p></td>     <td><p>分析参数，并提出建议</p></td>     <td></td>    </tr>    <tr>     <td rowspan="5"><p>监控类</p></td>     <td><p><span lang="EN-US">pt-deadlock-logger</span></p></td>     <td><p>提取和记录<span lang="EN-US">mysql死锁信息</span></p></td>     <td></td>    </tr>    <tr>     <td><p><span lang="EN-US">pt-fk-error-logger</span></p></td>     <td><p>提取和记录外键信息</p></td>     <td></td>    </tr>    <tr>     <td><p><span lang="EN-US">pt-mext</span></p></td>     <td><p>并行查看<span lang="EN-US">status样本信息</span></p></td>     <td></td>    </tr>    <tr>     <td><p><span lang="EN-US">pt-query-digest</span></p></td>     <td><p>分析查询日志，并产生报告</p></td>     <td><p>常用命令</p></td>    </tr>    <tr>     <td><p><span lang="EN-US">pt-trend</span></p></td>     <td><p>按照时间段读取<span lang="EN-US">slow日志信息</span></p></td>     <td><p>已废弃</p></td>    </tr>    <tr>     <td rowspan="6"><p>复制类</p></td>     <td><p><span lang="EN-US">pt-heartbeat</span></p></td>     <td><p>监控<span lang="EN-US">mysql复制延迟</span></p></td>     <td></td>    </tr>    <tr>     <td><p><span lang="EN-US">pt-slave-delay</span></p></td>     <td><p>设定从落后主的时间</p></td>     <td></td>    </tr>    <tr>     <td><p><span lang="EN-US">pt-slave-find</span></p></td>     <td><p>查找和打印所有<span lang="EN-US">mysql复制层级关系</span></p></td>     <td></td>    </tr>    <tr>     <td><p><span lang="EN-US">pt-slave-restart</span></p></td>     <td><p>监控<span lang="EN-US">salve错误，并尝试重启<span lang="EN-US">salve</span></span></p></td>     <td></td>    </tr>    <tr>     <td><p><span lang="EN-US">pt-table-checksum</span></p></td>     <td><p>校验主从复制一致性</p></td>     <td></td>    </tr>    <tr>     <td><p><span lang="EN-US">pt-table-sync</span></p></td>     <td><p>高效同步表数据</p></td>     <td></td>    </tr>    <tr>     <td rowspan="6"><p>系统类</p></td>     <td><p><span lang="EN-US">pt-diskstats</span></p></td>     <td><p>查看系统磁盘状态</p></td>     <td></td>    </tr>    <tr>     <td><p><span lang="EN-US">pt-fifo-split</span></p></td>     <td><p>模拟切割文件并输出</p></td>     <td></td>    </tr>    <tr>     <td><p><span lang="EN-US">pt-summary</span></p></td>     <td><p>收集和显示系统概况</p></td>     <td></td>    </tr>    <tr>     <td><p><span lang="EN-US">pt-stalk</span></p></td>     <td><p>出现问题时，收集诊断数据</p></td>     <td></td>    </tr>    <tr>     <td><p><span lang="EN-US">pt-sift</span></p></td>     <td><p>浏览由<span lang="EN-US">pt-stalk创建的文件</span></p></td>     <td><p><span lang="EN-US">pt 2.2新增命令</span></p></td>    </tr>    <tr>     <td><p><span lang="EN-US">pt-ioprofile</span></p></td>     <td><p>查询进程<span lang="EN-US">IO并打印一个<span lang="EN-US">IO活动表</span></span></p></td>     <td><p><span lang="EN-US">pt 2.2新增命令</span></p></td>    </tr>    <tr>     <td rowspan="5"><p>实用类</p></td>     <td><p><span lang="EN-US">pt-archiver</span></p></td>     <td><p>将表数据归档到另一个表或文件中</p></td>     <td></td>    </tr>    <tr>     <td><p><span lang="EN-US">pt-find</span></p></td>     <td><p>查找表并执行命令</p></td>     <td></td>    </tr>    <tr>     <td><p><span lang="EN-US">pt-kill</span></p></td>     <td><p><span lang="EN-US">Kill掉符合条件的<span lang="EN-US">sql</span></span></p></td>     <td>常用命令</td>    </tr>    <tr>     <td><p><span lang="EN-US">pt-align</span></p></td>     <td><p>对齐其他工具的输出</p></td>     <td><p><span lang="EN-US">pt 2.2新增命令</span></p></td>    </tr>    <tr>     <td><p><span lang="EN-US">pt-fingerprint</span></p></td>     <td><p>将查询转成密文</p></td>     <td><p><span lang="EN-US">pt 2.2新增命令</span></p></td>    </tr>   </tbody>  </table><h3 id="2-pt-duplicate-key-checker"><a href="#2-pt-duplicate-key-checker" class="headerlink" title="2.pt-duplicate-key-checker"></a>2.pt-duplicate-key-checker</h3><p>该工具通过分析表结构来找出冗余和重复的索引。</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">$ pt-duplicate-key-checker --host=<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> --port=<span class="number">3306</span> --user=root --password=pwd --database=test --table=table_name</span><br><span class="line"></span><br><span class="line"># ########################################################################</span><br><span class="line"># test.user</span><br><span class="line"># ########################################################################</span><br><span class="line"></span><br><span class="line"># htype_cat_id is a duplicate <span class="keyword">of</span> cat_id_htype</span><br><span class="line"># Key definitions:</span><br><span class="line">#   KEY `htype_cat_id` (`cat_id`,`htype`) USING BTREE,</span><br><span class="line">#   KEY `cat_id_htype` (`cat_id`,`htype`),</span><br><span class="line"># Column types:</span><br><span class="line">#         `cat_id` int(<span class="number">10</span>) default null comment <span class="string">&#x27;??id,?htype???sell?hid,??chuzu?hid&#x27;</span></span><br><span class="line">#         `htype` tinyint(<span class="number">3</span>) not null comment <span class="string">&#x27;???????? 2:sell  3:chuzu\r\n4:news\r\n5:loupan&#x27;</span></span><br><span class="line"># To remove this duplicate index, execute:</span><br><span class="line">ALTER TABLE `test`.`user` DROP INDEX `htype_cat_id`;</span><br><span class="line"></span><br><span class="line"># ########################################################################</span><br><span class="line"># Summary <span class="keyword">of</span> indexes</span><br><span class="line"># ########################################################################</span><br><span class="line"></span><br><span class="line"># Size Duplicate Indexes   <span class="number">36845855</span></span><br><span class="line"># Total Duplicate Indexes  <span class="number">10</span></span><br><span class="line"># Total Indexes            <span class="number">286</span></span><br></pre></td></tr></table></figure><h3 id="3-pt-index-usage"><a href="#3-pt-index-usage" class="headerlink" title="3.pt-index-usage"></a>3.pt-index-usage</h3><p>读取查询日志，并对每条查询进行EXPLAIN操作，然后打印出关于索引和查询的报告，找出未使用的索引和服务质量差的查询。</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ pt-index-usage mysql-slow.log --host <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> --user=root --password=pwd</span><br><span class="line"></span><br><span class="line">#################################################################</span><br><span class="line"># A software update is available:</span><br><span class="line"></span><br><span class="line">ALTER TABLE `test`.`user` DROP KEY `source`; -- type:non-unique</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> mysql </category>
          
          <category> 慢日志分析 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>单条查询分析</title>
      <link href="/posts/2d04e539.html"/>
      <url>/posts/2d04e539.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="一、SHOW-PROFILE"><a href="#一、SHOW-PROFILE" class="headerlink" title="一、SHOW PROFILE"></a>一、SHOW PROFILE</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt;set profiling = 1;</span><br><span class="line"># 查看所有</span><br><span class="line">mysql&gt; show profiles;</span><br><span class="line">+----------+------------+----------------------------------------------+</span><br><span class="line">| Query_ID | Duration   | Query                                        |</span><br><span class="line">+----------+------------+----------------------------------------------+</span><br><span class="line">|        1 | 0.00060575 | select * from city_base.members_base limit 1 |</span><br><span class="line">+----------+------------+----------------------------------------------+</span><br><span class="line"></span><br><span class="line"># 查看指定QUERY_ID,每个步骤的耗时</span><br><span class="line">mysql&gt; show profile for query 1;</span><br><span class="line">+----------------------+----------+</span><br><span class="line">| Status               | Duration |</span><br><span class="line">+----------------------+----------+</span><br><span class="line">| starting             | 0.000068 |</span><br><span class="line">| checking permissions | 0.000013 |</span><br><span class="line">| Opening tables       | 0.000047 |</span><br><span class="line">| init                 | 0.000086 |</span><br><span class="line">| System lock          | 0.000022 |</span><br><span class="line">| optimizing           | 0.000014 |</span><br><span class="line">| statistics           | 0.000030 |</span><br><span class="line">| preparing            | 0.000025 |</span><br><span class="line">| executing            | 0.000010 |</span><br><span class="line">| Sending data         | 0.000192 |</span><br><span class="line">| end                  | 0.000013 |</span><br><span class="line">| query end            | 0.000017 |</span><br><span class="line">| closing tables       | 0.000020 |</span><br><span class="line">| freeing items        | 0.000027 |</span><br><span class="line">| cleaning up          | 0.000023 |</span><br><span class="line">+----------------------+----------+</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 查询线程运行状态</span><br><span class="line">$ mysql -uroot -p -e &quot;show processlist\G&quot;|grep State|sort |uniq -c |sort -rn</span><br></pre></td></tr></table></figure><h1 id="SHOW-STATUS"><a href="#SHOW-STATUS" class="headerlink" title="SHOW STATUS"></a>SHOW STATUS</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt;FLUSH STATUS;</span><br><span class="line">mysql&gt;select * from mysql.user;</span><br><span class="line"># 查看相关计数的变化 </span><br><span class="line">mysql&gt;SHOW STATUS WHERE Variable_name LIKE &#x27;Handler%&#x27; OR Variable_name like &#x27;Created%&#x27;;</span><br><span class="line">+----------------------------+-------+</span><br><span class="line">| Variable_name              | Value |</span><br><span class="line">+----------------------------+-------+</span><br><span class="line">| Created_tmp_disk_tables    | 0     |</span><br><span class="line">| Created_tmp_files          | 24    |</span><br><span class="line">| Created_tmp_tables         | 5     |</span><br><span class="line">| Handler_commit             | 1     |</span><br><span class="line">| Handler_delete             | 0     |</span><br><span class="line">| Handler_discover           | 0     |</span><br><span class="line">| Handler_external_lock      | 2     |</span><br><span class="line">| Handler_mrr_init           | 0     |</span><br><span class="line">| Handler_prepare            | 0     |</span><br><span class="line">| Handler_read_first         | 1     |</span><br><span class="line">| Handler_read_key           | 1     |</span><br><span class="line">| Handler_read_last          | 0     |</span><br><span class="line">| Handler_read_next          | 0     |</span><br><span class="line">| Handler_read_prev          | 0     |</span><br><span class="line">| Handler_read_rnd           | 0     |</span><br><span class="line">| Handler_read_rnd_next      | 167   |</span><br><span class="line">| Handler_rollback           | 0     |</span><br><span class="line">| Handler_savepoint          | 0     |</span><br><span class="line">| Handler_savepoint_rollback | 0     |</span><br><span class="line">| Handler_update             | 0     |</span><br><span class="line">| Handler_write              | 161   |</span><br><span class="line">+----------------------------+-------+</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 每秒监控查询数、线程连接数、正在执行查询的线程运行数</span><br><span class="line"># 如果连接数没变化，运行数明显上升，则说明新的查询需要旧的查询正在等待的锁，造成的堆积。</span><br><span class="line"># 另外一种如果出现大量的查询请求，则说明可以缓存突然失效。例如redis过期了。</span><br><span class="line">$ mysqladmin -uroot -p ext -i1|awk &#x27;/Queries/&#123;q=$4-qp;qp=$4&#125;/Threads_connected/&#123;tc=$4&#125;/Threads_running/&#123;printf &quot;%5d %5d %5d\n&quot;,q,tc,$4&#125;&#x27;</span><br></pre></td></tr></table></figure><h1 id="统计每秒查询数量"><a href="#统计每秒查询数量" class="headerlink" title="统计每秒查询数量"></a>统计每秒查询数量</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ awk &#x27;/^# Time:/&#123;print $3,$4,c;c=0&#125;/^# User/&#123;c++&#125;&#x27; mysql-slow.log |head -n 10</span><br></pre></td></tr></table></figure><h1 id="通过tcpdump监控mysql端口"><a href="#通过tcpdump监控mysql端口" class="headerlink" title="通过tcpdump监控mysql端口"></a>通过tcpdump监控mysql端口</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ tcpdump -S -nn -tttt port 3306 and host 192.168.1.213</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> mysql </category>
          
          <category> 慢日志分析 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>js和APP webviews交互</title>
      <link href="/posts/47cab41d.html"/>
      <url>/posts/47cab41d.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="js和APP-weiviews交互"><a href="#js和APP-weiviews交互" class="headerlink" title="js和APP weiviews交互"></a>js和APP weiviews交互</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">shareFunction</span>(<span class="params">data</span>)&#123;</span><br><span class="line">    <span class="comment">// 判断是否手机端 验证码弹窗样式区分</span></span><br><span class="line">    <span class="keyword">var</span> ua = navigator.<span class="property">userAgent</span>;</span><br><span class="line">    <span class="keyword">var</span> isAndroid = ua.<span class="title function_">indexOf</span>(<span class="string">&#x27;Android&#x27;</span>);</span><br><span class="line">    <span class="keyword">var</span> isIos = ua.<span class="title function_">indexOf</span>(<span class="string">&#x27;iOS&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> callbackRes;</span><br><span class="line">    <span class="keyword">if</span> (isAndroid) &#123;</span><br><span class="line">        <span class="comment">// 安卓,接收返回数据</span></span><br><span class="line">        callbackRes = <span class="variable language_">window</span>.<span class="property">android</span>.<span class="title function_">shareFunction</span>(share);<span class="comment">//android</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (isIos) &#123;</span><br><span class="line">        <span class="comment">// IOS,接收返回数据</span></span><br><span class="line">        callbackRes = data;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> callbackRes;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h1 id="js无法获取IOS返回json信息"><a href="#js无法获取IOS返回json信息" class="headerlink" title="js无法获取IOS返回json信息"></a>js无法获取IOS返回json信息</h1><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iOS需要针对json字符串替换空格和<span class="string">\n</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>日志文件</title>
      <link href="/posts/5335b023.html"/>
      <url>/posts/5335b023.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os.path</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> house.settings <span class="keyword">as</span> setting</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">UtilLog</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        now = datetime.datetime.now()</span><br><span class="line">        rq = now.strftime(<span class="string">&#x27;%Y%m%d&#x27;</span>)</span><br><span class="line">        <span class="variable language_">self</span>.logFile = setting.ROOT_PATH + <span class="string">&#x27;/logs/%s/%s&#x27;</span> + rq + <span class="string">&#x27;.log&#x27;</span></span><br><span class="line">        <span class="comment"># 获取执行调用的文件和行号，例如main.py 30行调用，fileName为main.py 行号为30</span></span><br><span class="line">        fileName = os.path.basename(sys._getframe(<span class="number">2</span>).f_code.co_filename)</span><br><span class="line">        lineNo = sys._getframe(<span class="number">2</span>).f_lineno</span><br><span class="line">        <span class="variable language_">self</span>.formatter = <span class="string">&quot;%(asctime)s - %(filename)s[line:%(lineno)d] - UtilLog %(levelname)s: %(message)s \n&quot;</span></span><br><span class="line">        <span class="variable language_">self</span>.formatterDict = &#123;</span><br><span class="line">            <span class="string">&#x27;asctime&#x27;</span>: now.strftime(<span class="string">&#x27;%Y-%m-%d %H:%M:%S&#x27;</span>),</span><br><span class="line">            <span class="string">&#x27;filename&#x27;</span>: fileName,</span><br><span class="line">            <span class="string">&#x27;lineno&#x27;</span>: lineNo,</span><br><span class="line">            <span class="string">&#x27;levelname&#x27;</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;message&#x27;</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">infoLog</span>(<span class="params">self, content, fileName=<span class="string">&#x27;info&#x27;</span></span>):</span><br><span class="line">        levelName = <span class="string">&#x27;info&#x27;</span></span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>.writeLog(levelName=levelName, fileName=fileName, content=content)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">warningLog</span>(<span class="params">self, content, fileName=<span class="string">&#x27;&#x27;</span></span>):</span><br><span class="line">        levelName = <span class="string">&#x27;warning&#x27;</span></span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>.writeLog(levelName=levelName, fileName=fileName, content=content)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">debugLog</span>(<span class="params">self, content, fileName=<span class="string">&#x27;&#x27;</span></span>):</span><br><span class="line">        levelName = <span class="string">&#x27;debug&#x27;</span></span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>.writeLog(levelName=levelName, fileName=fileName, content=content)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">errorLog</span>(<span class="params">self, content, fileName=<span class="string">&#x27;&#x27;</span></span>):</span><br><span class="line">        levelName = <span class="string">&#x27;error&#x27;</span></span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">self</span>.writeLog(levelName=levelName, fileName=fileName, content=content)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">writeLog</span>(<span class="params">self, levelName, fileName, content</span>):</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        写入log到文件</span></span><br><span class="line"><span class="string">        @param levelName: 日志等级名称</span></span><br><span class="line"><span class="string">        @param fileName: 文件名</span></span><br><span class="line"><span class="string">        @param content: 写入内容</span></span><br><span class="line"><span class="string">        @return: </span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line">        logFile = <span class="variable language_">self</span>.logFile % (levelName, fileName)</span><br><span class="line">        <span class="variable language_">self</span>.formatterDict[<span class="string">&#x27;levelname&#x27;</span>] = levelName</span><br><span class="line">        <span class="variable language_">self</span>.formatterDict[<span class="string">&#x27;message&#x27;</span>] = content</span><br><span class="line"></span><br><span class="line">        logPath = os.path.dirname(logFile)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(logPath):</span><br><span class="line">            os.mkdir(logPath, <span class="number">777</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">with</span> <span class="built_in">open</span>(logFile, <span class="string">&quot;a+&quot;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">                res = f.write(<span class="variable language_">self</span>.formatter % <span class="variable language_">self</span>.formatterDict)</span><br><span class="line">            <span class="keyword">if</span> res:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>麦田APP加密算法</title>
      <link href="/posts/96f42c67.html"/>
      <url>/posts/96f42c67.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="comment">#获取Digest的response的值,key转化为最小字母，然后自然排序，最后k=v+k=v拼接加密</span></span><br><span class="line"><span class="comment"># datas：字典，k/v数据</span></span><br><span class="line"><span class="comment"># _thistime：当前时间戳</span></span><br><span class="line"><span class="comment"># 示例：common.urlDigestRes(self.postData, _time)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">urlDigestRes</span>(<span class="params">datas,_thistime,key=<span class="string">&#x27;8ba449f29acf&#x27;</span></span>):</span><br><span class="line">    <span class="comment"># print(datas)</span></span><br><span class="line">    _data = &#123;&#125;</span><br><span class="line">    _getUrlParam = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> k, v <span class="keyword">in</span> datas.items():</span><br><span class="line">        _data[k.lower()] = v</span><br><span class="line">        _getUrlParam = _getUrlParam + <span class="built_in">str</span>(k) + <span class="string">&quot;=&quot;</span> + <span class="built_in">str</span>(v) + <span class="string">&quot;&amp;&quot;</span></span><br><span class="line">        <span class="comment"># print(k.lower() + &#x27;=&#x27; + str(v))</span></span><br><span class="line">        <span class="comment"># _postData[k]=v</span></span><br><span class="line">    <span class="comment"># print((_data.keys()), _data.values())</span></span><br><span class="line">    e = <span class="built_in">sorted</span>(_data.items(), key=<span class="keyword">lambda</span> d: d[<span class="number">0</span>], reverse=<span class="literal">False</span>)</span><br><span class="line">    <span class="comment"># print(e)</span></span><br><span class="line">    _signStr = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> k, v <span class="keyword">in</span> e:</span><br><span class="line">        _signStr = _signStr + <span class="built_in">str</span>(k) + <span class="string">&quot;=&quot;</span> + <span class="built_in">str</span>(v)</span><br><span class="line">    _signStr = _signStr + key + <span class="built_in">str</span>(_thistime)</span><br><span class="line">    _myMd5 = myMD5(_signStr)</span><br><span class="line">    _getUrlParam = _getUrlParam[<span class="number">0</span>:<span class="built_in">len</span>(_getUrlParam)-<span class="number">1</span>]</span><br><span class="line">    <span class="comment"># print(&quot;responseStr:&quot;+_signStr)</span></span><br><span class="line">    <span class="comment"># print(&quot;_getUrlParam:&quot;+_getUrlParam)</span></span><br><span class="line">    <span class="keyword">return</span> _myMd5,_getUrlParam</span><br><span class="line"></span><br><span class="line">headers = &#123;<span class="string">&quot;User-agent&quot;</span>:<span class="string">&quot;okhttp/3.8.0&quot;</span>,<span class="string">&quot;Content-Type&quot;</span>:<span class="string">&quot;application/json&quot;</span>,<span class="string">&quot;Accept&quot;</span>:<span class="string">&quot;*/*&quot;</span>,<span class="string">&quot;token&quot;</span>:<span class="string">&quot;0befe3865bde6ba7bf0a83e90fb2ae12&quot;</span>,<span class="string">&quot;Authorization&quot;</span>:<span class="string">&quot;Digest username=aos384e9f87,cnonce=%s,response=%s&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">digest = common.urlDigestRes(urlQueryDist, _time)</span><br><span class="line">headers[<span class="string">&#x27;Authorization&#x27;</span>] = headers[<span class="string">&#x27;Authorization&#x27;</span>] % ( <span class="built_in">str</span>(<span class="built_in">round</span>(time.time()*<span class="number">1000</span>)), digest[<span class="number">0</span>] )</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>gblic</title>
      <link href="/posts/5d56b180.html"/>
      <url>/posts/5d56b180.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="一、查看当前版本"><a href="#一、查看当前版本" class="headerlink" title="一、查看当前版本"></a>一、查看当前版本</h1><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ldd <span class="comment">--version</span></span><br></pre></td></tr></table></figure><h1 id="二、下载"><a href="#二、下载" class="headerlink" title="二、下载"></a>二、下载</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">wget http://ftp.gnu.org/gnu/glibc/glibc-2.14.tar.gz</span></span><br></pre></td></tr></table></figure><h1 id="三、编译安装"><a href="#三、编译安装" class="headerlink" title="三、编译安装"></a>三、编译安装</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">tar -zxvf glibc-2.14.tar.gz</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> glibc-2.14 &amp;&amp; <span class="built_in">mkdir</span> build &amp;&amp; <span class="built_in">cd</span> build</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">../configure --prefix=/usr/local/glibc-2.14</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">make -j4</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">make install</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">修改软链接</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">ln</span> -s /usr/local/glibc-2.14/lib/libc-2.14.so /lib64/libc.so.6</span></span><br></pre></td></tr></table></figure><h1 id="四、注意事项"><a href="#四、注意事项" class="headerlink" title="四、注意事项"></a>四、注意事项</h1><h2 id="1-升级后导致中文乱码"><a href="#1-升级后导致中文乱码" class="headerlink" title="1.升级后导致中文乱码"></a>1.升级后导致中文乱码</h2><p>升级完成后查看带中文文件的目录 ls 会发现中文字全部变成 ???<br>执行 locale命令:</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">locale: Cannot <span class="built_in">set</span> LC_CTYPE <span class="keyword">to</span><span class="built_in"> default </span>locale: <span class="literal">No</span> such file <span class="keyword">or</span> directory</span><br><span class="line">locale: Cannot <span class="built_in">set</span> LC_MESSAGES <span class="keyword">to</span><span class="built_in"> default </span>locale: <span class="literal">No</span> such file <span class="keyword">or</span> directory</span><br><span class="line">locale: Cannot <span class="built_in">set</span> LC_COLLATE <span class="keyword">to</span><span class="built_in"> default </span>locale: <span class="literal">No</span> such file <span class="keyword">or</span> directory</span><br></pre></td></tr></table></figure><p>在glibc编译目录下的build目录，执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">make localedata/install-locales</span></span><br></pre></td></tr></table></figure><p>再次执行locale就恢复正常了  </p><p>如果已经删除编译目录，则参考<a href="https://www.cnblogs.com/jasondayee/p/13403245.html">CentOS 升级libc后导致中文乱码</a><br>(未测试效)<br>但是如果你已经删除了编译glibc的build目录或者不知道build的目录在哪里<br>按照以下步骤:<br>查看 libc.so.6 软连接指向</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ls -la /lib64/libc.so.6</span><br><span class="line">/lib64/libc.so.6 -&gt; libc-2.14.so</span><br></pre></td></tr></table></figure><p>查看 locale-archive 归档文件目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">strings libc-2.14.so | grep locale-archive</span><br><span class="line">/usr/local/glibc-2.14/lib/locale/locale-archive</span><br></pre></td></tr></table></figure><p>这个目录是在升级libc的时候build的目录<br>添加软链接</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -la /usr/local/glibc-2.14/lib/locale/locale-archive</span><br></pre></td></tr></table></figure><p>发现文件并不存在<br>那么</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s /usr/lib/locale/locale-archive /usr/local/glibc-2.14/lib/locale/locale-archive</span><br></pre></td></tr></table></figure><p>重新执行 locale 已经正常了 ！</p><h2 id="2-升级后导致时区错误"><a href="#2-升级后导致时区错误" class="headerlink" title="2.升级后导致时区错误"></a>2.升级后导致时区错误</h2><h3 id="2-1-系统时区修改"><a href="#2-1-系统时区修改" class="headerlink" title="2.1 系统时区修改"></a>2.1 系统时区修改</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">ln</span> -s /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span></span><br></pre></td></tr></table></figure><p>如果还不行，则在&#x2F;etc&#x2F;profile或者~&#x2F;.bashrc添加</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> <span class="attribute">TZ</span>=<span class="string">&#x27;Asia/Shanghai&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="2-2-crontab以及crontab的脚本时区错误"><a href="#2-2-crontab以及crontab的脚本时区错误" class="headerlink" title="2.2 crontab以及crontab的脚本时区错误"></a>2.2 crontab以及crontab的脚本时区错误</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">ln</span> -s /usr/local/glibc-2.14/share/zoneinfo/Asia/Shanghai /usr/local/glibc-2.14/etc/localtime</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">重启服务器</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">init 6</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>css资料整理</title>
      <link href="/posts/d24431e5.html"/>
      <url>/posts/d24431e5.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h2 id="Safari-transform-rotate-不兼容问题及解决"><a href="#Safari-transform-rotate-不兼容问题及解决" class="headerlink" title="Safari transform rotate 不兼容问题及解决"></a>Safari transform rotate 不兼容问题及解决</h2><p><a href="https://lunashu.org/safari-transform-rotate-bu-jian-rong-wen-ti-ji-jie-jue/">Safari transform rotate 不兼容问题及解决</a></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">safari 上 一个元素使用了 <span class="attribute">transform</span>:<span class="built_in">rotateY</span>(<span class="number">19deg</span>);显示问题处理</span><br><span class="line"></span><br><span class="line">处理方案：</span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">perspective</span>(<span class="number">400px</span>) // 为啥是<span class="number">400</span>？ 因为animate.css中flipInX用到的就是<span class="number">400</span>；我这里是引用了 animate.css 所以 根据它的设定我也设定了<span class="number">400</span></span><br></pre></td></tr></table></figure><h2 id="css-logo-3D旋转"><a href="#css-logo-3D旋转" class="headerlink" title="css logo 3D旋转"></a>css logo 3D旋转</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.logo_item</span> &#123;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">2px</span> solid <span class="built_in">hsla</span>(<span class="number">0</span>,<span class="number">0%</span>,<span class="number">100%</span>,.<span class="number">8</span>);</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">2px</span> <span class="number">4px</span> <span class="number">0</span> <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,.<span class="number">2</span>);</span><br><span class="line">    -webkit-<span class="attribute">box-sizing</span>: initial;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">perspective</span>(<span class="number">400px</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.logo_icon</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">&quot;../../www/images/VR/VR.png&quot;</span>) no-repeat;</span><br><span class="line">    <span class="attribute">background-size</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">transform-style</span>: preserve-<span class="number">3</span>d; <span class="comment">/* 3D 转换 */</span></span><br><span class="line">    -webkit-<span class="attribute">transform-style</span>: preserve-<span class="number">3</span>d; <span class="comment">/* 3D 转换 */</span></span><br><span class="line">    <span class="attribute">animation</span>: logo_icon <span class="number">4s</span> linear infinite;</span><br><span class="line">    -webkit-<span class="attribute">animation</span>: logo_icon <span class="number">4s</span> linear infinite;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@-webkit-keyframes</span> logo_icon &#123;</span><br><span class="line">    <span class="selector-tag">from</span> &#123;</span><br><span class="line">        -webkit-<span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-tag">to</span> &#123;</span><br><span class="line">        -webkit-<span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">360deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@keyframes</span> logo_icon &#123;</span><br><span class="line">    <span class="selector-tag">from</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-tag">to</span> &#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">360deg</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="css3-文字多行显示，超出部分…"><a href="#css3-文字多行显示，超出部分…" class="headerlink" title="css3 文字多行显示，超出部分…"></a>css3 文字多行显示，超出部分…</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">overflow</span>: hidden;</span><br><span class="line"># 显示省略符号 ... 来代表被修剪的文本。</span><br><span class="line"><span class="attribute">text-overflow</span>: ellipsis;</span><br><span class="line"><span class="attribute">display</span>: -webkit-box;</span><br><span class="line"># 它只有在 <span class="attribute">display</span> 属性设置成 -webkit-box 或者 -webkit-inline-box 并且 -webkit-<span class="attribute">box-orient</span> (en-US) 属性设置成 vertical时才有效果</span><br><span class="line"># 指定显示两行</span><br><span class="line">-webkit-<span class="selector-tag">line</span>-clamp: <span class="number">2</span>;</span><br><span class="line"># 属性规定框的子元素应该被水平或垂直排列。</span><br><span class="line">-webkit-<span class="attribute">box-orient</span>: vertical;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> css </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>反向代理</title>
      <link href="/posts/0.html"/>
      <url>/posts/0.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><hr><h1 id="一、反向代理"><a href="#一、反向代理" class="headerlink" title="一、反向代理"></a>一、反向代理</h1><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">server&#123;</span><br><span class="line">  <span class="keyword">listen</span> <span class="number">80</span>;</span><br><span class="line">  server_name  hexo.cat;</span><br><span class="line">  <span class="keyword">index</span>  index.php index.html index.htm;</span><br><span class="line"></span><br><span class="line">  location / &#123;</span><br><span class="line">    proxy_pass  http:<span class="regexp">//</span><span class="number">127.0</span>.<span class="number">0</span>.<span class="number">1</span>:<span class="number">4000</span>; <span class="comment"># 转发规则</span></span><br><span class="line">    proxy_set_header Host <span class="variable">$proxy_host</span>; <span class="comment"># 修改转发请求头</span></span><br><span class="line">    <span class="comment"># 表示发出请求的远程主机的 IP 地址，remote_addr代表客户端的IP，但它的值不是由客户端提供的，而是服务端根据客户端的ip指定的，当你的浏览器访问某个网站时，</span></span><br><span class="line">    <span class="comment"># 假设中间没有任何代理，那么网站的web服务器（Nginx，Apache等）就会把remote_addr设为你的机器IP，如果你用了某个代理，那么你的浏览器会先访问这个代理，</span></span><br><span class="line">    <span class="comment"># 然后再由这个代理转发到网站，这样web服务器就会把remote_addr设为这台代理机器的IP</span></span><br><span class="line">    proxy_set_header X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">    <span class="comment"># 简称XFF头，它代表客户端，也就是HTTP的请求端真实的IP，只有在通过了HTTP 代理或者负载均衡服务器时才会添加该项，</span></span><br><span class="line">    <span class="comment"># 正如上面所述,当你使用了代理时,web服务器就不知道你的真实IP了,为了避免这个情况,代理服务器通常会增加一个叫做x_forwarded_for的头信息,</span></span><br><span class="line">    <span class="comment"># 把连接它的客户端IP(即你的上网机器IP)加到这个头信息里,这样就能保证网站的web服务器能获取到真实IP</span></span><br><span class="line">    proxy_set_header X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PIL Image强制句柄</title>
      <link href="/posts/df70f5f5.html"/>
      <url>/posts/df70f5f5.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="PIL-Image强制句柄"><a href="#PIL-Image强制句柄" class="headerlink" title="PIL Image强制句柄"></a>PIL Image强制句柄</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image, ImageSequence, ImageDraw, ImageFont</span><br><span class="line">fileOrign = Image.<span class="built_in">open</span>(orgFullFileName)</span><br><span class="line"><span class="comment"># 默认情况下自动释放</span></span><br><span class="line">fileOrign.close()</span><br><span class="line"><span class="comment"># 由于自动释放需要时间，使用del的方式手动强制释放</span></span><br><span class="line"><span class="keyword">del</span> fileOrign</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>No module named处理</title>
      <link href="/posts/c927929f.html"/>
      <url>/posts/c927929f.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="No-module-named处理"><a href="#No-module-named处理" class="headerlink" title="No module named处理"></a>No module named处理</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># No module named处理</span></span><br><span class="line"><span class="comment"># 命令行执行: /etc/profile 中新增</span></span><br><span class="line">$ export PYTHONPATH=$PYTHONPATH:/path/项目路径</span><br><span class="line"><span class="comment"># cron中处理 添加</span></span><br><span class="line">PYTHONPATH=$PYTHONPATH:/path/项目路径</span><br><span class="line"><span class="comment"># 或者文件中添加PYTHONPATH</span></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pip下载指定版本package</title>
      <link href="/posts/74fae29b.html"/>
      <url>/posts/74fae29b.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="pip下载指定版本package"><a href="#pip下载指定版本package" class="headerlink" title="pip下载指定版本package"></a>pip下载指定版本package</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># pip下载指定版本package</span></span><br><span class="line">$ pip install package==version</span><br><span class="line"><span class="comment"># pip使用清华大学源下载</span></span><br><span class="line">$ pip install paramiko -i https://pypi.tuna.tsinghua.edu.cn/simple/ </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>动态加载模块、类、方法</title>
      <link href="/posts/96f42c67.html"/>
      <url>/posts/96f42c67.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="动态加载模块、类、方法"><a href="#动态加载模块、类、方法" class="headerlink" title="动态加载模块、类、方法"></a>动态加载模块、类、方法</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 判断模块是否存在</span></span><br><span class="line">hasModule = importlib.util.find_spec(<span class="string">&#x27;house.function.dataParse.%s&#x27;</span> % className)</span><br><span class="line">    <span class="keyword">if</span> hasModule <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"><span class="comment"># 绝对导入</span></span><br><span class="line">动态加载模块</span><br><span class="line">moduleItem = importlib.import_module(<span class="string">&#x27;house.function.dataParse.%s&#x27;</span> % className)</span><br><span class="line">taskNo = SSIDInfo[<span class="string">&#x27;taskNo&#x27;</span>]</span><br><span class="line"><span class="comment"># 对象中取出需要的对象</span></span><br><span class="line"><span class="comment"># 获取class</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">hasattr</span>(moduleItem, className):</span><br><span class="line">    <span class="comment">#动态加载类</span></span><br><span class="line">    classItem = <span class="built_in">getattr</span>(moduleItem, className)</span><br><span class="line">    <span class="keyword">if</span> classItem:</span><br><span class="line">        <span class="comment"># 动态加载方法</span></span><br><span class="line">        callFunction = <span class="built_in">getattr</span>(classItem, taskNo, <span class="literal">None</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">callable</span>(callFunction):</span><br><span class="line">            callRes = callFunction(selfItem, SSIDInfo, taskInfo, data)</span><br><span class="line">            <span class="built_in">print</span>(callRes)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>re的match、search、findall、finditer区别</title>
      <link href="/posts/83764ae2.html"/>
      <url>/posts/83764ae2.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="一、re的match、search、findall、finditer区别"><a href="#一、re的match、search、findall、finditer区别" class="headerlink" title="一、re的match、search、findall、finditer区别"></a>一、re的match、search、findall、finditer区别</h1><h2 id="1、match"><a href="#1、match" class="headerlink" title="1、match"></a>1、match</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">re.match(<span class="keyword">pattern</span>, string[, flags])  </span><br><span class="line">从首字母开始开始匹配，string如果包含<span class="keyword">pattern</span>子串，则匹配成功返回<span class="keyword">Match</span>对象，失败则返回<span class="keyword">None</span>，若要完全匹配，<span class="keyword">pattern</span>要以$结尾。</span><br></pre></td></tr></table></figure><h2 id="2、search"><a href="#2、search" class="headerlink" title="2、search"></a>2、search</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">re<span class="selector-class">.search</span>(<span class="selector-tag">pattern</span>, string<span class="selector-attr">[, flags]</span>)  </span><br><span class="line">若string中包含<span class="selector-tag">pattern</span>子串，则返回Match对象，否则返回<span class="attribute">None</span></span><br><span class="line">注意：如果string中存在多个<span class="selector-tag">pattern</span>子串，只返回第一个。</span><br></pre></td></tr></table></figure><h2 id="3、findall"><a href="#3、findall" class="headerlink" title="3、findall"></a>3、findall</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">re<span class="selector-class">.findall</span>(<span class="selector-tag">pattern</span>, string<span class="selector-attr">[, flags]</span>)  </span><br><span class="line">返回string中所有与<span class="selector-tag">pattern</span>相匹配的全部字串，返回形式为数组。</span><br></pre></td></tr></table></figure><h2 id="4、finditer"><a href="#4、finditer" class="headerlink" title="4、finditer"></a>4、finditer</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">re<span class="selector-class">.finditer</span>(<span class="selector-tag">pattern</span>, string<span class="selector-attr">[, flags]</span>)  </span><br><span class="line">返回string中所有与<span class="selector-tag">pattern</span>相匹配的全部字串，返回形式为Match对象的迭代器。</span><br></pre></td></tr></table></figure><h2 id="group-、groups-与group-index-的区别"><a href="#group-、groups-与group-index-的区别" class="headerlink" title="group()、groups()与group(index)的区别"></a>group()、groups()与group(index)的区别</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">group</span><span class="params">()</span></span>: 返回字符串</span><br><span class="line"><span class="function"><span class="title">groups</span><span class="params">()</span></span>: 返回字符串的元组</span><br><span class="line"><span class="function"><span class="title">group</span><span class="params">(index)</span></span>: 返回字符串元组中的index</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>多维字典赋值</title>
      <link href="/posts/bddbb5b.html"/>
      <url>/posts/bddbb5b.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="多维字典赋值"><a href="#多维字典赋值" class="headerlink" title="多维字典赋值"></a>多维字典赋值</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 多维字典赋值</span></span><br><span class="line">data_list = &#123;&#125;</span><br><span class="line">company = <span class="string">&#x27;公司&#x27;</span></span><br><span class="line">describe_str = <span class="string">&#x27;描述&#x27;</span></span><br><span class="line">data_list.setdefault(<span class="string">&#x27;company_info&#x27;</span>, &#123;&#125;).setdefault(company,&#123;&#125;).setdefault(<span class="string">&#x27;describe_info&#x27;</span>, &#123;&#125;).update(&#123;<span class="string">&#x27;info&#x27;</span>:describe_str&#125;)</span><br><span class="line">data_list.setdefault(<span class="string">&#x27;company_info&#x27;</span>, &#123;&#125;).setdefault(company, &#123;&#125;).setdefault(<span class="string">&#x27;user_list&#x27;</span>, &#123;&#125;).update(</span><br><span class="line">    &#123;<span class="string">&#x27;info&#x27;</span>: describe_str&#125;)</span><br><span class="line"><span class="built_in">print</span>(data_list)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ublacklist屏蔽列表</title>
      <link href="/posts/5faa6670.html"/>
      <url>/posts/5faa6670.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="订阅源地址"><a href="#订阅源地址" class="headerlink" title="订阅源地址"></a>订阅源地址</h1><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">https:<span class="regexp">//gi</span>tee.com<span class="regexp">/thiscat/u</span>blacklist<span class="regexp">/raw/m</span>aster/ublacklist</span><br><span class="line">https:<span class="regexp">//</span>raw.githubusercontent.com<span class="regexp">/cobaltdisco/</span>Google-Chinese-Results-Blocklist<span class="regexp">/master/u</span>Blacklist_subscription.txt</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 其他 </category>
          
          <category> 浏览器扩展 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>curl</title>
      <link href="/posts/3e01b4d.html"/>
      <url>/posts/3e01b4d.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="一、查看当前版本"><a href="#一、查看当前版本" class="headerlink" title="一、查看当前版本"></a>一、查看当前版本</h1><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> <span class="built_in">curl</span> <span class="literal">--version</span></span><br></pre></td></tr></table></figure><h1 id="二、升级curl"><a href="#二、升级curl" class="headerlink" title="二、升级curl"></a>二、升级curl</h1><p>使用 city-fan 的更新源来更新。</p><h2 id="2-1-备份ca-bundle"><a href="#2-1-备份ca-bundle" class="headerlink" title="2.1 备份ca-bundle"></a>2.1 备份ca-bundle</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cp <span class="regexp">/etc/</span>pki<span class="regexp">/tls/</span>certs<span class="regexp">/ca-bundle.crt /</span>etc<span class="regexp">/pki/</span>tls<span class="regexp">/certs/</span>ca-bundle.crt.bak</span><br></pre></td></tr></table></figure><h2 id="2-2-新增repo"><a href="#2-2-新增repo" class="headerlink" title="2.2 新增repo"></a>2.2 新增repo</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">vim /etc/yum.repos.d/city-fan-for-curl.repo</span></span><br></pre></td></tr></table></figure><p>写入内容，如果是7版本，rhel6改为rhel7</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name</span>=City Fan Repo</span><br><span class="line"><span class="attr">baseurl</span>=http://www.city-fan.org/ftp/contrib/yum-repo/rhel6/x<span class="number">86_64</span>/</span><br><span class="line"><span class="attr">enabled</span>=<span class="number">0</span></span><br><span class="line"><span class="attr">gpgcheck</span>=<span class="number">0</span></span><br></pre></td></tr></table></figure><h2 id="2-3-更新curl"><a href="#2-3-更新curl" class="headerlink" title="2.3 更新curl"></a>2.3 更新curl</h2><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ yum <span class="keyword">update</span> curl <span class="comment">--enablerepo=CityFanforCurl -y</span></span><br></pre></td></tr></table></figure><h1 id="三、注意事项"><a href="#三、注意事项" class="headerlink" title="三、注意事项"></a>三、注意事项</h1><h2 id="3-1-当出现以下问题时，可以尝试升级curl和nss来处理"><a href="#3-1-当出现以下问题时，可以尝试升级curl和nss来处理" class="headerlink" title="3.1 当出现以下问题时，可以尝试升级curl和nss来处理"></a>3.1 当出现以下问题时，可以尝试升级curl和nss来处理</h2><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">* NSS <span class="keyword">error</span> <span class="number">-12286</span></span><br><span class="line">* Closing connection <span class="comment">#0</span></span><br><span class="line">* SSL connect <span class="keyword">error</span></span><br></pre></td></tr></table></figure><h1 id="四、编译安装curl"><a href="#四、编译安装curl" class="headerlink" title="四、编译安装curl"></a>四、编译安装curl</h1><h2 id="1-下载"><a href="#1-下载" class="headerlink" title="1.下载"></a>1.下载</h2><p><a href="https://curl.se/download/archeology/curl-7.29.0.tar.gz">curl.se&#x2F;download&#x2F;</a></p><h2 id="2-安装"><a href="#2-安装" class="headerlink" title="2.安装"></a>2.安装</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">tar zxvf curl-7.29.0</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建要安装的目录</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">mkdir</span> /usr/local/webserver/curl-7.29.0/</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装到创建的指定目录</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">.configure --prefix=/usr/local/webserver/curl-7.29.0/</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">make &amp;&amp; make install</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>hbase安装文档</title>
      <link href="/posts/31ba96e0.html"/>
      <url>/posts/31ba96e0.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><p>一、下载安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">install.sh</span></span><br><span class="line">version=2.4.4</span><br><span class="line"></span><br><span class="line">wget https://mirrors.tuna.tsinghua.edu.cn/apache/hbase/$&#123;version&#125;/hbase-$&#123;version&#125;-src.tar.gz &amp;&amp;</span><br><span class="line">tar zxf hbase-$&#123;version&#125;-src.tar.gz &amp;&amp; mv hbase-$&#123;version&#125;-src /usr/local/webserver/hbase</span><br></pre></td></tr></table></figure><p>二、环境变量</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">保存为/etc/profile.d/hbase_profile.sh</span></span><br><span class="line">export HBASE_HOME=/usr/local/webserver/hbase</span><br><span class="line">export PATH=.:$HBASE_HOME/bin:$PATH</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> hbase </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安装文档 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hadoop安装文档</title>
      <link href="/posts/55ef8388.html"/>
      <url>/posts/55ef8388.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><p>注意: 没有特别说明，默认所有服务器都需要一样的操作<br>java最低版本要求为1.8  </p><p>hadoop相关命令必须在HDFS_NAMENODE_USER定义的用户下操作。此文档定义为hadoop，所以需要在hadoop用户下操作</p><h1 id="一、-下载安装"><a href="#一、-下载安装" class="headerlink" title="一、 下载安装"></a>一、 下载安装</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">下载并解压到指定目录</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">wget https://mirrors.tuna.tsinghua.edu.cn/apache/hadoop/common/hadoop-3.1.3/hadoop-3.1.3-src.tar.gz &amp;&amp; \</span></span><br><span class="line"><span class="language-bash">tar zxf hadoop-3.1.3-src.tar.gz &amp;&amp; <span class="built_in">mv</span> hadoop-3.1.3-src /usr/local/webserver/hadoop</span></span><br></pre></td></tr></table></figure><h1 id="二、环境变量"><a href="#二、环境变量" class="headerlink" title="二、环境变量"></a>二、环境变量</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">保存为/etc/profile.d/hadoop_profile.sh</span></span><br><span class="line">export HADOOP_HOME=/usr/local/webserver/hadoop</span><br><span class="line">export PATH=.:$HADOOP_HOME/bin:$PATH</span><br><span class="line">export JAVA_LIBRARY_PATH=$HADOOP_HOME/lib/native</span><br><span class="line">export HADOOP_LOG_DIR=/data/hadoop/logs</span><br><span class="line">export HDFS_NAMENODE_USER=hadoop</span><br><span class="line">export HDFS_DATANODE_USER=hadoop</span><br><span class="line">export HDFS_SECONDARYNAMENODE_USER=hadoop</span><br><span class="line">export YARN_RESOURCEMANAGER_USER=hadoop</span><br><span class="line">export YARN_NODEMANAGER_USER=hadoop</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="built_in">export</span> HADOOP_ROOT_LOGGER=DEBUG,console</span></span><br></pre></td></tr></table></figure><h1 id="三、目录结构"><a href="#三、目录结构" class="headerlink" title="三、目录结构"></a>三、目录结构</h1><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">（<span class="number">1</span>）<span class="keyword">bin </span>目录：存放对 Hadoop 相关服务（hdfs，yarn，mapred）进行操作的脚本</span><br><span class="line">（<span class="number">2</span>）etc 目录：Hadoop 的配置文件目录，存放 Hadoop 的配置文件</span><br><span class="line">（<span class="number">3</span>）lib 目录：存放 Hadoop 的本地库（对数据进行压缩解压缩功能）</span><br><span class="line">（<span class="number">4</span>）<span class="keyword">sbin </span>目录：存放启动或停止 Hadoop 相关服务的脚本</span><br><span class="line">（<span class="number">5</span>）<span class="keyword">share </span>目录：存放 Hadoop 的依赖 <span class="keyword">jar </span>包、文档、和官方案例</span><br></pre></td></tr></table></figure><h1 id="四、构架概述"><a href="#四、构架概述" class="headerlink" title="四、构架概述"></a>四、构架概述</h1><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">HDFS</span><span class="params">(Hadoop Distributed File System)</span></span>架构概述</span><br><span class="line"><span class="function"><span class="title">NameNode</span><span class="params">(NN)</span></span>：存储文件的元数据，如文件名，文件目录结构，文件属性（生成时间，副本数，文件权限），以及每个文件的块列表和所在的DataNode等。</span><br><span class="line"><span class="function"><span class="title">DataNode</span><span class="params">(DN)</span></span>：在本地文件系统存储的文件数据，以及块数据的校验和。</span><br><span class="line">Secondary <span class="built_in">NameNode</span>(<span class="number">2</span>NN)：用来监控HDFS状态的辅助后台程序，每隔一段时间获取HDFS元数据的快照。</span><br></pre></td></tr></table></figure><h1 id="五、前置准备"><a href="#五、前置准备" class="headerlink" title="五、前置准备"></a>五、前置准备</h1><h2 id="1-新增hadoop用户，并给予sudo权限"><a href="#1-新增hadoop用户，并给予sudo权限" class="headerlink" title="1. 新增hadoop用户，并给予sudo权限"></a>1. 新增hadoop用户，并给予sudo权限</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建用户</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">useradd hadoop</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">设置密码</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">passwd hadoop</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">添加<span class="built_in">sudo</span>权限</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">文件添加修改权限</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">chmod</span> +w /etc/sudoers</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">添加hadoop ALL=(ALL) ALL</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">vim /etc/sudoers</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">文件删除修改权限</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">chmod</span> -w /etc/sudoers</span></span><br></pre></td></tr></table></figure><h2 id="2-配置host-添加对应服务器的host"><a href="#2-配置host-添加对应服务器的host" class="headerlink" title="2. 配置host, 添加对应服务器的host"></a>2. 配置host, 添加对应服务器的host</h2><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># <span class="number">212</span>为主服务器</span><br><span class="line"># hadoop web的文件资源管理使用的是linux的hostname，也需要配置到host中</span><br><span class="line"><span class="number">192.168.1.212</span> hadoop212</span><br><span class="line"><span class="number">192.168.1.213</span> hadoop213</span><br><span class="line"><span class="number">192.168.1.211</span> hadoop211</span><br></pre></td></tr></table></figure><h2 id="3-配置ssh免密码登录"><a href="#3-配置ssh免密码登录" class="headerlink" title="3. 配置ssh免密码登录"></a>3. 配置ssh免密码登录</h2><p>以下所有操作都必须用hadoop用户操作</p><h3 id="生成公钥和私钥"><a href="#生成公钥和私钥" class="headerlink" title="生成公钥和私钥"></a>生成公钥和私钥</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">su hadoop</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ssh-keygen -t rsa</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">将公钥复制到免登录的服务器上(每一台都要相同操作)</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ssh-copy-id hadoop212</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ssh-copy-id hadoop213</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ssh-copy-id hadoop211</span></span><br></pre></td></tr></table></figure><h2 id="4-创建hadoop数据的存储目录"><a href="#4-创建hadoop数据的存储目录" class="headerlink" title="4. 创建hadoop数据的存储目录"></a>4. 创建hadoop数据的存储目录</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">hadoop存储目录，在core-site.xml中配置</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">mkdir</span> /data/hadoop/</span></span><br></pre></td></tr></table></figure><h1 id="五、集群配置"><a href="#五、集群配置" class="headerlink" title="五、集群配置"></a>五、集群配置</h1><h2 id="1-集群部署规划"><a href="#1-集群部署规划" class="headerlink" title="1. 集群部署规划"></a>1. 集群部署规划</h2><p>注意：<br>NameNode 和 SecondaryNameNode 不要安装在同一台服务器 。<br>（它们两个都需要耗内存，分开减少集群的压力）<br>ResourceManager 也很消耗内存，不要和 NameNode、SecondaryNameNode 配置在同一台机器上。</p><table>    <tr>        <td></td>        <td>hadoop212</td>        <td>hadoop213</td>        <td>hadoop211</td>    </tr>    <tr>        <td>HDFS</td>        <td>NameNode<br>DataNode</td>        <td>DataNode</td>        <td>SecondaryNameNode<br>DataNode</td>    </tr>    <tr>        <td>YARN</td>        <td>NodeManager</td>        <td>ResourceManager<br>NodeManager</td>        <td>NodeManager</td>    </tr></table>  <h2 id="2-配置文件说明"><a href="#2-配置文件说明" class="headerlink" title="2. 配置文件说明"></a>2. 配置文件说明</h2><p>(1) 默认配置文件<br> ![默认配置文件]](.&#x2F;img&#x2F;默认配置文件.png “默认配置文件”)<br>(2) 自定义配置文件<br>$HADOOP_HOME&#x2F;etc&#x2F;hadoop路径下四个配置文件<br>core-site.xml 、hdfs-site.xml 、yarn-site.xml 、mapred-site.xml<br>用户可以根据项目需求重新进行修改配置。</p><h2 id="配置集群"><a href="#配置集群" class="headerlink" title="配置集群"></a>配置集群</h2><h3 id="1-core-site-xml-核心配置文件"><a href="#1-core-site-xml-核心配置文件" class="headerlink" title="1. core-site.xml 核心配置文件"></a>1. core-site.xml 核心配置文件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;configuration&gt;</span><br><span class="line">  &lt;!-- 指定 NameNode 的地址 9860为hadoop内部通讯端口--&gt; </span><br><span class="line">  &lt;property&gt; </span><br><span class="line">      &lt;name&gt;fs.defaultFS&lt;/name&gt; </span><br><span class="line">      &lt;value&gt;hdfs://hadoop212:9860&lt;/value&gt; </span><br><span class="line">  &lt;/property&gt; </span><br><span class="line">  &lt;!-- 指定 hadoop 数据的存储目录 --&gt; </span><br><span class="line">    &lt;property&gt; </span><br><span class="line">        &lt;name&gt;hadoop.tmp.dir&lt;/name&gt; </span><br><span class="line">        &lt;value&gt;/data/hadoop/data&lt;/value&gt; </span><br><span class="line">  &lt;/property&gt; </span><br><span class="line">    &lt;!-- 指定zookeeper集群主机地址 --&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">    &lt;name&gt;ha.zookeeper.quorum&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;hadoop212:2181,hadoop213:2181,hadoop211:2181&lt;/value&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line"> </span><br><span class="line">  &lt;!-- 配置 HDFS 网页登录使用的静态用户为 hadoop--&gt; </span><br><span class="line">  &lt;property&gt; </span><br><span class="line">      &lt;name&gt;hadoop.http.staticuser.user&lt;/name&gt; </span><br><span class="line">      &lt;value&gt;hadoop&lt;/value&gt; </span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure><h3 id="2-hdfs-site-xml-数据存储"><a href="#2-hdfs-site-xml-数据存储" class="headerlink" title="2. hdfs-site.xml 数据存储"></a>2. hdfs-site.xml 数据存储</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">&lt;configuration&gt;</span><br><span class="line">&lt;!-- NameNode web 端访问地址--&gt; </span><br><span class="line">  &lt;property&gt; </span><br><span class="line">        &lt;name&gt;dfs.namenode.http-address&lt;/name&gt; </span><br><span class="line">        &lt;value&gt;hadoop212:9870&lt;/value&gt; </span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">  &lt;property&gt;</span><br><span class="line">    &lt;name&gt;dfs.namenode.http-bind-host&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;hadoop212&lt;/value&gt;</span><br><span class="line">    &lt;description&gt;</span><br><span class="line">      The actual address the HTTP server will bind to. If this optional address</span><br><span class="line">      is set, it overrides only the hostname portion of dfs.namenode.http-address.</span><br><span class="line">      It can also be specified per name node or name service for HA/Federation.</span><br><span class="line">      This is useful for making the name node HTTP server listen on all</span><br><span class="line">      interfaces by setting it to 0.0.0.0.</span><br><span class="line">    &lt;/description&gt;</span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">  &lt;!-- SecondaryNameNode web 端访问地址--&gt; </span><br><span class="line">    &lt;property&gt; </span><br><span class="line">        &lt;name&gt;dfs.namenode.secondary.http-address&lt;/name&gt; </span><br><span class="line">        &lt;value&gt;hadoop211:9868&lt;/value&gt; </span><br><span class="line">    &lt;/property&gt; </span><br><span class="line">    &lt;!-- 副本数 --&gt; </span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;dfs.replication&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;2&lt;/value&gt;</span><br><span class="line">        &lt;description&gt;默认值3.创建文件时，可以指定实际的复制次数。 如果在创建时间中未指定复制，则使用默认值&lt;/description&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;dfs.ha.automatic-failover.enabled&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;true&lt;/value&gt;</span><br><span class="line">        &lt;description&gt;是否启用了自动故障转移&lt;/description&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;dfs.datanode.du.reserved&lt;/name&gt;</span><br><span class="line">        &lt;!-- reserved space in bytes 服务器预留10G不可为hadoop使用 --&gt;</span><br><span class="line">        &lt;value&gt;10737418240&lt;/value&gt;</span><br><span class="line">        &lt;description&gt;保留空间以每卷的字节为单位。 始终为非DFS使用免费留下这么多的空间。Reserved space in bytes per volume. Always leave this much space free for non dfs use.</span><br><span class="line">        &lt;/description&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;dfs.disk.balancer.enabled&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;true&lt;/value&gt;</span><br><span class="line">        &lt;description&gt;是否开启磁盘平衡，默认开启</span><br><span class="line">        &lt;/description&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;dfs.disk.balancer.plan.threshold.percent&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;10&lt;/value&gt;</span><br><span class="line">        &lt;description&gt;计划中卷数据密度的百分比阈值。 如果在节点中的阈值超出阈值的卷数据密度的绝对值，则意味着对应于磁盘的卷应该在计划中进行平衡。 默认值为10。</span><br><span class="line">        &lt;/description&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure><h3 id="3-yarn-xml-资源调度"><a href="#3-yarn-xml-资源调度" class="headerlink" title="3.yarn.xml 资源调度"></a>3.yarn.xml 资源调度</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">&lt;configuration&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- Site specific YARN configuration properties --&gt;</span><br><span class="line">&lt;!-- 指定 MR 走 shuffle --&gt; </span><br><span class="line">    &lt;property&gt; </span><br><span class="line">        &lt;name&gt;yarn.nodemanager.aux-services&lt;/name&gt; </span><br><span class="line">        &lt;value&gt;mapreduce_shuffle&lt;/value&gt; </span><br><span class="line">    &lt;/property&gt; </span><br><span class="line"> </span><br><span class="line">    &lt;!-- 指定 ResourceManager 的地址--&gt; </span><br><span class="line">    &lt;property&gt; </span><br><span class="line">        &lt;name&gt;yarn.resourcemanager.hostname&lt;/name&gt; </span><br><span class="line">        &lt;value&gt;hadoop213&lt;/value&gt; </span><br><span class="line">    &lt;/property&gt; </span><br><span class="line">    &lt;!-- 开启日志聚集功能 --&gt; </span><br><span class="line">    &lt;property&gt; </span><br><span class="line">        &lt;name&gt;yarn.log-aggregation-enable&lt;/name&gt; </span><br><span class="line">        &lt;value&gt;true&lt;/value&gt; </span><br><span class="line">    &lt;/property&gt; </span><br><span class="line">    &lt;!-- 设置日志聚集服务器地址 --&gt; </span><br><span class="line">    &lt;property&gt;   </span><br><span class="line">        &lt;name&gt;yarn.log.server.url&lt;/name&gt;   </span><br><span class="line">        &lt;value&gt;http://hadoop212:19888/jobhistory/logs&lt;/value&gt; </span><br><span class="line">    &lt;/property&gt; </span><br><span class="line">    &lt;!-- 设置日志保留时间为 7 天 --&gt; </span><br><span class="line">    &lt;property&gt; </span><br><span class="line">        &lt;name&gt;yarn.log-aggregation.retain-seconds&lt;/name&gt; </span><br><span class="line">        &lt;value&gt;604800&lt;/value&gt; </span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;yarn.nodemanager.resource.memory-mb&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;2048&lt;/value&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line"></span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;yarn.scheduler.minimum-allocation-mb&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;1048&lt;/value&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line"></span><br><span class="line">    &lt;property&gt;</span><br><span class="line">        &lt;name&gt;yarn.nodemanager.vmem-pmem-ratio&lt;/name&gt;</span><br><span class="line">        &lt;value&gt;2.1&lt;/value&gt;</span><br><span class="line">    &lt;/property&gt;</span><br><span class="line">    &lt;!-- 环境变量的继承 --&gt; </span><br><span class="line">    &lt;property&gt; </span><br><span class="line">        &lt;name&gt;yarn.nodemanager.env-whitelist&lt;/name&gt; </span><br><span class="line">        </span><br><span class="line">      &lt;value&gt;JAVA_HOME,HADOOP_COMMON_HOME,HADOOP_HDFS_HOME,HADOOP_CONF_DIR,CLASSPATH_PREPEND_DISTCACHE,HADOOP_YARN_HOME,HADOOP_MAPRED_HOME&lt;/value&gt; </span><br><span class="line">    &lt;/property&gt; </span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure><h3 id="4-mapred-site-xml-计算"><a href="#4-mapred-site-xml-计算" class="headerlink" title="4. mapred-site.xml 计算"></a>4. mapred-site.xml 计算</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;configuration&gt;</span><br><span class="line">  &lt;!-- 指定 MapReduce 程序运行在 Yarn 上 --&gt; </span><br><span class="line">    &lt;property&gt; </span><br><span class="line">        &lt;name&gt;mapreduce.framework.name&lt;/name&gt; </span><br><span class="line">        &lt;value&gt;yarn&lt;/value&gt; </span><br><span class="line">    &lt;/property&gt; </span><br><span class="line">    &lt;!-- 历史服务器端地址(内部通讯端口) --&gt; </span><br><span class="line">  &lt;property&gt; </span><br><span class="line">      &lt;name&gt;mapreduce.jobhistory.address&lt;/name&gt; </span><br><span class="line">      &lt;value&gt;hadoop212:10020&lt;/value&gt; </span><br><span class="line">  &lt;/property&gt; </span><br><span class="line">  </span><br><span class="line">  &lt;!-- 历史服务器 web 端地址,查看集群的历史服务 --&gt; </span><br><span class="line">  &lt;property&gt; </span><br><span class="line">      &lt;name&gt;mapreduce.jobhistory.webapp.address&lt;/name&gt; </span><br><span class="line">      &lt;value&gt;hadoop212:19888&lt;/value&gt; </span><br><span class="line">  &lt;/property&gt;</span><br><span class="line">  &lt;property&gt; </span><br><span class="line">      &lt;name&gt;mapreduce.reduce.shuffle.connect.timeout&lt;/name&gt; </span><br><span class="line">      &lt;value&gt;&lt;/value&gt; </span><br><span class="line">  &lt;/property&gt; </span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure><h3 id="5-hadoop-env-sh-环境变量配置文件"><a href="#5-hadoop-env-sh-环境变量配置文件" class="headerlink" title="5. hadoop-env.sh 环境变量配置文件"></a>5. hadoop-env.sh 环境变量配置文件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 需要添加以下两个变量，即使在服务器上已经配置了，也需要在文件中配置</span><br><span class="line">JAVA_HOME=/usr/local/webserver/java8</span><br><span class="line">export HADOOP_LOG_DIR=/data/hadoop/logs</span><br></pre></td></tr></table></figure><h3 id="6-workers-集群服务器列表"><a href="#6-workers-集群服务器列表" class="headerlink" title="6. workers 集群服务器列表"></a>6. workers 集群服务器列表</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 将hosts中配置的服务器写入</span><br><span class="line">hadoop212</span><br><span class="line">hadoop213</span><br><span class="line">hadoop211</span><br></pre></td></tr></table></figure><h3 id="iptables开放端口"><a href="#iptables开放端口" class="headerlink" title="iptables开放端口"></a>iptables开放端口</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"># NameNode内部通讯端口</span><br><span class="line">-A INPUT -p tcp -m state --state NEW -m tcp --dport 9860 -j ACCEPT</span><br><span class="line"># NameNode web访问端口</span><br><span class="line">-A INPUT -p tcp -m state --state NEW -m tcp --dport 9870 -j ACCEPT</span><br><span class="line"># namenode.rpc-address 端口</span><br><span class="line">-A INPUT -p tcp -m state --state NEW -m tcp --dport 8020 -j ACCEPT</span><br><span class="line"># namenode.secondary.http-address 端口</span><br><span class="line">-A INPUT -p tcp -m state --state NEW -m tcp --dport 9868 -j ACCEPT</span><br><span class="line"># namenode.secondary.https-address 端口</span><br><span class="line">-A INPUT -p tcp -m state --state NEW -m tcp --dport 9869 -j ACCEPT</span><br><span class="line"># datanode.ipc.address 端口</span><br><span class="line">-A INPUT -p tcp -m state --state NEW -m tcp --dport 9867 -j ACCEPT</span><br><span class="line"># datanode.http.address 端口</span><br><span class="line">-A INPUT -p tcp -m state --state NEW -m tcp --dport 9864 -j ACCEPT</span><br><span class="line"></span><br><span class="line"># ResourceManager端口</span><br><span class="line">-A INPUT -p tcp -m state --state NEW -m tcp --dport 8088 -j ACCEPT</span><br><span class="line"># MapReduce JobHistory Server端口</span><br><span class="line">-A INPUT -p tcp -m state --state NEW -m tcp --dport 19888 -j ACCEPT</span><br><span class="line"># jobhistory内部通讯端口</span><br><span class="line">-A INPUT -p tcp -m state --state NEW -m tcp --dport 10020 -j ACCEPT</span><br></pre></td></tr></table></figure><h1 id="七、启动集群-没特殊说明，所有命令都在hadoop根目录下执行"><a href="#七、启动集群-没特殊说明，所有命令都在hadoop根目录下执行" class="headerlink" title="七、启动集群(没特殊说明，所有命令都在hadoop根目录下执行)"></a>七、启动集群(没特殊说明，所有命令都在hadoop根目录下执行)</h1><h2 id="1-初始化（注意：只有第一次的时候才需要）"><a href="#1-初始化（注意：只有第一次的时候才需要）" class="headerlink" title="1. 初始化（注意：只有第一次的时候才需要）"></a>1. 初始化（注意：只有第一次的时候才需要）</h2><p>如果集群是第一次启动，需要在 hadoop212 节点格式化 NameNode<br>执行完成后会在存储目录下生成data和logs文件夹<br>注意：格式化 NameNode，会产生新的集群 id，导致 NameNode 和 DataNode 的集群 id 不一致，集群找不到已往数据。如果集群在运行过程中报错，需要重新格式化 NameNode 的话，一定要先停止 namenode 和 datanode 进程，并且要删除所有机器的 data 和 logs 目录，然后再进行格式化  </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">必须hadoop用户下</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">su hadoop</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hdfs namenode -format</span></span><br></pre></td></tr></table></figure><h2 id="2-格式化zkfs-以及启动对应守护进程"><a href="#2-格式化zkfs-以及启动对应守护进程" class="headerlink" title="2. 格式化zkfs, 以及启动对应守护进程"></a>2. 格式化zkfs, 以及启动对应守护进程</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">格式化zookeeper</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">bin/hdfs zkfc -formatZK</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">启动hdfs的zookeeper守护进程</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">bin/hdfs --daemon start zkfc</span></span><br></pre></td></tr></table></figure><h2 id="3-启动journalnode"><a href="#3-启动journalnode" class="headerlink" title="3. 启动journalnode"></a>3. 启动journalnode</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">启动journalnode,作用是存放EditLog的</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">bin/hdfs --daemon start journalnode</span></span><br></pre></td></tr></table></figure><h2 id="4-启动HDFS-212中执行"><a href="#4-启动HDFS-212中执行" class="headerlink" title="4. 启动HDFS(212中执行)"></a>4. 启动HDFS(212中执行)</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sbin/start-dfs.sh</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">执行成功后，通过jps查看是否和集群规划的配置相同</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">jps</span></span><br></pre></td></tr></table></figure><h2 id="5-在配置了ResourceManager的节点-hadoop213-启动YARN"><a href="#5-在配置了ResourceManager的节点-hadoop213-启动YARN" class="headerlink" title="5. 在配置了ResourceManager的节点(hadoop213)启动YARN"></a>5. 在配置了ResourceManager的节点(hadoop213)启动YARN</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sbin/start-yarn.sh</span></span><br></pre></td></tr></table></figure><h2 id="6-Web端查看-HDFS-的-NameNode"><a href="#6-Web端查看-HDFS-的-NameNode" class="headerlink" title="6. Web端查看 HDFS 的 NameNode"></a>6. Web端查看 HDFS 的 NameNode</h2><p>(1) 浏览器输入：hadoop212:9870<br>(2) 点击Utilities下的Browse the file system，可以查看存储的文件</p><h2 id="7-web端查看YARN的ResourceManager"><a href="#7-web端查看YARN的ResourceManager" class="headerlink" title="7. web端查看YARN的ResourceManager"></a>7. web端查看YARN的ResourceManager</h2><p>(1) 浏览器输入：hadoop213:8088<br>(2) 查看运行的Job信息</p><h2 id="8-启动历史服务器-212中执行"><a href="#8-启动历史服务器-212中执行" class="headerlink" title="8. 启动历史服务器(212中执行)"></a>8. 启动历史服务器(212中执行)</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">mapred --daemon start historyserver</span></span><br></pre></td></tr></table></figure><h2 id="9-web端历史服务器"><a href="#9-web端历史服务器" class="headerlink" title="9. web端历史服务器"></a>9. web端历史服务器</h2><p>(1) 浏览器输入：hadoop212:19888</p><h1 id="八、集群基本命令"><a href="#八、集群基本命令" class="headerlink" title="八、集群基本命令"></a>八、集群基本命令</h1><h3 id="1-基本命令"><a href="#1-基本命令" class="headerlink" title="1. 基本命令"></a>1. 基本命令</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">必须hadoop用户下</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">su hadoop</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">运行启动命令基本顺序(hadoop 根目录下)</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">hadoop212执行</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">以下两句为第一次运行时需要使用，格式化数据，后面无需再执行</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hdfs namenode -format</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hdfs zkfc -formatZK</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">启动hadoop</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hdfs --daemon start zkfc</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hdfs --daemon start journalnode</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sbin/start-dfs.sh</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">hadoop213执行</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sbin/start-yarn.sh</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">hadoop212执行</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">mapred --daemon start historyserver</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">运行关闭命令顺序</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">hadoop212</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hdfs --daemon stop journalnode</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sbin/stop-dfs.sh</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">hadoop213</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sbin/stop-yarn.sh</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">hadoop212</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">mapred --daemon stop historyserver</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建文件夹</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hdfs dfs -<span class="built_in">mkdir</span> /input</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">上传文件(test.txt为本地文件)</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hdfs dfs -put test.txt /input</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">下载文件</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hdfs dfs -get /jdk-8u212-linux-x64.tar.gz ./</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">执行wordcount程序, 执行后可在YARN的ResourceManager查看</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hadoop jar share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.3.jar wordcount /input /output</span></span><br></pre></td></tr></table></figure><h3 id="2-查看上传文件的位置-每个服务器都会有相同的一份副本"><a href="#2-查看上传文件的位置-每个服务器都会有相同的一份副本" class="headerlink" title="2. 查看上传文件的位置(每个服务器都会有相同的一份副本)"></a>2. 查看上传文件的位置(每个服务器都会有相同的一份副本)</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">ls</span> /data/hadoop/data/dfs/data/current/BP-1149522343-192.168.1.212-1625036516918/current/finalized/subdir0/subdir0</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">blk_1073741825类似的命名的文件就是上传的文件</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cat</span> blk_1073758313</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">拼接</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cat</span> blk_1073758313&gt;&gt;tmp.tar.gz</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">追加一个文件到压缩包中</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cat</span> blk_1073758314&gt;&gt;tmp.tar.gz</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">解压文件查看</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">tar -zxvf tmp.tar.gz</span></span><br></pre></td></tr></table></figure><h1 id="九、python对应的hdfs接口文档"><a href="#九、python对应的hdfs接口文档" class="headerlink" title="九、python对应的hdfs接口文档"></a>九、python对应的hdfs接口文档</h1><p><a href="https://hdfscli.readthedocs.io/en/latest/" title="pypi hdfsCli">python hdfsCli接口文档</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">本地也需要配置三台服务器的host</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装hdfs,相关操作可以看Client</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">pip install hdfs</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> hdfs <span class="keyword">import</span> *</span><br><span class="line">client = Client(<span class="string">&quot;http://192.168.1.212:9870&quot;</span>, root=<span class="string">&#x27;/input&#x27;</span>,timeout=<span class="number">100</span>)</span><br><span class="line"><span class="comment"># 创建文件夹</span></span><br><span class="line"><span class="comment"># client._mkdirs(&#x27;/img&#x27;)</span></span><br><span class="line"><span class="comment"># 上传文件夹</span></span><br><span class="line"><span class="comment"># client.upload(&#x27;/img&#x27;, &#x27;./img&#x27;)</span></span><br><span class="line"><span class="comment"># 删除文件夹 recursive - 是否递归删除</span></span><br><span class="line"><span class="comment"># client.delete(&#x27;/img&#x27;, recursive=True)</span></span><br><span class="line"><span class="comment"># 下载文件</span></span><br><span class="line"><span class="comment"># client.download(&#x27;/img&#x27;, &#x27;/local/img&#x27;)</span></span><br><span class="line"><span class="comment"># 获取文件目录</span></span><br><span class="line">imgList = client.<span class="built_in">list</span>(<span class="string">&#x27;/&#x27;</span>)</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    file = <span class="string">&#x27;/img/img/logo.png&#x27;</span></span><br><span class="line">    <span class="comment"># 获取文件状态，文件存在则下载，不存在则抛出异常</span></span><br><span class="line">    content = client.status(file, strict=<span class="literal">True</span>)</span><br><span class="line">    <span class="keyword">if</span> content:</span><br><span class="line">        client.download(file, <span class="string">&#x27;./&#x27;</span>)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(e)</span><br></pre></td></tr></table></figure><h1 id="十、HDFS源码分析-具体看源码分析链接"><a href="#十、HDFS源码分析-具体看源码分析链接" class="headerlink" title="十、HDFS源码分析(具体看源码分析链接)"></a>十、HDFS源码分析(具体看源码分析链接)</h1><p><a href="http://www.imbajin.com/2020-01-17-HDFS3%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%E4%B9%8BClient%E8%AF%BB%E6%B5%81%E7%A8%8B%E4%B8%80/">HDFS源码分析链接</a></p><p>以下概述内容从”源码分析链接中复制来的”</p><h2 id="1-写入流程概述"><a href="#1-写入流程概述" class="headerlink" title="1. 写入流程概述"></a>1. 写入流程概述</h2><p>![写流程图]](.&#x2F;img&#x2F;hdfs写入流程.png “hdfs写入流程”)</p><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">客户端核心在<span class="keyword">create</span>() 和<span class="keyword">write</span>() 两个API调用中, 大体步骤如下:</span><br><span class="line"></span><br><span class="line"><span class="number">1</span>. 新写一个文件, 先调用<span class="keyword">create</span>() 方法底层去给NN发一个RPC请求, NN收到请求后会在FS的目录树对应路径添加一个空的新文件, 然后记在editLog, 创建完成后返回FSDataOutputStream , 它调用DFSOutputStream 写数据</span><br><span class="line"><span class="number">2</span>. 有了输出流对象之后, 核心就是调用<span class="keyword">write</span>()方法, 在①中只是单纯创建空文件, 这里再开始申请新的数据块, 以及传输管道, 成功后会返回这个块的所有DN节点信息.</span><br><span class="line"><span class="number">3</span>. 通过传输管道把要写入的数据切分为一个个packet(约<span class="number">64</span>K)大小发送, 然后在多个DN节点之间依次顺序传输, 然后逆序返回ACK确认写成功, 最后客户端接收到正常ACK, 表示当前packet发送成功</span><br><span class="line">    (<span class="number">1</span>)如果DN接收完文件所有packet, 则会向NN汇报当前<span class="keyword">block</span>信息</span><br><span class="line">    (<span class="number">2</span>)如果写满了一个<span class="keyword">block</span>, client会接着再申请一个新的<span class="keyword">block</span>, 直到所有数据传输完成</span><br><span class="line"><span class="number">4</span>. 最后关闭流的时候, 送complete()-rpc 给NN提交文件的所有<span class="keyword">block</span>, 确认DN已都完成块汇报后, NN确认当前文件写完成.</span><br><span class="line"></span><br><span class="line">注:</span><br><span class="line"><span class="keyword">block</span>根据namenode的规则(规则为机架感知)分布式的存储在datanode中</span><br><span class="line"></span><br><span class="line">由于遇到过误导自己，导致理解上存在误区，所以写下例子</span><br><span class="line">例：配置副本为<span class="number">2</span>的情况下，block1副本<span class="number">1</span>在hadoop212中，副本<span class="number">2</span>可能在hadoop213也可能在hadoop211中</span><br><span class="line">同理：block2副本<span class="number">1</span>在hadoop212中，副本<span class="number">2</span>可能在hadoop211也可能在hadoop213中。虽然按照机架策略，<span class="number">213</span>最合适为副本<span class="number">2</span>，由于io等情况，可能选择副本分布到<span class="number">211</span></span><br></pre></td></tr></table></figure><h2 id="2-读取流程概述"><a href="#2-读取流程概述" class="headerlink" title="2. 读取流程概述"></a>2. 读取流程概述</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1.</span> 客户端向namenode发RPC请求, 读取文件对应blocks的DN信息</span><br><span class="line"><span class="bullet">2.</span> namenode检查文件是否存在，如果存在则获取文件的元信息（按顺序返回BlockId以及对应所在的datanode列表）</span><br><span class="line"><span class="bullet">3.</span> 客户端收到block对应的DN信息后选取一个网络访问最近的DN, 依次读取每个数据块(客户端这里有校验逻辑, 如果发现异常会汇报坏块)</span><br><span class="line"><span class="bullet">4.</span> 客户端与DN建立socket连接，通过流以packet为单位传输对应的数据块, 客户端收到数据写入本地磁盘</span><br><span class="line"><span class="bullet">5.</span> 依次传输剩下的数据块，直到整个文件读取完成, 最后关闭输入流</span><br></pre></td></tr></table></figure><h2 id="3-机架感知"><a href="#3-机架感知" class="headerlink" title="3. 机架感知"></a>3. 机架感知</h2><p><a href="https://www.cnblogs.com/wxisme/p/6270860.html">深刻理解HDFS工作机制链接</a></p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">机架感知：HDFS采用一种称为机架感知(rack-aware)的策略来改进数据的可靠性、可用性和网络带宽的利用率。大型HDFS实例一般运行在跨越多个机架的计算机组成的集群上，不同机架上的两台机器之间的通讯需要经过交换机。在大多数情况下，同一个机架内的两台机器间的带宽会比不同机架的两台机器间的带宽大。通过一个机架感知的过程，Namenode可以确定每个Datanode所属的机架<span class="built_in">id</span>。一个简单但没有优化的策略就是将副本存放在不同的机架上。这样可以有效防止当整个机架失效时数据的丢失，并且允许读数据的时候充分利用多个机架的带宽。这种策略设置可以将副本均匀分布在集群中，有利于当组件失效情况下的负载均衡。但是，因为这种策略的一个写操作需要传输数据块到多个机架，这增加了写的代价。在大多数情况下，副本系数是<span class="number">3</span>，HDFS的存放策略是将一个副本存放在本地机架的节点上，一个副本放在同一机架的另一个节点上，最后一个副本放在不同机架的节点上。这种策略减少了机架间的数据传输，这就提高了写操作的效率。机架的错误远远比节点的错误少，所以这个策略不会影响到数据的可靠性和可用性。于此同时，因为数据块只放在两个（不是三个）不同的机架上，所以此策略减少了读取数据时需要的网络传输总带宽。在这种策略下，副本并不是均匀分布在不同的机架上。三分之一的副本在一个节点上，三分之二的副本在一个机架上，其他副本均匀分布在剩下的机架中，这一策略在不损害数据可靠性和读取性能的情况下改进了写的性能。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> hadoop </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安装文档 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>zookeeper安装文档</title>
      <link href="/posts/74e42f70.html"/>
      <url>/posts/74e42f70.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="一、下载安装"><a href="#一、下载安装" class="headerlink" title="一、下载安装"></a>一、下载安装</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">install.sh</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">3.5.5以后版本需要bin的包</span></span><br><span class="line">wget https://mirrors.tuna.tsinghua.edu.cn/apache/zookeeper/zookeeper-3.7.0/apache-zookeeper-3.7.0-bin.tar.gz &amp;&amp;</span><br><span class="line">tar zxvf apache-zookeeper-3.7.0.tar.gz &amp;&amp; mv apache-zookeeper-3.7.0 /usr/local/webserver/zookeeper</span><br><span class="line"></span><br><span class="line">mkdir -p /data/zookeeper</span><br></pre></td></tr></table></figure><h1 id="二、环境变量"><a href="#二、环境变量" class="headerlink" title="二、环境变量"></a>二、环境变量</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">保存为/etc/profile.d/zookeeper_profile.sh</span></span><br><span class="line">export ZOOKEEPER_HOME=/usr/local/webserver/zookeeper</span><br><span class="line">export PATH=.:$ZOOKEEPER_HOME/bin:$PATH</span><br></pre></td></tr></table></figure><h1 id="三、配置conf-zoo-conf"><a href="#三、配置conf-zoo-conf" class="headerlink" title="三、配置conf&#x2F;zoo.conf"></a>三、配置conf&#x2F;zoo.conf</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"># The number of milliseconds of each tick</span><br><span class="line"># 单次心跳间隔</span><br><span class="line">tickTime=2000</span><br><span class="line"># The number of ticks that the initial</span><br><span class="line"># synchronization phase can take</span><br><span class="line"># 超过十次心跳时间，则认为客户端连接端口</span><br><span class="line">initLimit=10</span><br><span class="line"># The number of ticks that can pass between</span><br><span class="line"># sending a request and getting an acknowledgement</span><br><span class="line"># leader和follow请求应答，不能超过5个心跳时间</span><br><span class="line">syncLimit=5</span><br><span class="line"># the directory where the snapshot is stored.</span><br><span class="line"># do not use /tmp for storage, /tmp here is just</span><br><span class="line"># example sakes.</span><br><span class="line"># 数据存储路径</span><br><span class="line">dataDir=/data/zookeeper/data</span><br><span class="line">dataLogDir=/data/zookeeper/logs</span><br><span class="line"># the port at which the clients will connect</span><br><span class="line"># 客户端端口</span><br><span class="line">clientPort=2181</span><br><span class="line"># the maximum number of client connections.</span><br><span class="line"># increase this if you need to handle more clients</span><br><span class="line"># 最大客户端连接数</span><br><span class="line">maxClientCnxns=60</span><br><span class="line">#</span><br><span class="line"># Be sure to read the maintenance section of the</span><br><span class="line"># administrator guide before turning on autopurge.</span><br><span class="line">#</span><br><span class="line"># http://zookeeper.apache.org/doc/current/zookeeperAdmin.html#sc_maintenance</span><br><span class="line">#</span><br><span class="line"># The number of snapshots to retain in dataDir</span><br><span class="line">#autopurge.snapRetainCount=3</span><br><span class="line"># Purge task interval in hours</span><br><span class="line"># Set to &quot;0&quot; to disable auto purge feature</span><br><span class="line">#autopurge.purgeInterval=1</span><br><span class="line"></span><br><span class="line">## Metrics Providers</span><br><span class="line">#</span><br><span class="line"># https://prometheus.io Metrics Exporter</span><br><span class="line">#metricsProvider.className=org.apache.zookeeper.metrics.prometheus.PrometheusMetricsProvider</span><br><span class="line">#metricsProvider.httpPort=7000</span><br><span class="line">#metricsProvider.exportJvmInfo=true</span><br><span class="line"># 分布式主机配置。2888为leader端口，3888为follow端口</span><br><span class="line"># 配置的/data/zookeeper/myid值与序号一致</span><br><span class="line">server.1=ip1:2888:3888</span><br><span class="line">server.2=ip2:2888:3888</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="四、开放iptables端口"><a href="#四、开放iptables端口" class="headerlink" title="四、开放iptables端口"></a>四、开放iptables端口</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-A INPUT -p tcp -m state --state NEW -m tcp --dport 2181 -j ACCEPT</span><br><span class="line">-A INPUT -p tcp -m state --state NEW -m tcp --dport 2888 -j ACCEPT</span><br><span class="line">-A INPUT -p tcp -m state --state NEW -m tcp --dport 3888 -j ACCEPT</span><br></pre></td></tr></table></figure><h1 id="五、-为每台服务器写入不同id号"><a href="#五、-为每台服务器写入不同id号" class="headerlink" title="五、 为每台服务器写入不同id号"></a>五、 为每台服务器写入不同id号</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;1&quot; &gt; dataDir=/data/zookeeper/data/myid</span><br></pre></td></tr></table></figure><h1 id="六、选择规则"><a href="#六、选择规则" class="headerlink" title="六、选择规则"></a>六、选择规则</h1><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1.</span> 先比较事务ID(ZXID)，如果相同再比较myid。值比较大的为leader，其余为follow</span><br><span class="line"><span class="bullet">2.</span> 由于启动阶段ZXID均为0，所以只要比较myid即可</span><br></pre></td></tr></table></figure><h1 id="七、常用命令"><a href="#七、常用命令" class="headerlink" title="七、常用命令"></a>七、常用命令</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">启动</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">./zkService start</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">前台启动，可以查看执行信息，查看报错信息时可以使用</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">./zkService start-foreground</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">关闭</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">./zkService stop</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">重启</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">./zkService restart</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看状态</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">./zkService status</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> zookeeper </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安装文档 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>go安装</title>
      <link href="/posts/6434012d.html"/>
      <url>/posts/6434012d.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="下载并解压"><a href="#下载并解压" class="headerlink" title="下载并解压"></a>下载并解压</h1><p>wget <a href="https://dl.google.com/go/go1.16.5.linux-amd64.tar.gz">https://dl.google.com/go/go1.16.5.linux-amd64.tar.gz</a> &amp;&amp; tar -C &#x2F;usr&#x2F;local&#x2F;webserver -xzf go1.16.5.linux-amd64.tar.gz</p><h1 id="设置profile"><a href="#设置profile" class="headerlink" title="设置profile"></a>设置profile</h1><p>export PATH&#x3D;&#x2F;usr&#x2F;local&#x2F;webserver&#x2F;go&#x2F;bin:$PATH</p>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> go </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安装文档 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sphinx操作脚本</title>
      <link href="/posts/cc7ec99f.html"/>
      <url>/posts/cc7ec99f.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">sphinx操作脚本</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">执行时，必须在sphinx_conf文件夹下</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">当前脚本以及sphinxParam.txt有修改后，在linux平台必须vim对应文件后，执行<span class="built_in">set</span> ff=unix,转换为unix文件格式</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建sphinx时需要带端口号,格式如下: -t代表类型 -l代表列表 列表格式为<span class="string">&#x27;文件名:端口号&#x27;</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">默认读取sphinx_conf/sphinxParam.txt文件,文件内格式</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">sphinxParam.txt样例开始(前后没有空格)</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">sphinxFileConfName:port</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">a.conf:9315</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">sphinxParam.txt样例解释</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">sh sphinxOption.sh -t create -l <span class="string">&#x27;sell:9313 chuzu:9313&#x27;</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">其他操作不需要带端口号,目前支持操作为</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">all: 初次启动生成文件 delta:增量 allrotate:全量rotate deltarotate:增量rotate start: 启动searchd stop:停止searchd</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">如果是docker，需要带参数 -p docker</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">sh sphinxOption.sh -t deltarotate -l <span class="string">&#x27;sell chuzu&#x27;</span></span></span><br><span class="line"></span><br><span class="line">echo &quot;$*&quot;</span><br><span class="line">platform=&quot;&quot;</span><br><span class="line">while getopts &quot;:p:t:l:&quot; opt; do</span><br><span class="line">  case $opt in</span><br><span class="line">    p)</span><br><span class="line">      platform=$OPTARG</span><br><span class="line">      ;;</span><br><span class="line">    t)</span><br><span class="line">      type=$OPTARG</span><br><span class="line">      ;;</span><br><span class="line">    l)</span><br><span class="line">      fileParam=$OPTARG</span><br><span class="line">      ;;</span><br><span class="line">    ?*)</span><br><span class="line">      echo &quot;未定义参数 $OPTARG 退出脚本&quot;</span><br><span class="line">      exit 0</span><br><span class="line">      ;;</span><br><span class="line">  esac</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">if [ &quot;$fileParam&quot; == &quot;&quot; ]; then</span><br><span class="line">  fileParam=$(cat sphinxParam.txt)</span><br><span class="line">fi</span><br><span class="line">for line in $fileParam; do</span><br><span class="line">  filename=$(echo $line | awk -F: &#x27;&#123;print $1&#125;&#x27;)</span><br><span class="line">  if [ -z $filename ] || [ ! -f &quot;$&#123;filename&#125;.conf&quot; ]</span><br><span class="line">  then</span><br><span class="line">    echo &quot;当前目录下查找$&#123;filename&#125;.conf文件失败，无法执行，退出脚本&quot;</span><br><span class="line">    exit 0</span><br><span class="line">  fi</span><br><span class="line"></span><br><span class="line">  port=$(echo $line | awk -F: &#x27;&#123;print $2&#125;&#x27;)</span><br><span class="line"></span><br><span class="line">  echo &quot;filename:$&#123;filename&#125; port:$&#123;port&#125; platform:$&#123;platform&#125;&quot;</span><br><span class="line"></span><br><span class="line">  dockerExec=&quot;&quot;</span><br><span class="line">  if [ $&#123;platform&#125; == &#x27;docker&#x27; ]</span><br><span class="line">  then</span><br><span class="line">    dockerExec=&quot;docker exec -i sphinx_$&#123;filename&#125; &quot;</span><br><span class="line">  fi</span><br><span class="line"></span><br><span class="line">  case $type in</span><br><span class="line">    create)</span><br><span class="line">      echo &quot;创建 sphinx&quot;</span><br><span class="line">      if [ -z $port ]</span><br><span class="line">      then</span><br><span class="line">        echo &quot;端口号为空，无法执行创建，退出脚本&quot;</span><br><span class="line">        exit 0</span><br><span class="line">      fi</span><br><span class="line">      docker run -ti --restart=always -d  -p $&#123;port&#125;:$&#123;port&#125; --name sphinx_$&#123;filename&#125; -v /data/:/data/:rw -v /dev/shm/:/dev/shm/:rw --network my_net coreseek3.2 bash</span><br><span class="line">      ;;</span><br><span class="line">    all)</span><br><span class="line">      echo &quot;执行 --all&quot;</span><br><span class="line">      $&#123;dockerExec&#125; /usr/local/webserver/coreseek/bin/indexer --config /data/http/917.com/sphinx_conf/$&#123;filename&#125;.conf --all --rotate</span><br><span class="line">      ;;</span><br><span class="line">    delta)</span><br><span class="line">      echo &quot;执行 delta&quot;</span><br><span class="line">      $&#123;dockerExec&#125; /usr/local/webserver/coreseek/bin/indexer --config /data/http/917.com/sphinx_conf/$&#123;filename&#125;.conf $&#123;filename&#125;_delta</span><br><span class="line">      ;;</span><br><span class="line">    allrotate)</span><br><span class="line">      echo &quot;执行 --all --rotate&quot;</span><br><span class="line">      $&#123;dockerExec&#125; /usr/local/webserver/coreseek/bin/indexer --config /data/http/917.com/sphinx_conf/$&#123;filename&#125;.conf --all --rotate</span><br><span class="line">      ;;</span><br><span class="line">    deltarotate)</span><br><span class="line">      echo &quot;执行 delta --rotate&quot;</span><br><span class="line">      $&#123;dockerExec&#125; /usr/local/webserver/coreseek/bin/indexer --config /data/http/917.com/sphinx_conf/$&#123;filename&#125;.conf $&#123;filename&#125;_delta --rotate</span><br><span class="line">      ;;</span><br><span class="line">    start)</span><br><span class="line">      echo &quot;执行 --pid 启动&quot;</span><br><span class="line">      $&#123;dockerExec&#125; /usr/local/webserver/coreseek/bin/searchd -c /data/http/917.com/sphinx_conf/$&#123;filename&#125;.conf --pidfile</span><br><span class="line">      ;;</span><br><span class="line">    stop)</span><br><span class="line">      echo &quot;执行 --stop 停止&quot;</span><br><span class="line">      $&#123;dockerExec&#125; /usr/local/webserver/coreseek/bin/searchd -c /data/http/917.com/sphinx_conf/$&#123;filename&#125;.conf --stop</span><br><span class="line">      ;;</span><br><span class="line">  esac</span><br><span class="line">done</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> linux </category>
          
          <category> shell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DFA(TireTree) 实现敏感词匹配</title>
      <link href="/posts/65999931.html"/>
      <url>/posts/65999931.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="基于DFA算法实现敏感词匹配"><a href="#基于DFA算法实现敏感词匹配" class="headerlink" title="基于DFA算法实现敏感词匹配"></a>基于DFA算法实现敏感词匹配</h1><p>一、封转类</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// redis封装类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SensitiveByRedis</span> <span class="keyword">extends</span> <span class="title">Sensitive</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$redis</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="variable">$extClass</span>; <span class="comment">// 外部类，用于调用外部类的方法</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$redis</span> = <span class="literal">null</span>, <span class="variable">$key</span> = <span class="string">&#x27;&#x27;</span>, <span class="variable">$extClass</span> = <span class="literal">null</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;redis = <span class="variable">$redis</span> ? <span class="variable">$redis</span> : <span class="title function_ invoke__">redis</span>(<span class="string">&quot;REDIS_COMMON&quot;</span>);</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;_key = <span class="variable">$key</span> ? <span class="string">&#x27;:&#x27;</span> . <span class="variable">$key</span> : <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;extClass = <span class="variable">$extClass</span> ? <span class="variable">$extClass</span> : <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">parent</span>::<span class="title function_ invoke__">__construct</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置读取的敏感词库</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> null $sensitiveWords</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> array|void</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getSensitiveWords</span>(<span class="params"><span class="variable">$sensitiveWords</span> = <span class="literal">null</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$redisKey</span> = <span class="string">&#x27;SensitiveWords&#x27;</span> . <span class="variable language_">$this</span>-&gt;_key;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;redis-&gt;<span class="title function_ invoke__">exists</span>(<span class="variable">$redisKey</span>))&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;trieTreeMap = <span class="title function_ invoke__">json_decode</span>(<span class="variable">$this</span>-&gt;redis-&gt;<span class="title function_ invoke__">get</span>(<span class="variable">$redisKey</span>),<span class="literal">true</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="comment">// 如果外部有声明指定方法，则使用声明方法返回的数据作为敏感词库</span></span><br><span class="line">            <span class="comment">// 由于目前只有sys_filterDao调用，所以不从敏感词文件中读取</span></span><br><span class="line">            <span class="variable">$sensitiveWordsList</span> = <span class="literal">null</span>;</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;extClass &amp;&amp; <span class="title function_ invoke__">method_exists</span>(<span class="variable">$this</span>-&gt;extClass, <span class="string">&#x27;filterRead&#x27;</span>)) &#123;</span><br><span class="line">                <span class="variable">$sensitiveWordsList</span> = <span class="variable language_">$this</span>-&gt;extClass-&gt;<span class="title function_ invoke__">filterRead</span>();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="variable language_">$this</span>-&gt;redis-&gt;<span class="title function_ invoke__">setex</span>(<span class="variable">$redisKey</span>, CACHE_TIME, <span class="title function_ invoke__">json_encode</span>(<span class="built_in">parent</span>::<span class="title function_ invoke__">getSensitiveWords</span>(<span class="variable">$sensitiveWordsList</span>)));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置读取的干扰词库</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> array|void</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getDisturbWords</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$redisKey</span> = <span class="string">&#x27;DisturbWords&#x27;</span> . <span class="variable language_">$this</span>-&gt;_key;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;redis-&gt;<span class="title function_ invoke__">exists</span>(<span class="variable">$redisKey</span>))&#123;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;disturbWords = <span class="variable language_">$this</span>-&gt;redis-&gt;<span class="title function_ invoke__">hGetAll</span>(<span class="string">&#x27;DisturbWords&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;redis-&gt;<span class="title function_ invoke__">hSet</span>(<span class="variable">$redisKey</span>,<span class="built_in">parent</span>::<span class="title function_ invoke__">getDisturbWords</span>());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>二、实现类</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Class Sensitive</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span>:</span></span><br><span class="line"><span class="comment"> * 敏感词过滤类</span></span><br><span class="line"><span class="comment"> * 采用DFA算法</span></span><br><span class="line"><span class="comment"> * 装载后数据结构如下： 大字典会导致处理时间很慢，建议写个类似SensitiveByRedis的类来继承本类</span></span><br><span class="line"><span class="comment"> *   $words = [</span></span><br><span class="line"><span class="comment"> *       &#x27;小&#x27; =&gt; [</span></span><br><span class="line"><span class="comment"> *           &#x27;日&#x27; =&gt; [</span></span><br><span class="line"><span class="comment"> *               &#x27;本&#x27; =&gt; false,</span></span><br><span class="line"><span class="comment"> *           ],</span></span><br><span class="line"><span class="comment"> *       ],</span></span><br><span class="line"><span class="comment"> *       &#x27;日&#x27; =&gt; [</span></span><br><span class="line"><span class="comment"> *          &#x27;本&#x27; =&gt; [</span></span><br><span class="line"><span class="comment"> *              &#x27;鬼&#x27; =&gt; [</span></span><br><span class="line"><span class="comment"> *                   &#x27;子&#x27; =&gt; false,</span></span><br><span class="line"><span class="comment"> *               ],</span></span><br><span class="line"><span class="comment"> *               &#x27;人&#x27; =&gt; false,</span></span><br><span class="line"><span class="comment"> *           ],</span></span><br><span class="line"><span class="comment"> *       ],</span></span><br><span class="line"><span class="comment"> *   ];</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * eg:</span></span><br><span class="line"><span class="comment"> *$str = &#x27;我爱习  .进  . 平总书记&#x27;;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *  搜索$str包含的关键词</span></span><br><span class="line"><span class="comment"> * $SensitiveClass-&gt;search($str);</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *敏感词有默认的前后缀</span></span><br><span class="line"><span class="comment"> *  高亮敏感词，可定制类型</span></span><br><span class="line"><span class="comment"> * $SensitiveClass-&gt;filter($str,null);</span></span><br><span class="line"><span class="comment"> *  result： &#x27;我爱&lt;em&gt;习  .进  . 平&lt;/em&gt;总书记&#x27;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *  统一格式的敏感词</span></span><br><span class="line"><span class="comment"> * $SensitiveClass-&gt;filter($str,&#x27;&#x27;,&#x27;&lt;em&gt;此处为敏感词&#x27;,&#x27;&lt;/em&gt;&#x27;);</span></span><br><span class="line"><span class="comment"> *  result：&#x27;我爱&lt;em&gt;此处为敏感词&lt;/em&gt;总书记&#x27;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *  替换敏感词</span></span><br><span class="line"><span class="comment"> * $SensitiveClass-&gt;filter($str,&#x27;[*]&#x27;,&#x27;&#x27;,&#x27;&#x27;);</span></span><br><span class="line"><span class="comment"> *result：&#x27;我爱[*][*][*][*][*][*][*][*][*][*]总书记&#x27;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">Class Sensitive</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$redis</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 替换码</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@var</span> string</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="variable">$replaceCode</span> = <span class="string">&#x27;*&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 敏感词库集合</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@var</span> array</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">protected</span> <span class="variable">$sensitiveWords</span> = <span class="keyword">array</span>();</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$trieTreeMap</span> = <span class="keyword">array</span>();</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 干扰因子集合</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@var</span> array</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="variable">$disturbWords</span> = <span class="keyword">array</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 构造函数，加载敏感词库及干扰词库</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">getSensitiveWords</span>();</span><br><span class="line"><span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">getDisturbWords</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 设置读取的敏感词库</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getSensitiveWords</span>(<span class="params"><span class="variable">$sensitiveWords</span> = <span class="literal">null</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$sensitiveWords</span>) &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;sensitiveWords = <span class="variable">$sensitiveWords</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;sensitiveWords = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">readFile</span>(</span><br><span class="line">                <span class="keyword">array</span>(</span><br><span class="line">                    ROOT_PATH . <span class="string">&quot;includes/class/SensitiveWords.dic&quot;</span></span><br><span class="line">                )</span><br><span class="line">            );</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//生成TrieTree</span></span><br><span class="line"><span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">formatTrieTree</span>(<span class="variable">$this</span>-&gt;sensitiveWords);</span><br><span class="line"><span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;trieTreeMap;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 设置读取的干扰词库</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getDisturbWords</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;disturbWords = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">readFile</span>(</span><br><span class="line"><span class="keyword">array</span>(</span><br><span class="line">ROOT_PATH . <span class="string">&quot;includes/class/SensitiveDistrubs.dic&quot;</span></span><br><span class="line">)</span><br><span class="line">);</span><br><span class="line"><span class="comment">//为了避免有些编辑器在干扰词的词库中加空格会被删除，这里单独对空格进行处理</span></span><br><span class="line"><span class="variable language_">$this</span>-&gt;disturbWords[] = <span class="string">&#x27; &#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;disturbWords;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 读取词库</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> array $paths</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">readFile</span>(<span class="params"><span class="variable">$paths</span></span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span> (!<span class="title function_ invoke__">is_array</span>(<span class="variable">$paths</span>)) <span class="keyword">return</span> <span class="keyword">array</span>();</span><br><span class="line"><span class="variable">$data</span> = <span class="keyword">array</span>();</span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$paths</span> <span class="keyword">as</span> <span class="variable">$path</span>)&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">is_file</span>(<span class="variable">$path</span>))&#123;</span><br><span class="line"><span class="variable">$t</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$path</span>);</span><br><span class="line"><span class="variable">$t</span> = <span class="title function_ invoke__">str_replace</span>(<span class="keyword">array</span>(<span class="string">&quot;\r\n&quot;</span>, <span class="string">&quot;\r&quot;</span>, <span class="string">&quot;\n&quot;</span>), <span class="string">&quot;,&quot;</span>, <span class="variable">$t</span>);</span><br><span class="line"><span class="variable">$list</span> = <span class="title function_ invoke__">explode</span>(<span class="string">&quot;,&quot;</span>,<span class="variable">$t</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">is_array</span>(<span class="variable">$list</span>))&#123;</span><br><span class="line"><span class="variable">$data</span>=<span class="title function_ invoke__">array_merge</span>(<span class="variable">$data</span>,<span class="variable">$list</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$data</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 转化成字典树</span></span><br><span class="line"><span class="comment">     * [&#x27;敏&#x27; =&gt; [&#x27;感&#x27; =&gt; [&#x27;词&#x27; =&gt; false]]]</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> array $wordsList</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">formatTrieTree</span>(<span class="params"><span class="keyword">array</span> <span class="variable">$wordsList</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$wordsList</span> <span class="keyword">as</span> <span class="variable">$words</span>) &#123;</span><br><span class="line"><span class="variable">$nowWords</span> = &amp;<span class="variable language_">$this</span>-&gt;trieTreeMap;</span><br><span class="line"><span class="variable">$len</span> = <span class="title function_ invoke__">mb_strlen</span>(<span class="variable">$words</span>, <span class="string">&#x27;utf-8&#x27;</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$len</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line"><span class="variable">$word</span> = <span class="title function_ invoke__">mb_substr</span>(<span class="variable">$words</span>, <span class="variable">$i</span>, <span class="number">1</span>, <span class="string">&#x27;utf-8&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$nowWords</span>[<span class="variable">$word</span>])) &#123;</span><br><span class="line"><span class="variable">$nowWords</span>[<span class="variable">$word</span>] = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 注释有误的话，自行修改</span></span><br><span class="line">                <span class="comment">// 指针回到数组第一位</span></span><br><span class="line">                <span class="comment">// 第一次执行指向&quot;敏&quot;, 即[&#x27;敏&#x27; =&gt; false]的false，</span></span><br><span class="line">                <span class="comment">// 第二次执行执行感，即[&#x27;敏&#x27; =&gt; [&#x27;感&#x27; =&gt; false]的false,以此类推</span></span><br><span class="line"><span class="variable">$nowWords</span> = &amp;<span class="variable">$nowWords</span>[<span class="variable">$word</span>];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 查找对应敏感词</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> $txt</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> array</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">search</span>(<span class="params"><span class="variable">$txt</span>, <span class="variable">$hasReplace</span>=<span class="literal">false</span>, &amp;<span class="variable">$replaceCodeList</span> = <span class="keyword">array</span>(<span class="params"></span>), <span class="variable">$prefix</span> = <span class="string">&#x27;&#x27;</span>, <span class="variable">$postfix</span> = <span class="string">&#x27;&#x27;</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="variable">$wordsList</span> = <span class="keyword">array</span>();</span><br><span class="line"><span class="variable">$txtLength</span> = <span class="title function_ invoke__">mb_strlen</span>(<span class="variable">$txt</span>, <span class="string">&#x27;utf-8&#x27;</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$txtLength</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line"><span class="variable">$wordLength</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">checkWord</span>(<span class="variable">$txt</span>, <span class="variable">$i</span>, <span class="variable">$txtLength</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$wordLength</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="comment">// 提取匹配的字符串</span></span><br><span class="line"><span class="variable">$words</span> = <span class="title function_ invoke__">mb_substr</span>(<span class="variable">$txt</span>, <span class="variable">$i</span>, <span class="variable">$wordLength</span>, <span class="string">&#x27;utf-8&#x27;</span>);</span><br><span class="line"><span class="variable">$wordsList</span>[] = <span class="variable">$words</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$hasReplace</span>)&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;replaceCode === <span class="literal">NULL</span>)&#123;</span><br><span class="line"><span class="variable">$replaceCodeList</span>[] = <span class="variable">$prefix</span>.<span class="variable">$words</span>.<span class="variable">$postfix</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$replaceCodeList</span>[] = <span class="variable">$prefix</span>.<span class="title function_ invoke__">str_repeat</span>(<span class="variable">$this</span>-&gt;replaceCode, <span class="title function_ invoke__">mb_strlen</span>(<span class="variable">$words</span>, <span class="string">&#x27;utf-8&#x27;</span>)).<span class="variable">$postfix</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$i</span> += <span class="variable">$wordLength</span> - <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$wordsList</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 过滤敏感词</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> $txt</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> mixed</span></span><br><span class="line"><span class="comment"> * $replaceCode  NULL:不替换, &#x27;&#x27;:直接过滤掉， &#x27;[*]&#x27;:用[*]替换</span></span><br><span class="line"><span class="comment"> * $prefix 前缀  用于高亮或提示</span></span><br><span class="line"><span class="comment"> * $postfix 后缀 用于高亮或提示</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params"><span class="variable">$txt</span>,<span class="variable">$replaceCode</span> = <span class="string">&#x27;*&#x27;</span>,<span class="variable">$prefix</span> = <span class="string">&#x27;&lt;highlight&gt;&#x27;</span>,<span class="variable">$postfix</span>=<span class="string">&#x27;&lt;/highlight&gt;&#x27;</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;replaceCode = <span class="variable">$replaceCode</span>;</span><br><span class="line"><span class="variable">$replaceCodeList</span> = <span class="keyword">array</span>();</span><br><span class="line"><span class="variable">$wordsList</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">search</span>(<span class="variable">$txt</span>, <span class="literal">true</span>, <span class="variable">$replaceCodeList</span>,<span class="variable">$prefix</span>,<span class="variable">$postfix</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable">$wordsList</span>)) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$txt</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="title function_ invoke__">str_replace</span>(<span class="variable">$wordsList</span>, <span class="variable">$replaceCodeList</span>, <span class="variable">$txt</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 敏感词检测</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> $txt</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> $beginIndex</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> $length</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> int</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">checkWord</span>(<span class="params"><span class="variable">$txt</span>, <span class="variable">$beginIndex</span>, <span class="variable">$length</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="variable">$flag</span> = <span class="literal">false</span>; <span class="comment">// 是否在最后一位</span></span><br><span class="line"><span class="variable">$wordLength</span> = <span class="number">0</span>; <span class="comment">// 匹配次数</span></span><br><span class="line"><span class="variable">$trieTree</span> = &amp;<span class="variable language_">$this</span>-&gt;trieTreeMap;</span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span> = <span class="variable">$beginIndex</span>; <span class="variable">$i</span> &lt; <span class="variable">$length</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line"><span class="variable">$word</span> = <span class="title function_ invoke__">mb_substr</span>(<span class="variable">$txt</span>, <span class="variable">$i</span>, <span class="number">1</span>, <span class="string">&#x27;utf-8&#x27;</span>);</span><br><span class="line"><span class="comment">// 跳过干扰词</span></span><br><span class="line"><span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">checkDisturb</span>(<span class="variable">$word</span>)) &#123;</span><br><span class="line"><span class="variable">$wordLength</span>++;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$trieTree</span>[<span class="variable">$word</span>])) &#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$wordLength</span>++;</span><br><span class="line"><span class="comment">// 判断是否全部遍历完树对应子集</span></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$trieTree</span>[<span class="variable">$word</span>] !== <span class="literal">false</span>) &#123;</span><br><span class="line"><span class="variable">$trieTree</span> = &amp;<span class="variable">$trieTree</span>[<span class="variable">$word</span>];</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="variable">$flag</span> = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable">$flag</span>) &#123;</span><br><span class="line">            <span class="variable">$wordLength</span> = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$wordLength</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 干扰因子检测</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> $word</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> bool</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">checkDisturb</span>(<span class="params"><span class="variable">$word</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="title function_ invoke__">in_array</span>(<span class="variable">$word</span>, <span class="variable">$this</span>-&gt;disturbWords);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git文件行尾结束符处理</title>
      <link href="/posts/fb0999de.html"/>
      <url>/posts/fb0999de.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><p>@link <a href="https://enderhoshi.github.io/2018/11/28/Git%E5%BF%BD%E7%95%A5%E6%96%87%E4%BB%B6%E5%92%8C%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%B0%BE%E9%83%A8%E6%8D%A2%E8%A1%8C%E7%AC%A6%E9%97%AE%E9%A2%98/">原文: Git忽略文件和操作系统尾部换行符问题</a></p><p>假如你正在Windows上写程序，又或者你正在和其他人合作，他们在Windows上编程，而你却在其他系统上，在这些情况下，就可能会遇到行尾结束符问题，这是因为Windows使用回车和换行两个字符来结束一行，而Mac和Linux只使用换行符一个字符。虽然这是小问题，但它会极大地扰乱跨平台协作，在提交时产生非常多的冲突</p><p>对于不同的平台，有不同的处理方案：<br>Git可以在你提交时自动地把行结束符CRLF转换成LF，而在签出代码时把LF转换成CRLF。设置core.autocrlf来打开此项功能，如果是在Windows系统上，就把它设置成true，这样当签出代码时，LF会被转换成CRLF：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git config --global core.autocrlf <span class="literal">true</span></span></span><br></pre></td></tr></table></figure><p>Linux或Mac系统使用LF作为行结束符，因此你不想Git在签出文件时进行自动的转换；当一个以CRLF为行结束符的文件不小心被引入时你肯定想进行修正，把core.autocrlf设置成input来告诉Git在提交时把CRLF转换成LF，签出时不转换：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git config --global core.autocrlf input</span></span><br></pre></td></tr></table></figure><p>这样会在Windows系统上的签出文件中保留CRLF，会在Mac和Linux系统上，包括仓库中保留LF。</p><p>如果你是Windows程序员，且正在开发仅运行在Windows上的项目，可以设置false取消此功能，把回车符记录在库中：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git config --global core.autocrlf <span class="literal">false</span></span></span><br></pre></td></tr></table></figure><p>上面三条总结起来就是下面的情形，x是你当前使用的系统所使用的换行方式</p><figure class="highlight ocaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>) <span class="literal">true</span>:             x -&gt; <span class="type">LF</span> -&gt; <span class="type">CRLF</span></span><br><span class="line"><span class="number">2</span>) input:            x -&gt; <span class="type">LF</span> -&gt; <span class="type">LF</span></span><br><span class="line"><span class="number">3</span>) <span class="literal">false</span>:            x -&gt; x -&gt; x</span><br></pre></td></tr></table></figure><p>项目已经存在换行符不同的问题的解决方案：</p><p>如果当前开发有多个分支且各分支不同步，需要每个分支进行一次转换<br>如果只有一个分支或多个分支处于同一节点。可以从master切换一个新分支，进行转换，然后commit ，将此分支合并到所有分支。<br>将修改过的分支push到gitlab，让其他成员更新代码即可。<br>Ps:由于每个人系统不同或者就是git的问题，可能出现更新完代码换行符不变，这时以服务器上的代码为准重新clone一份最新代码即可</p>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 常用命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker Remote API</title>
      <link href="/posts/2fce4b74.html"/>
      <url>/posts/2fce4b74.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="Docker常见端口"><a href="#Docker常见端口" class="headerlink" title="Docker常见端口"></a>Docker常见端口</h1><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2375</span><span class="string">：未加密的docker</span> <span class="string">socket,远程root无密码访问主机</span></span><br><span class="line"><span class="number">2376</span><span class="string">：tls加密套接字,很可能这是您的CI服务器4243端口作为https</span> <span class="number">443</span><span class="string">端口的修改</span></span><br><span class="line"><span class="number">2377</span><span class="string">：群集模式套接字,适用于群集管理器,不适用于docker客户端</span></span><br><span class="line"><span class="number">5000</span><span class="string">：docker注册服务</span></span><br><span class="line"><span class="number">4789</span><span class="string">和7946：覆盖网络</span></span><br></pre></td></tr></table></figure><h1 id="开启配置远程访问API"><a href="#开启配置远程访问API" class="headerlink" title="开启配置远程访问API"></a>开启配置远程访问API</h1><p>方法一、</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/default/docker</span><br><span class="line">加入下面一行</span><br><span class="line">DOCKER_OPTS=&quot;-H tcp://0.0.0.0:2375&quot;</span><br><span class="line">重启docker即可：</span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure><p>PS:这是网上给的配置方法，也是这种简单配置让Docker Daemon把服务暴露在tcp的2375端口上，这样就可以在网络上操作Docker了。Docker本身没有身份认证的功能，只要网络上能访问到服务端口，就可以操作Docker。</p><p>方法二、<br>在&#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;docker.service，配置远程访问。<br>主要是在[Service]这个部分，加上下面两个参数<br>vim &#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;docker.service</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[Service]</span><br><span class="line">ExecStart=</span><br><span class="line">ExecStart=<span class="regexp">/usr/</span>bin<span class="regexp">/dockerd -H tcp:/</span><span class="regexp">/0.0.0.0:2375 -H unix:/</span><span class="regexp">/var/</span>run/docker.sock</span><br><span class="line"><span class="comment"># 如果是连接虚拟机中的docker，必须使用明确的ip，外部宿主机才能通过docker -H 访问</span></span><br><span class="line">ExecStart=<span class="regexp">/usr/</span>bin<span class="regexp">/dockerd -H tcp:/</span><span class="regexp">/172.28.128.3:2375 -H unix:/</span><span class="regexp">/var/</span>run/docker.sock</span><br></pre></td></tr></table></figure><p>重启</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><p>方法三、<br>下面修改daemon.json的配置</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/docker/daemon<span class="selector-class">.json</span></span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;hosts&quot;</span>: <span class="selector-attr">[<span class="string">&quot;tcp://0.0.0.0:2375&quot;</span>, <span class="string">&quot;unix:///var/run/docker.sock&quot;</span>]</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>“unix:&#x2F;&#x2F;&#x2F;var&#x2F;run&#x2F;docker.sock”：unix socket，本地客户端将通过这个来连接 Docker Daemon。<br>“tcp:&#x2F;&#x2F;0.0.0.0:2375”：tcp socket，表示允许任何远程客户端通过 2375 端口连接 Docker Daemon。</p><p>修改配置以后,然后让docker重新读取配置文件,并重启docker服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><h1 id="查看docker进程："><a href="#查看docker进程：" class="headerlink" title="查看docker进程："></a>查看docker进程：</h1><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@slaver2 ~]<span class="comment"># ps -ef|grep docker</span></span><br><span class="line">root      <span class="number">44221</span>      <span class="number">1</span>  <span class="number">1</span> <span class="number">18</span>:<span class="number">16</span> ?        <span class="number">00</span>:<span class="number">00</span>:<span class="number">06</span> <span class="regexp">/usr/</span>bin<span class="regexp">/dockerd -H tcp:/</span><span class="regexp">/0.0.0.0:2375 -H unix:/</span><span class="regexp">/var/</span>run/docker.sock</span><br></pre></td></tr></table></figure><p>Docker守护进程打开一个HTTP Socket,这样才能实现远程通信</p><h1 id="简单使用"><a href="#简单使用" class="headerlink" title="简单使用"></a>简单使用</h1><p>-H为连接目标主机docker服务<br>查看docker版本</p><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@slaver2 <span class="operator">/</span>]<span class="comment"># docker -H tcp://172.28.128.3:2375 version</span></span><br><span class="line"><span class="params">Client:</span> Docker Engine <span class="operator">-</span> Community</span><br><span class="line"> <span class="params">Version:</span>           <span class="number">19.03</span>.<span class="number">0</span></span><br><span class="line"> API <span class="params">version:</span>       <span class="number">1.40</span></span><br><span class="line"> Go <span class="params">version:</span>        go1.<span class="number">12.5</span></span><br><span class="line"> Git <span class="params">commit:</span>        aeac9490dc</span><br><span class="line"> <span class="params">Built:</span>             Wed Jul <span class="number">17</span> <span class="number">18</span>:<span class="number">15</span>:<span class="number">40</span> <span class="number">2019</span></span><br><span class="line"> OS<span class="operator">/</span><span class="params">Arch:</span>           linux<span class="symbol">/amd64</span></span><br><span class="line"> <span class="params">Experimental:</span>      <span class="literal">false</span></span><br><span class="line">Cannot connect to the Docker daemon at tcp:<span class="operator">//</span><span class="number">172.28</span>.<span class="number">128.3</span>:<span class="number">2375</span>. Is the docker daemon running<span class="operator">?</span></span><br></pre></td></tr></table></figure><p>查看镜像包：</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@slaver2 <span class="symbol">~]# docker -H tcp</span>:<span class="comment">//172.28.128.3:2375 images</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> Docker </category>
          
          <category> 文档 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>图片处理类</title>
      <link href="/posts/16d3e2fc.html"/>
      <url>/posts/16d3e2fc.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#-*- coding:utf-8 -*-</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">图片处理</span></span><br><span class="line"><span class="string">author yfc</span></span><br><span class="line"><span class="string">since 2019/7/31 0031 上午 10:41</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image, ImageSequence, ImageDraw, ImageFont</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> urllib.request <span class="keyword">as</span> request</span><br><span class="line"><span class="keyword">import</span> imghdr</span><br><span class="line"><span class="keyword">import</span> house.function.common <span class="keyword">as</span> common</span><br><span class="line"><span class="keyword">import</span> house.settings <span class="keyword">as</span> settings</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ImageProcess</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">upYunSetUp</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">import</span> upyun</span><br><span class="line">        <span class="keyword">import</span> house.settings <span class="keyword">as</span> settings</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="variable language_">self</span>.upYunClass = upyun.UpYun(settings.UPYUN_NAME, settings.UPYUN_USER, settings.UPYUN_PWD, timeout=<span class="number">60</span>,</span><br><span class="line">                             endpoint=upyun.ED_AUTO)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">raise</span> e</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">upYunUpload</span>(<span class="params">self, image, <span class="built_in">type</span>, delImg=<span class="literal">None</span></span>):</span><br><span class="line">        timeSec = <span class="built_in">int</span>(time.time())</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> image:</span><br><span class="line">            <span class="keyword">return</span> &#123;<span class="string">&#x27;status&#x27;</span>: <span class="number">204</span>, <span class="string">&#x27;msg&#x27;</span>: <span class="string">&#x27;图片为空&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line">        image = image.replace(<span class="string">&#x27;\\&#x27;</span>, <span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">        <span class="comment"># 获取图片后缀</span></span><br><span class="line">        imageType = image.split(<span class="string">&#x27;.&#x27;</span>)[-<span class="number">1</span>]</span><br><span class="line">        imageName = image.split(<span class="string">&#x27;.&#x27;</span>)[-<span class="number">2</span>]</span><br><span class="line">        fileName = common.myMD5(<span class="string">&#x27;%s%s&#x27;</span> % (imageName, timeSec))[<span class="number">8</span>:-<span class="number">8</span>]</span><br><span class="line">        imageUrl = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">type</span> == <span class="number">1</span>:</span><br><span class="line">            fileName = <span class="string">&#x27;%s.%s&#x27;</span> % (fileName, imageType)</span><br><span class="line">            imageUrl = <span class="string">&#x27;/lp/%s/%s&#x27;</span> % (time.strftime(<span class="string">&#x27;%Y/%m/%d&#x27;</span>, time.localtime(timeSec)), fileName)</span><br><span class="line">        <span class="keyword">elif</span> <span class="built_in">type</span> == <span class="number">2</span>:</span><br><span class="line">            fileName = <span class="string">&#x27;%s.%s&#x27;</span> % (fileName, imageType)</span><br><span class="line">            imageUrl = <span class="string">&#x27;/u/%s/%s&#x27;</span> % ((time.strftime(<span class="string">&#x27;%Y%m%d&#x27;</span>, time.localtime(timeSec)), fileName))</span><br><span class="line">        <span class="keyword">elif</span> <span class="built_in">type</span>==<span class="number">3</span>:</span><br><span class="line">            fileName = <span class="string">&#x27;%s%s.%s&#x27;</span> % (<span class="built_in">str</span>(fileName)[<span class="number">0</span>:<span class="number">6</span>], common.randomValue(<span class="number">16</span>), imageType)</span><br><span class="line">            imageUrl = <span class="string">&#x27;/%s/%s&#x27;</span> % (time.strftime(<span class="string">&#x27;%Y/%m/%d&#x27;</span>, time.localtime(timeSec)), fileName)</span><br><span class="line">        <span class="keyword">elif</span> <span class="built_in">type</span>==<span class="number">4</span>:</span><br><span class="line">            <span class="comment"># 资讯</span></span><br><span class="line">            fileName = <span class="string">&#x27;%s%s.%s&#x27;</span> % (<span class="built_in">str</span>(fileName)[<span class="number">0</span>:<span class="number">6</span>], common.randomValue(<span class="number">16</span>), imageType)</span><br><span class="line">            imageUrl = <span class="string">&#x27;/news/%s/%s&#x27;</span> % (time.strftime(<span class="string">&#x27;%Y/%m/%d&#x27;</span>, time.localtime(timeSec)), fileName)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">with</span> <span class="built_in">open</span>(image, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> fh:</span><br><span class="line">                rsp = <span class="variable language_">self</span>.upYunClass.put(imageUrl, fh)  <span class="comment"># 上传图片，自动创建目录</span></span><br><span class="line">                time.sleep(<span class="number">0.5</span>)</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">not</span> rsp.get(<span class="string">&#x27;content-length&#x27;</span>, <span class="string">&#x27;&#x27;</span>):</span><br><span class="line">                    time.sleep(<span class="number">0.5</span>)</span><br><span class="line">                    <span class="keyword">return</span> &#123;<span class="string">&#x27;status&#x27;</span>: <span class="number">204</span>, <span class="string">&#x27;msg&#x27;</span>: <span class="string">&#x27;上传失败1&#x27;</span>&#125;</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            errorMsg = <span class="string">&#x27;图片上传异常:%s&#x27;</span> % e</span><br><span class="line">            time.sleep(<span class="number">5</span>)</span><br><span class="line">            <span class="keyword">return</span> &#123;<span class="string">&#x27;status&#x27;</span>: <span class="number">204</span>, <span class="string">&#x27;msg&#x27;</span>: errorMsg&#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="comment"># 如果delImg没有传值，并且环境为线上环境，默认移除上传成功的图片</span></span><br><span class="line">            <span class="keyword">if</span> delImg <span class="keyword">is</span> <span class="literal">None</span> <span class="keyword">and</span> settings.delLocalImg:</span><br><span class="line">                delImg = <span class="literal">True</span></span><br><span class="line">            <span class="keyword">if</span> delImg:</span><br><span class="line">                os.remove(image)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            errorMsg = <span class="string">&#x27;图片上传后,删除图片异常:%s:%s&#x27;</span> % (image, e)</span><br><span class="line">            common.util_log().errorLog(errorMsg)</span><br><span class="line">            <span class="comment"># return &#123;&#x27;status&#x27;: 204, &#x27;msg&#x27;: errorMsg&#125;</span></span><br><span class="line">        <span class="keyword">return</span> &#123;<span class="string">&#x27;status&#x27;</span>: <span class="number">200</span>, <span class="string">&#x27;msg&#x27;</span>: imageUrl&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">saveFile</span>(<span class="params">self, data, <span class="built_in">type</span>=<span class="number">1</span>, dirPath=<span class="string">&#x27;/&#x27;</span>, filename=<span class="string">&#x27;&#x27;</span>, fileBasePath=<span class="string">&#x27;&#x27;</span></span>):</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        保存文件到本地</span></span><br><span class="line"><span class="string">        :param data: 文件内容 | url地址</span></span><br><span class="line"><span class="string">        :param type: 1-url地址 2-内容</span></span><br><span class="line"><span class="string">        :param filename: 自定义文件名, 如果是url, 默认取url的文件名</span></span><br><span class="line"><span class="string">        :param dirPath: 自定义目录路径 xxx/</span></span><br><span class="line"><span class="string">        :param fileBasePath: 基础目录路径 /xxx/</span></span><br><span class="line"><span class="string">        :return: /path/filename.xx</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> fileBasePath:</span><br><span class="line">            fileBasePath = settings.ROOT_PATH</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 完整路径以及相对路径</span></span><br><span class="line">        timePath = time.strftime(<span class="string">&#x27;%Y%m%d/&#x27;</span>, time.localtime(time.time()))</span><br><span class="line">        shortPath = dirPath + timePath</span><br><span class="line">        path = fileBasePath + shortPath</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(path):</span><br><span class="line">            os.makedirs(path, mode=<span class="number">0o777</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">type</span> == <span class="number">2</span> <span class="keyword">and</span> <span class="keyword">not</span> filename:</span><br><span class="line">            <span class="keyword">return</span> &#123;<span class="string">&#x27;status&#x27;</span>: <span class="number">204</span>, <span class="string">&#x27;msg&#x27;</span>: <span class="string">&#x27;文件名为空&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> filename:</span><br><span class="line">            filename = data.split(<span class="string">&#x27;/&#x27;</span>)[-<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 文件完整路径以及相对路径</span></span><br><span class="line">        <span class="comment"># 如果已存在文件直接返回路径</span></span><br><span class="line">        fullFileName = path + filename</span><br><span class="line">        shortFileName = shortPath + filename</span><br><span class="line">        <span class="keyword">if</span> os.path.exists(fullFileName):</span><br><span class="line">            <span class="keyword">return</span> &#123;<span class="string">&#x27;status&#x27;</span>: <span class="number">200</span>, <span class="string">&#x27;msg&#x27;</span>: &#123;<span class="string">&#x27;fullFileName&#x27;</span>: fullFileName, <span class="string">&#x27;shortFileName&#x27;</span>: shortFileName&#125;&#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            result = <span class="string">&#x27;&#x27;</span></span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">type</span> == <span class="number">1</span>:</span><br><span class="line">                <span class="comment"># 网络下载方式保存文件</span></span><br><span class="line">                result = request.urlretrieve(data, fullFileName)</span><br><span class="line">            <span class="keyword">elif</span> <span class="built_in">type</span> == <span class="number">2</span>:</span><br><span class="line">                <span class="comment"># 读取二进制文件保存文件</span></span><br><span class="line">                <span class="keyword">with</span> <span class="built_in">open</span>(fullFileName, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> fh:</span><br><span class="line">                    result = fh.write(data)</span><br><span class="line">            <span class="keyword">if</span> result:</span><br><span class="line">                <span class="comment"># 验证文件是否完整 如果不完整返回None(通过判断文件头部判断图片类型)</span></span><br><span class="line">                <span class="keyword">if</span> imghdr.what(fullFileName) == <span class="literal">None</span>:</span><br><span class="line">                    <span class="keyword">return</span> &#123;<span class="string">&#x27;status&#x27;</span>: <span class="number">204</span>, <span class="string">&#x27;msg&#x27;</span>: <span class="string">&#x27;%s无法获取文件类型，文件可能已损坏&#x27;</span> % shortFileName&#125;</span><br><span class="line">                dealRes = <span class="variable language_">self</span>.dealFile(fullFileName, fullFileName)</span><br><span class="line">                <span class="keyword">if</span> dealRes.get(<span class="string">&#x27;status&#x27;</span>, <span class="number">0</span>) == <span class="number">204</span>:</span><br><span class="line">                    <span class="keyword">return</span> dealRes</span><br><span class="line">                <span class="keyword">return</span> &#123;<span class="string">&#x27;status&#x27;</span>: <span class="number">200</span>, <span class="string">&#x27;msg&#x27;</span>: &#123;<span class="string">&#x27;fullFileName&#x27;</span>: fullFileName, <span class="string">&#x27;shortFileName&#x27;</span>: shortFileName&#125;&#125;</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">return</span> &#123;<span class="string">&#x27;status&#x27;</span>: <span class="number">204</span>, <span class="string">&#x27;msg&#x27;</span>: <span class="string">&#x27;%s文件写入失败:%s&#x27;</span> % (shortFileName, e)&#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> &#123;<span class="string">&#x27;status&#x27;</span>: <span class="number">204</span>, <span class="string">&#x27;msg&#x27;</span>: <span class="string">&#x27;&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">dealImagePixels</span>(<span class="params">self, imgPath=<span class="string">&#x27;&#x27;</span></span>):</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        获取图片信息，支持修改图片透明度</span></span><br><span class="line"><span class="string">        :param imgPath: 图片地址</span></span><br><span class="line"><span class="string">        :return:</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> imgPath:</span><br><span class="line">            imgPath = settings.logoPath</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            imgOrigin = Image.<span class="built_in">open</span>(imgPath)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">return</span> &#123;<span class="string">&#x27;status&#x27;</span>: <span class="number">204</span>, <span class="string">&#x27;msg&#x27;</span>: <span class="string">&#x27;打开logo图片错误:%s:%s&#x27;</span> % (imgPath, e)&#125;</span><br><span class="line">        imgWidth, imgHeight = imgOrigin.size</span><br><span class="line">        imgPixelsDict = <span class="built_in">dict</span>()</span><br><span class="line">        <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(imgWidth):</span><br><span class="line">            <span class="keyword">for</span> y <span class="keyword">in</span> <span class="built_in">range</span>(imgHeight):</span><br><span class="line">                <span class="comment"># 通过坐标点，获取(R, G, B, A)</span></span><br><span class="line">                pixel = imgOrigin.getpixel((x, y))</span><br><span class="line">                <span class="comment"># 去除透明度为0的像素</span></span><br><span class="line">                <span class="keyword">if</span> pixel != (<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>):</span><br><span class="line">                    imgPixelsDict[(x, y)] = pixel</span><br><span class="line">                    <span class="comment"># 修改透明度</span></span><br><span class="line">                    <span class="comment"># imgPixelsDict[(x, y)] = pixel[:3]+(100,)</span></span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            <span class="string">&#x27;status&#x27;</span>: <span class="number">200</span>,</span><br><span class="line">            <span class="string">&#x27;msg&#x27;</span>: &#123;</span><br><span class="line">                <span class="string">&#x27;origin&#x27;</span>: imgOrigin,</span><br><span class="line">                <span class="string">&#x27;width&#x27;</span>: imgWidth,</span><br><span class="line">                <span class="string">&#x27;height&#x27;</span>: imgHeight,</span><br><span class="line">                <span class="string">&#x27;pixelsDict&#x27;</span>: imgPixelsDict</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">blendPixel</span>(<span class="params">self, pixel1, pixel2</span>):</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        混合颜色(R, G, B, A)</span></span><br><span class="line"><span class="string">        :param pixel1: 图片像素</span></span><br><span class="line"><span class="string">        :param pixel2: 图片像素</span></span><br><span class="line"><span class="string">        :return:</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line">        <span class="comment"># alpha 透明度</span></span><br><span class="line">        alpha1 = <span class="number">256</span> - pixel2[<span class="number">3</span>]</span><br><span class="line">        alpha2 = pixel2[<span class="number">3</span>] - (alpha1 * pixel2[<span class="number">3</span>]) / <span class="number">256.0</span></span><br><span class="line">        alpha = alpha1 + alpha2</span><br><span class="line">        pixel = (</span><br><span class="line">            <span class="built_in">int</span>((alpha1 * pixel1[<span class="number">0</span>] + alpha2 * pixel2[<span class="number">0</span>]) / alpha),</span><br><span class="line">            <span class="built_in">int</span>((alpha1 * pixel1[<span class="number">1</span>] + alpha2 * pixel2[<span class="number">1</span>]) / alpha),</span><br><span class="line">            <span class="built_in">int</span>((alpha1 * pixel1[<span class="number">2</span>] + alpha2 * pixel2[<span class="number">2</span>]) / alpha),</span><br><span class="line">            <span class="built_in">int</span>(alpha)</span><br><span class="line">        )</span><br><span class="line">        <span class="keyword">return</span> pixel</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">dealImage</span>(<span class="params">self, image, logoPixelsDict, offTop=<span class="literal">None</span>, offLeft=<span class="literal">None</span></span>):</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        处理图片，将图片</span></span><br><span class="line"><span class="string">        :param image: 图片资源</span></span><br><span class="line"><span class="string">        :param logoPixelsDict: logo图片像素</span></span><br><span class="line"><span class="string">        :param offTop: y基于image偏移量</span></span><br><span class="line"><span class="string">        :param offLeft: x基于image偏移量</span></span><br><span class="line"><span class="string">        :return:</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line">        <span class="comment"># 如果图片尺寸小于水印图片，不加水印</span></span><br><span class="line">        <span class="keyword">for</span> coords, logoPixel <span class="keyword">in</span> logoPixelsDict.items():</span><br><span class="line">            <span class="comment"># x轴坐标</span></span><br><span class="line">            coords_x = (coords[<span class="number">0</span>] + offLeft)</span><br><span class="line">            <span class="comment"># y轴坐标</span></span><br><span class="line">            coords_y = (coords[<span class="number">1</span>] + offTop)</span><br><span class="line">            imagePixel = image.getpixel((coords_x, coords_y))</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">isinstance</span>(imagePixel, <span class="built_in">tuple</span>) <span class="keyword">and</span> <span class="built_in">len</span>(imagePixel) &gt; <span class="number">2</span>):</span><br><span class="line">                <span class="comment"># 将坐标的RGBA修改为混合后的RGBA</span></span><br><span class="line">                image.putpixel((coords_x, coords_y), <span class="variable language_">self</span>.blendPixel(imagePixel, logoPixel))</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> image</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">dealFile</span>(<span class="params">self, filePath, outFilePath=<span class="string">&#x27;&#x27;</span>,logoDict=<span class="literal">None</span>, offX=-<span class="number">5</span>, offY=-<span class="number">5</span></span>):</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        图片增加水印, 非图片</span></span><br><span class="line"><span class="string">        :param filePath: 图片路径</span></span><br><span class="line"><span class="string">        :param logoDict: logo图片信息</span></span><br><span class="line"><span class="string">        :param offX: logo对于图片x偏移量</span></span><br><span class="line"><span class="string">        :param offY: logo对于图片y偏移量</span></span><br><span class="line"><span class="string">        :return:</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line">        <span class="comment"># 非图片类型图片不进行处理</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> filePath <span class="keyword">or</span> <span class="keyword">not</span> filePath.endswith((<span class="string">&#x27;.gif&#x27;</span>, <span class="string">&#x27;.jpg&#x27;</span>, <span class="string">&#x27;.png&#x27;</span>, <span class="string">&#x27;.jpeg&#x27;</span>)):</span><br><span class="line">            <span class="keyword">return</span> &#123;<span class="string">&#x27;status&#x27;</span>: <span class="number">204</span>, <span class="string">&#x27;msg&#x27;</span>: <span class="string">&#x27;文件格式错误&#x27;</span>&#125;</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            imgOrign = Image.<span class="built_in">open</span>(filePath)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">return</span> &#123;<span class="string">&#x27;status&#x27;</span>: <span class="number">204</span>, <span class="string">&#x27;msg&#x27;</span>: <span class="string">&#x27;dealFile 打开图片失败:%s&#x27;</span> % filePath&#125;</span><br><span class="line">        imgWidth, imgHeight = imgOrign.size</span><br><span class="line">        _, fileType = os.path.splitext(filePath)</span><br><span class="line">        fileType = fileType.lower()</span><br><span class="line">        basename = os.path.basename(filePath)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 如果没有配置输出文件路径，默认为覆盖原本的路径</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> outFilePath:</span><br><span class="line">            outFilePath = filePath</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="comment"># 如果存在输出文件路径，判断是否为文件，如果非文件则为文件夹，文件名为原文件文件名</span></span><br><span class="line">            _, outFileType = os.path.splitext(outFilePath)</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> outFileType:</span><br><span class="line">                outFilePath = <span class="string">&#x27;%s%s&#x27;</span> % (outFilePath, basename)</span><br><span class="line">        <span class="comment"># 如果不存在输出目录，创建输出目录</span></span><br><span class="line">        outFileDir = os.path.dirname(outFilePath)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(outFileDir):</span><br><span class="line">            os.makedirs(outFileDir, mode=<span class="number">0o777</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> logoDict:</span><br><span class="line">            logoRes = <span class="variable language_">self</span>.dealImagePixels()</span><br><span class="line">            <span class="keyword">if</span> logoRes.get(<span class="string">&#x27;status&#x27;</span>, <span class="number">0</span>) == <span class="number">204</span>:</span><br><span class="line">                <span class="keyword">return</span> logoRes</span><br><span class="line">            logoDict = logoRes.get(<span class="string">&#x27;msg&#x27;</span>, &#123;&#125;)</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> logoDict:</span><br><span class="line">                <span class="keyword">return</span> &#123;<span class="string">&#x27;status&#x27;</span>: <span class="number">204</span>, <span class="string">&#x27;msg&#x27;</span>: <span class="string">&#x27;dealFile 获取logo图片失败:%s&#x27;</span> % filePath&#125;</span><br><span class="line"></span><br><span class="line">        logoOrigin = logoDict.get(<span class="string">&#x27;origin&#x27;</span>)</span><br><span class="line">        logoWidth = logoDict.get(<span class="string">&#x27;width&#x27;</span>)</span><br><span class="line">        logoHeight = logoDict.get(<span class="string">&#x27;height&#x27;</span>)</span><br><span class="line">        logoPixelsDict = logoDict.get(<span class="string">&#x27;pixelsDict&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># if imgOrign.mode in (&quot;RGBA&quot;, &quot;P&quot;):</span></span><br><span class="line">        <span class="comment"># jpg格式不支持透明度，需要转换</span></span><br><span class="line">        <span class="keyword">if</span> fileType == <span class="string">&#x27;.jpg&#x27;</span>:</span><br><span class="line">            imgOrign = imgOrign.convert(<span class="string">&quot;RGB&quot;</span>)</span><br><span class="line">        <span class="comment"># 如果图片尺寸小于水印图片，不加水印，直接返回原图</span></span><br><span class="line">        <span class="keyword">if</span> imgWidth &lt; logoWidth <span class="keyword">and</span> imgHeight &lt; logoHeight:</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                imgOrign.save(<span class="string">f&#x27;%s&#x27;</span> % outFilePath)</span><br><span class="line">            <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">                <span class="keyword">return</span> &#123;<span class="string">&#x27;status&#x27;</span>: <span class="number">204</span>, <span class="string">&#x27;msg&#x27;</span>: <span class="string">&#x27;dealFile 保存原图:%s失败: %s&#x27;</span> % (filePath, e)&#125;</span><br><span class="line">            <span class="keyword">return</span> &#123;<span class="string">&#x27;status&#x27;</span>: <span class="number">200</span>, <span class="string">&#x27;msg&#x27;</span>: outFilePath&#125;</span><br><span class="line">        offLeft = imgWidth - logoWidth</span><br><span class="line">        <span class="keyword">if</span> offX <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            offLeft += offX</span><br><span class="line">        offTop = imgHeight - logoHeight</span><br><span class="line">        <span class="keyword">if</span> offY <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            offTop += offY</span><br><span class="line">        <span class="keyword">if</span> fileType == <span class="string">&#x27;.gif&#x27;</span>:</span><br><span class="line">            sequence = []</span><br><span class="line">            <span class="comment"># 创建一个迭代器实例，让用户循环访问序列中的所有帧图像。</span></span><br><span class="line">            <span class="keyword">for</span> f <span class="keyword">in</span> ImageSequence.Iterator(imgOrign):</span><br><span class="line">                <span class="comment"># if len(sequence) % 2 == 0:</span></span><br><span class="line">                <span class="comment">#     offX=random.random()</span></span><br><span class="line">                <span class="comment">#     offY=random.random()</span></span><br><span class="line">                <span class="comment"># f.convert图片格式转换</span></span><br><span class="line">                sequence.append(<span class="variable language_">self</span>.dealImage(f.convert(), logoPixelsDict, offTop=offTop, offLeft=offLeft))</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                sequence[<span class="number">0</span>].save(<span class="string">f&#x27;%s&#x27;</span> % outFilePath, save_all=<span class="literal">True</span>, append_images=sequence[<span class="number">1</span>:])</span><br><span class="line">            <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">                <span class="keyword">return</span> &#123;<span class="string">&#x27;status&#x27;</span>: <span class="number">204</span>, <span class="string">&#x27;msg&#x27;</span>: <span class="string">&#x27;dealFile 保存gif图片:%s失败: %s&#x27;</span> % (filePath, e)&#125;</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            imgOut = <span class="variable language_">self</span>.dealImage(imgOrign, logoPixelsDict, offTop=offTop, offLeft=offLeft)</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                imgOut.save(<span class="string">f&#x27;%s&#x27;</span> % outFilePath)</span><br><span class="line">            <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">                <span class="keyword">return</span> &#123;<span class="string">&#x27;status&#x27;</span>: <span class="number">204</span>, <span class="string">&#x27;msg&#x27;</span>: <span class="string">&#x27;dealFile 保存图片:%s失败: %s&#x27;</span> % (filePath, e)&#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> imghdr.what(outFilePath) == <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">return</span> &#123;<span class="string">&#x27;status&#x27;</span>: <span class="number">204</span>, <span class="string">&#x27;msg&#x27;</span>: <span class="string">&#x27;无法获取文件类型，文件可能已损坏:%s&#x27;</span> % outFilePath&#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> &#123;<span class="string">&#x27;status&#x27;</span>: <span class="number">200</span>, <span class="string">&#x27;msg&#x27;</span>: outFilePath&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">dealDirImage</span>(<span class="params">self, imageDir, outFilePath=<span class="string">&#x27;&#x27;</span>, logoPath=<span class="literal">None</span>, offX=-<span class="number">5</span>, offY=-<span class="number">5</span></span>):</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        处理文件夹内的所有图片</span></span><br><span class="line"><span class="string">        :param imageDir: 图片文件夹</span></span><br><span class="line"><span class="string">        :param outFilePath: 输出文件</span></span><br><span class="line"><span class="string">        :param logoPath: logo图片路径</span></span><br><span class="line"><span class="string">        :return:</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line">        logoRes = <span class="variable language_">self</span>.dealImagePixels()</span><br><span class="line">        <span class="keyword">if</span> logoRes.get(<span class="string">&#x27;status&#x27;</span>, <span class="number">0</span>) == <span class="number">204</span>:</span><br><span class="line">            <span class="keyword">return</span> logoRes</span><br><span class="line">        logoDict = logoRes.get(<span class="string">&#x27;msg&#x27;</span>, &#123;&#125;)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> logoDict:</span><br><span class="line">            <span class="keyword">return</span> &#123;<span class="string">&#x27;status&#x27;</span>: <span class="number">204</span>, <span class="string">&#x27;msg&#x27;</span>: <span class="string">&#x27;dealDirImage 获取logo图片失败:%s&#x27;</span> % imageDir&#125;</span><br><span class="line"></span><br><span class="line">        picFiles = [os.path.join(imageDir, fn) <span class="keyword">for</span> fn <span class="keyword">in</span> os.listdir(imageDir)]</span><br><span class="line">        picDict = &#123;&#125;</span><br><span class="line">        <span class="keyword">for</span> filePath <span class="keyword">in</span> picFiles:</span><br><span class="line">            res = <span class="variable language_">self</span>.dealFile(filePath, outFilePath, logoDict, offX=offX, offY=offY)</span><br><span class="line">            <span class="keyword">if</span> res.get(<span class="string">&#x27;status&#x27;</span>, <span class="number">0</span>) == <span class="number">204</span>:</span><br><span class="line">                common.util_log().errorLog(res.get(<span class="string">&#x27;msg&#x27;</span>))</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            picDict[filePath] = res.get(<span class="string">&#x27;msg&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> picDict</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">randomValue</span>(<span class="params">length, onlyNum=<span class="literal">None</span></span>):</span><br><span class="line">        <span class="keyword">import</span> random</span><br><span class="line">        <span class="keyword">if</span> onlyNum:</span><br><span class="line">            result = random.randint(<span class="number">0</span>, <span class="built_in">pow</span>(<span class="number">10</span>, length - <span class="number">1</span>))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            result = <span class="string">&#x27;&#x27;</span></span><br><span class="line">            chars = <span class="string">&#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghijklmnopqrstuvwxyz&#x27;</span></span><br><span class="line">            <span class="built_in">max</span> = <span class="built_in">len</span>(chars) - <span class="number">1</span></span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, length - <span class="number">1</span>):</span><br><span class="line">                result = result + <span class="built_in">str</span>(chars[random.randint(<span class="number">0</span>, <span class="built_in">max</span>)])</span><br><span class="line">    </span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">myMD5</span>(<span class="params">  _<span class="built_in">str</span> </span>):</span><br><span class="line">        m1 = hashlib.md5()</span><br><span class="line">        m1.update(_<span class="built_in">str</span>.encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">        <span class="comment"># print(m1.hexdigest() + &#x27;===md5(&#x27; + _str + &#x27;)&#x27;)</span></span><br><span class="line">        <span class="keyword">return</span> m1.hexdigest()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> python3 </category>
          
          <category> 图片 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 图片 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python安装文档</title>
      <link href="/posts/ae9b3c91.html"/>
      <url>/posts/ae9b3c91.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;<br>一、安装依赖</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ yum -y install zlib zlib-devel \</span><br><span class="line">  bzip2 bzip2-devel \</span><br><span class="line">  ncurses ncurses-devel \</span><br><span class="line">  readline readline-devel \</span><br><span class="line">  openssl openssl-devel \</span><br><span class="line">  openssl-static \</span><br><span class="line">  xz lzma xz-devel \</span><br><span class="line">  sqlite sqlite-devel \</span><br><span class="line">  gdbm gdbm-devel \</span><br><span class="line">  tk tk-devel \</span><br><span class="line">  libffi libffi-devel \</span><br><span class="line">  gcc make</span><br></pre></td></tr></table></figure><p>二、下载文件解压文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ wget https://www.python.org/ftp/python/3.6.5/Python-3.6.5.tgz</span><br><span class="line">$ tar zxvf Python3.6.5</span><br></pre></td></tr></table></figure><p>三、编译</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ ./configure --prefix=/usr/local/webserver/python3.6.5/ --enable-shared CFLAGS=-fPIC</span><br><span class="line">$ make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 建立链接</span></span><br><span class="line">$ <span class="built_in">ln</span> -s /path/python3.6.5/bin/python3 /usr/bin/python3</span><br><span class="line">$ <span class="built_in">ln</span> -s /path/python3.6.5/bin/pip3 /usr/bin/pip3</span><br></pre></td></tr></table></figure><p>四、报错处理</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># python3: error while loading shared libraries: libpython3.6m.so.1.0: cannot open shared object file: No such file or directory</span></span><br><span class="line">$ <span class="built_in">cp</span> libpython3.6m.so.1.0 /usr/lib/</span><br><span class="line">$ <span class="built_in">cp</span> libpython3.6m.so.1.0 /usr/lib64/ </span><br><span class="line"></span><br><span class="line"><span class="comment"># 未安装sqlite, 需要安装后重新编译</span></span><br><span class="line">$ yum install sqlite-devel</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> python </category>
          
          <category> 安装文档 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安装文档 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iptables</title>
      <link href="/posts/736b1750.html"/>
      <url>/posts/736b1750.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 关闭防火墙并且禁止启动</span></span><br><span class="line">$ systemctl stop firewalld.service</span><br><span class="line">$ systemctl <span class="built_in">disable</span> firewalld.service</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装iptables</span></span><br><span class="line">$ yum install -y iptables iptables-services</span><br><span class="line"></span><br><span class="line"><span class="comment"># 常见封ipcommand：</span></span><br><span class="line">$ iptables -A INPUT -s 123.45.67.89 -j DROP </span><br><span class="line"><span class="comment"># 封掉单个IP地址#屏蔽全部段（A类地址）即从192.0.0.1到192.255.255.254，则增加以下规则。</span></span><br><span class="line">$ iptables -I INPUT -s 192.0.0.0/8 -j DROP</span><br><span class="line"><span class="comment"># 封IP段（B类地址）即从192.168.0.1到192.168.255.254，则增加以下规则。</span></span><br><span class="line">$ iptables -I INPUT -s 192.168.0.0/16 -j DROP</span><br><span class="line"><span class="comment"># 封IP段（C类地址）即从192.168.200.1到192.168.200.254，则增加以下规则。</span></span><br><span class="line">$ iptables -I INPUT -s 192.168.200.0/24 -j DROP</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文件传输</title>
      <link href="/posts/e7dd4cd0.html"/>
      <url>/posts/e7dd4cd0.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><p>一、scp</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 传输文件</span></span><br><span class="line">$ scp local_file remote_username@remote_ip:remote_folder</span><br><span class="line"><span class="comment"># 传输文件夹</span></span><br><span class="line">$ scp -r local_folder remote_username@remote_ip:remote_folder </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> linux </category>
          
          <category> 文件传输 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>chrome headless模拟浏览器</title>
      <link href="/posts/6ccdd453.html"/>
      <url>/posts/6ccdd453.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">在scrapy中使用chrome headless方式模拟浏览器采集</span></span><br><span class="line"><span class="string">需要在setting中添加中间件</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">from</span> scrapy.http <span class="keyword">import</span> HtmlResponse</span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.chrome.options <span class="keyword">import</span> Options</span><br><span class="line"><span class="keyword">from</span> selenium.common.exceptions <span class="keyword">import</span> TimeoutException</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ChromeHeadless</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        配置(目前只支持windows, linux后续补充)</span></span><br><span class="line"><span class="string">        chromedriver下载 https://chromedriver.storage.googleapis.com/2.45/chromedriver_win32.zip</span></span><br><span class="line"><span class="string">        将下载好的文件放置于chrome同级目录下</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line">        chrome_options = Options()</span><br><span class="line">        chrome_options.add_argument(<span class="string">&#x27;--headless&#x27;</span>)</span><br><span class="line">        <span class="variable language_">self</span>.driver = webdriver.Chrome(</span><br><span class="line">            executable_path=(<span class="string">r&#x27;C:\Program Files (x86)\Google\Chrome\Application\chromedriver.exe&#x27;</span>),</span><br><span class="line">            chrome_options=chrome_options)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__del__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="variable language_">self</span>.driver.close()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">process_request</span>(<span class="params">self,request,spider</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;chrome drive start&#x27;</span>)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="comment"># 请求页面</span></span><br><span class="line">            <span class="variable language_">self</span>.driver.get(request.url)</span><br><span class="line">            <span class="comment"># 由于存在js动态加载数据, 等待js执行完成时间根据具体情况设置</span></span><br><span class="line">            time.sleep(<span class="number">3</span>)</span><br><span class="line">            <span class="comment"># 将数据(self.driver.page_source) return 回scrapy</span></span><br><span class="line">            <span class="keyword">return</span> HtmlResponse(url=request.url, body=<span class="variable language_">self</span>.driver.page_source, request=request, encoding=<span class="string">&#x27;utf-8&#x27;</span>,</span><br><span class="line">                                status=<span class="number">200</span>)</span><br><span class="line">        <span class="keyword">except</span> TimeoutException:</span><br><span class="line">            <span class="keyword">return</span> HtmlResponse(url=request.url, request=request, encoding=<span class="string">&#x27;utf-8&#x27;</span>, status=<span class="number">500</span>)</span><br><span class="line">        <span class="keyword">finally</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;chrome drive end&#x27;</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> python </category>
          
          <category> 爬虫 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>scrapy安装</title>
      <link href="/posts/2bf5ea92.html"/>
      <url>/posts/2bf5ea92.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;<br>一、安装</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>pip install scrapy==version</span><br><span class="line"><span class="comment"># windows下提示cl.exe停止活动,在以下地址下载对应python版本的文件</span></span><br><span class="line"><span class="symbol">https:</span>/<span class="regexp">/www.lfd.uci.edu/</span>~gohlke/pythonlibs/<span class="comment">#twisted</span></span><br><span class="line"><span class="variable">$ </span>pip install /path/twisted</span><br><span class="line"><span class="variable">$ </span>pip install scrapy</span><br></pre></td></tr></table></figure><p>二、新建scrapy项目</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 新建项目</span></span><br><span class="line">scrapy startproject zimuku</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新建demo</span></span><br><span class="line">scrapy genspider demo http://xxx.net</span><br></pre></td></tr></table></figure><p>三、调试<br>1.命令行下调试</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">scrapy crawl demo</span></span><br></pre></td></tr></table></figure><p>2.pycharm下调试<br>scrapy项目下的spiders目录下新增main.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment">#-*- coding:utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> scrapy.cmdline <span class="keyword">import</span> execute</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="comment">#添加当前项目的绝对地址</span></span><br><span class="line">sys.path.append(os.path.dirname(os.path.abspath(__file__))) </span><br><span class="line"><span class="comment">#执行 scrapy 内置的函数方法execute，  使用 crawl 爬取并调试，最后一个参数jobbole 是我的爬虫文件名</span></span><br><span class="line">execute([<span class="string">&#x27;scrapy&#x27;</span>, <span class="string">&#x27;crawl&#x27;</span>, <span class="string">&#x27;jobbole&#x27;</span>])</span><br></pre></td></tr></table></figure><p>3.运行错误处理方案</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># exceptions.ImportError: No module named win32api</span></span><br><span class="line"><span class="comment"># 安装win32</span></span><br><span class="line">$ pip install pywin32</span><br><span class="line"><span class="comment"># 或者下载url:https://sourceforge.net/projects/pywin32/files/pywin32/Build%20220/</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Could not find a version that satisfies the requirement Twisted&gt;=13.1.0 (from scrapy==1.5.1) (from versions: )</span></span><br><span class="line"><span class="comment"># No matching distribution found for Twisted&gt;=13.1.0 (from scrapy==1.5.1)</span></span><br><span class="line">$ wget https://pypi.python.org/packages/source/T/Twisted/Twisted.tar.bz2</span><br><span class="line">$ tar xjvf Twisted.tar.bz2</span><br><span class="line">$ <span class="built_in">cd</span> Twisted &amp;&amp; python set.py install</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> python </category>
          
          <category> scrapy </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安装文档 </tag>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>laravel记录</title>
      <link href="/posts/b150e0da.html"/>
      <url>/posts/b150e0da.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="nginx-访问404处理方案"><a href="#nginx-访问404处理方案" class="headerlink" title="nginx 访问404处理方案"></a>nginx 访问404处理方案</h1><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">        #try_files $uri $uri/ =<span class="number">404</span>;</span><br><span class="line">        try_files $uri $uri/ /index.php?$query_string;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="找不到-laravel-命令"><a href="#找不到-laravel-命令" class="headerlink" title="找不到 laravel 命令"></a>找不到 laravel 命令</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装 laravel 后无法找到 laravel 命令</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">composer global require laravel/installer</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">laravel安装路径为</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">export</span> PATH=<span class="string">&quot;~/.config/composer/vendor/bin:<span class="variable">$PATH</span>&quot;</span></span></span><br></pre></td></tr></table></figure><h1 id="自定义数组使用框架翻页功能-paginate"><a href="#自定义数组使用框架翻页功能-paginate" class="headerlink" title="自定义数组使用框架翻页功能(paginate)"></a>自定义数组使用框架翻页功能(paginate)</h1><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$list</span> = [[<span class="string">&#x27;a&#x27;</span> =&gt; <span class="string">&#x27;a&#x27;</span>]];</span><br><span class="line"><span class="variable">$list</span> = <span class="keyword">new</span><span class="type"></span> LengthAwarePaginator(array_slice(<span class="variable">$list</span>, <span class="variable">$offset</span>, <span class="variable">$search_limit</span>, <span class="literal">true</span>),</span><br><span class="line">                count(<span class="variable">$list</span>), <span class="variable">$search_limit</span>, <span class="variable">$page</span>,</span><br><span class="line">                [<span class="string">&#x27;path&#x27;</span> =&gt; request()-&gt;url(), <span class="string">&#x27;query&#x27;</span> =&gt; request()-&gt;query()]);</span><br><span class="line"><span class="variable">$list</span> = <span class="variable">$list</span>-&gt;toArray();</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> php </category>
          
          <category> 框架 </category>
          
          <category> laravel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
            <tag> laravel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx配置中last和break及permanent和redirect的区别</title>
      <link href="/posts/3291d211.html"/>
      <url>/posts/3291d211.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><p>一、不写last和break<br>流程就是依次执行这些rewrite</p><p>rewrite break - url重写后，直接使用当前资源，不再执行location里余下的语句，完成本次请求，地址栏url不变<br>rewrite last - url重写后，马上发起一个新的请求，再次进入server块，重试location匹配，超过10次匹配不到报500错误，地址栏url不变<br>rewrite redirect – 返回302临时重定向，地址栏显示重定向后的url，爬虫不会更新url（因为是临时）<br>rewrite permanent – 返回301永久重定向, 地址栏显示重定向后的url，爬虫更新url</p><p>二、使用last会对server标签重新发起请求<br>如果location中rewrite后是对静态资源的请求，不需要再进行其他匹配，一般要使用break或不写，直接使用当前location中的数据源，完成本次请求<br>如果location中rewrite后，还需要进行其他处理，如动态fastcgi请求(.PHP,.jsp)等，要用last继续发起新的请求<br>(根的location使用last比较好, 因为如果有.php等fastcgi请求还要继续处理)<br>使用alias指定源：必须使用last</p><p>三、last和break总结<br>1.当出现在location之外时，两者的作用是一致的没有任何差异。<br>注意一点就是，他们会跳过所有在他们之后的rewrite模块中的指令，去选择自己匹配的location</p><p>2.last和break当出现在location内部时，两者就存在了差异<br>last: 使用了last指令，rewrite后会跳出location作用域，重新开始再走一次刚刚的行为<br>break: 使用了break指令，rewrite后不会跳出location 作用域。它的生命也在这个location中终结。  </p><p>四、permanent和redirect总结<br>permanent: 大家公认的信息，永久性重定向。请求日志中的状态码为301<br>redirect：大家公认的信息，临时重定向。请求日志中的状态码为302<br>从实现功能的角度上去看，permanent 和 redirect 是一样的。不存在哪里好，哪里坏。也不存在什么性能上的问题。<br>但从SEO(或者是百度爬你的网站时)。 类似于这样的东西，会对你到底是永久性重定向还是临时重定向感兴趣。</p>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nginx echo模块</title>
      <link href="/posts/2e3e3de.html"/>
      <url>/posts/2e3e3de.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><p>一、下载echo模块</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ wget https://github.com/openresty/echo-nginx-module/archive/v0.62.tar.gz</span><br><span class="line">tar zxvf v0.62.tar.gz</span><br></pre></td></tr></table></figure><p>二、重新编译nginx，添加模块</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入nginx编译文件目录(在原本基础上添加模组)</span></span><br><span class="line">$ ./configure --add-module=/opt/echo-nginx-module-0.62</span><br><span class="line">$ make</span><br><span class="line"><span class="comment"># 如果是重新安装直接make install</span></span><br><span class="line"><span class="comment"># 如果已存在nginx, 备份原本已存在的nginx文件，再将make好的nginx覆盖</span></span><br><span class="line">$ <span class="built_in">cp</span> objs/nginx /usr/local/webserver/nginx/sbin/nginx</span><br></pre></td></tr></table></figure><p>三、使用echo，在nginx配置文件中添加</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">location</span> /hello &#123; </span><br><span class="line">    <span class="comment"># 转换为文本输出，否则会变成下载</span></span><br><span class="line">    <span class="attribute">default_type</span> <span class="string">&#x27;text/plain&#x27;</span>;</span><br><span class="line">    <span class="attribute">echo</span> <span class="string">&#x27;hello!&#x27;</span>;</span><br><span class="line">    <span class="comment"># return 200 &#x27;hello!&#x27;;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>四、关闭nginx，后启动nginx(重启无效就先关闭再启动)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">kill</span> -QUIT `<span class="built_in">cat</span> /usr/local/nginx/logs/nginx.pid` &amp;&amp; /usr/local/nginx/sbin/nginx</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nginx变量大全</title>
      <link href="/posts/d94f978b.html"/>
      <url>/posts/d94f978b.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><p>nginx内置变量<br>内置变量存放在 ngx_http_core_module 模块中，变量的命名方式和apache 服务器变量是一致的。<br>总而言之，这些变量代表着客户端请求头的内容，例如$http_user_agent, $http_cookie, 等等。下面是nginx支持的所有内置变量：</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">变量名说明</span><br><span class="line"><span class="meta"><span class="keyword">$arg</span>_&#123;name&#125;请求中的的参数名，即“?”后面的name=value形式的e.g. ?title=test 可用 $arg_title获取到</span></span><br><span class="line"><span class="meta"><span class="keyword">$args</span>请求中的参数值</span></span><br><span class="line"><span class="meta"><span class="keyword">$binary</span>_remote_addr客户端地址的二进制形式, 固定长度为4个字节</span></span><br><span class="line"><span class="meta"><span class="keyword">$body</span>_bytes_sent传输给客户端的字节数，响应头不计算在内；这个变量和Apache的mod_log_config模块中的“%B”参数保持兼容</span></span><br><span class="line"><span class="meta"><span class="keyword">$bytes</span>_sent传输给客户端的字节数 (1.3.8, 1.2.5)</span></span><br><span class="line"><span class="meta"><span class="keyword">$connection</span>TCP连接的序列号 (1.3.8, 1.2.5)</span></span><br><span class="line"><span class="meta"><span class="keyword">$connection</span>_requestsTCP连接当前的请求数量 (1.3.8, 1.2.5)</span></span><br><span class="line"><span class="meta"><span class="keyword">$content</span>_length“Content-Length” 请求头字段</span></span><br><span class="line"><span class="meta"><span class="keyword">$content</span>_type“Content-Type” 请求头字段</span></span><br><span class="line"><span class="meta"><span class="keyword">$cookie</span>_namecookie名称</span></span><br><span class="line"><span class="meta"><span class="keyword">$document</span>_root当前请求的文档根目录或别名</span></span><br><span class="line"><span class="meta"><span class="keyword">$document</span>_uri同 $uri</span></span><br><span class="line"><span class="meta"><span class="keyword">$host</span>优先级如下：HTTP请求行的主机名&gt;”HOST”请求头字段&gt;符合请求的服务器名</span></span><br><span class="line"><span class="meta"><span class="keyword">$hostname</span>主机名</span></span><br><span class="line"><span class="meta"><span class="keyword">$http</span>_&#123;name&#125;匹配任意请求头字段；变量名中的后半部分“name”可以替换成任意请求头字段，如在配置文件中需要获取http请求头：“Accept-Language”，那么将“－”替换为下划线，大写字母替换为小写，形如：$http_accept_language即可。</span></span><br><span class="line"><span class="meta"><span class="keyword">$https</span>如果开启了SSL安全模式，值为“on”，否则为空字符串。</span></span><br><span class="line"><span class="meta"><span class="keyword">$is</span>_args如果请求中有参数，值为“?”，否则为空字符串。</span></span><br><span class="line"><span class="meta"><span class="keyword">$limit</span>_rate用于设置响应的速度限制，详见 limit_rate。</span></span><br><span class="line"><span class="meta"><span class="keyword">$msec</span>当前的Unix时间戳 (1.3.9, 1.2.6)</span></span><br><span class="line"><span class="meta"><span class="keyword">$nginx</span>_versionnginx版本</span></span><br><span class="line"><span class="meta"><span class="keyword">$pid</span>工作进程的PID</span></span><br><span class="line"><span class="meta"><span class="keyword">$pipe</span>如果请求来自管道通信，值为“p”，否则为“.” (1.3.12, 1.2.7)</span></span><br><span class="line"><span class="meta"><span class="keyword">$proxy</span>_protocol_addr获取代理访问服务器的客户端地址，如果是直接访问，该值为空字符串。(1.5.12)</span></span><br><span class="line"><span class="meta"><span class="keyword">$query</span>_string同 $args</span></span><br><span class="line"><span class="meta"><span class="keyword">$realpath</span>_root当前请求的文档根目录或别名的真实路径，会将所有符号连接转换为真实路径。</span></span><br><span class="line"><span class="meta"><span class="keyword">$remote</span>_addr客户端地址</span></span><br><span class="line"><span class="meta"><span class="keyword">$remote</span>_port客户端端口</span></span><br><span class="line"><span class="meta"><span class="keyword">$remote</span>_user用于HTTP基础认证服务的用户名</span></span><br><span class="line"><span class="meta"><span class="keyword">$request</span>代表客户端的请求地址</span></span><br><span class="line"><span class="meta"><span class="keyword">$request</span>_body客户端的请求主体,此变量可在location中使用，将请求主体通过proxy_pass, fastcgi_pass, uwsgi_pass, 和 scgi_pass传递给下一级的代理服务器。</span></span><br><span class="line"><span class="meta"><span class="keyword">$request</span>_body_file将客户端请求主体保存在临时文件中。文件处理结束后，此文件需删除。如果需要之一开启此功能，需要设置client_body_in_file_only。如果将次文件传递给后端的代理服务器，需要禁用request body，即设置proxy_pass_request_body off，fastcgi_pass_request_body off, uwsgi_pass_request_body off, or scgi_pass_request_body off 。</span></span><br><span class="line"><span class="meta"><span class="keyword">$request</span>_completion如果请求成功，值为”OK”，如果请求未完成或者请求不是一个范围请求的最后一部分，则为空。</span></span><br><span class="line"><span class="meta"><span class="keyword">$request</span>_filename当前连接请求的文件路径，由root或alias指令与URI请求生成。</span></span><br><span class="line"><span class="meta"><span class="keyword">$request</span>_length请求的长度 (包括请求的地址, http请求头和请求主体) (1.3.12, 1.2.7)</span></span><br><span class="line"><span class="meta"><span class="keyword">$request</span>_methodHTTP请求方法，通常为“GET”或“POST”</span></span><br><span class="line"><span class="meta"><span class="keyword">$request</span>_time处理客户端请求使用的时间 (1.3.9, 1.2.6); 从读取客户端的第一个字节开始计时。</span></span><br><span class="line"><span class="meta"><span class="keyword">$request</span>_uri这个变量等于包含一些客户端请求参数的原始URI，它无法修改，请查看$uri更改或重写URI，不包含主机名，例如：/cnphp/test.php?arg=freemouse。</span></span><br><span class="line"><span class="meta"><span class="keyword">$scheme</span>请求使用的Web协议, “http” 或 “https”</span></span><br><span class="line"><span class="meta"><span class="keyword">$sent</span>_http_&#123;name&#125;可以设置任意http响应头字段； 变量名中的后半部分“name”可以替换成任意响应头字段，如需要设置响应头Content-length，那么将“－”替换为下划线，大写字母替换为小写，形如：$sent_http_content_length 4096即可。</span></span><br><span class="line"><span class="meta"><span class="keyword">$server</span>_addr服务器端地址，需要注意的是：为了避免访问linux系统内核，应将ip地址提前设置在配置文件中。</span></span><br><span class="line"><span class="meta"><span class="keyword">$server</span>_name服务器名，www.cnphp.info</span></span><br><span class="line"><span class="meta"><span class="keyword">$server</span>_port服务器端口</span></span><br><span class="line"><span class="meta"><span class="keyword">$server</span>_protocol服务器的HTTP版本, 通常为 “HTTP/1.0” 或 “HTTP/1.1”</span></span><br><span class="line"><span class="meta"><span class="keyword">$status</span>HTTP响应代码 (1.3.2, 1.2.2)</span></span><br><span class="line"><span class="meta"><span class="keyword">$tcpinfo</span>_rtt, $tcpinfo_rttvar, $tcpinfo_snd_cwnd, $tcpinfo_rcv_space客户端TCP连接的具体信息</span></span><br><span class="line"><span class="meta"><span class="keyword">$time</span>_iso8601服务器时间的ISO 8610格式 (1.3.12, 1.2.7)</span></span><br><span class="line"><span class="meta"><span class="keyword">$time</span>_local服务器时间（LOG Format 格式） (1.3.12, 1.2.7)</span></span><br><span class="line"><span class="meta"><span class="keyword">$uri</span>请求中的当前URI(不带请求参数，参数在$args中)，可以不同于浏览器传递的$request_uri的值，它可以通过内部重定向，或者使用index指令进行修改，$uri不包含主机名，如/foo/bar.html。</span></span><br></pre></td></tr></table></figure><p><a href="http://yzone.net/blog/52">转自: nginx内置变量大全</a></p>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>日常</title>
      <link href="/posts/2ec3464e.html"/>
      <url>/posts/2ec3464e.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">chrome网页截图</span><br><span class="line"><span class="symbol">f12</span>/检查 -&gt; 选择需要截图的 DOM -&gt; cmd+shift+p -&gt; capture node screenshot</span><br><span class="line"></span><br><span class="line">百度搜索</span><br><span class="line">排除关键词 -keyword</span><br><span class="line">搜索指定关键词 --keyword</span><br><span class="line"></span><br><span class="line">windows10关闭hyper(管理员下执行)</span><br><span class="line">bcdedit /set hypervisorlaunchtype off</span><br><span class="line"></span><br><span class="line">excel</span><br><span class="line">=<span class="built_in">VLOOKUP</span> (要查找的项、要查找位置、区域中包含要返回的值的列号、返回近似匹配或精确匹配 - 指示为 <span class="number">1</span>/<span class="built_in">TRUE</span> 或 <span class="number">0</span>/<span class="built_in">FALSE</span>) 。</span><br><span class="line">=<span class="built_in">VLOOKUP</span>(<span class="symbol">A3</span>,Sheet1!<span class="symbol">A:B</span>,<span class="number">2</span>,<span class="built_in">FALSE</span>) 查找出Bsheet中和Asheet同名数据</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 其他 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 其他 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>js 全局替换使用变量</title>
      <link href="/posts/f03fd67.html"/>
      <url>/posts/f03fd67.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><p>Js 替换一个多行文本的关键字<br>正常，没有变量：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> string = aaabbbcccc;</span><br><span class="line"><span class="comment">//把 a 替换成 b：</span></span><br><span class="line">string.<span class="title function_">replace</span>(<span class="string">&quot;a&quot;</span>,<span class="string">&quot;b&quot;</span>);</span><br></pre></td></tr></table></figure><p>以上只能替换第一个匹配的，要全文匹配应该用正则表达式：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">string.<span class="title function_">replace</span>(<span class="regexp">/a/g</span>,<span class="string">&quot;b&quot;</span>);</span><br><span class="line"><span class="comment">//正则加个参数 g ，表示全文匹配。</span></span><br></pre></td></tr></table></figure><p>但现在，我要替换的不是 a 这个字符了，而是从外面传进来的一个变量：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> key;</span><br><span class="line">string.<span class="title function_">replace</span>(key,<span class="string">&quot;b&quot;</span>);</span><br></pre></td></tr></table></figure><p>这只能替换第一个匹配的，要全文匹配就遇到难题了：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">string.<span class="title function_">replace</span>(<span class="regexp">/key/g</span>,<span class="string">&quot;b&quot;</span>);</span><br></pre></td></tr></table></figure><p>这样写是不行的，但是变量 key 并传不到正则里面去。<br>但是后来发现官方文档中有对这个函数的介绍：<br>定义和用法 replace() 方法用于在字符串中用一些字符替换另一些字符，或替换一个与正则表达式匹配的子串。<br>语法：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 描述：必需。规定子字符串或要替换的模式的 RegExp 对象。</span></span><br><span class="line"><span class="comment">// 请注意，如果该值是一个字符串，则将它作为要检索的直接量文本模式，而不是首先被转换为 RegExp 对象。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 参数：replacement</span></span><br><span class="line"><span class="comment">// 描述：必需。一个字符串值。规定了替换文本或生成替换文本的函数。</span></span><br><span class="line">stringObject.<span class="title function_">replace</span>(regexp/substr,replacement)：regexp/substr</span><br></pre></td></tr></table></figure><p>这里，利用 JS 的 RegExp 对象，将 g 参数单拿了出来，同时，正则的内容可以用变量来代替了！！！</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">string.<span class="title function_">replace</span>(<span class="keyword">new</span> <span class="title class_">RegExp</span>(key,<span class="string">&#x27;g&#x27;</span>),<span class="string">&quot;b&quot;</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> js </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>权限获取与恢复</title>
      <link href="/posts/6be05d04.html"/>
      <url>/posts/6be05d04.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">复制另外一台机器的权限过来</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">得到 / 下的所有文件和目录的权限表文件.</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">getfacl -R / &gt; /tmp/permission.bak</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> /</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">恢复 / 下的所有文件和目录的权限</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">setfacl --restore=/tmp/permission.bak</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>复制git改动文件到新目录</title>
      <link href="/posts/5f109216.html"/>
      <url>/posts/5f109216.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">/bin/bash</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">根据git diff 获取两个分支不同的文件, 并将差异文件按照目录结构复制指定目录下</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">需要手动删除<span class="built_in">cp</span>文件夹下的文件，执行<span class="built_in">rm</span>命令风险太大</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">项目根目录</span></span><br><span class="line">rootDir=&quot;$(dirname $(dirname &quot;$PWD&quot;))&quot;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">默认在项目根目录同级下创建文件</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">如果有传参数进来，则使用传进来的字符串当作文件夹目录：gitDiffCp <span class="string">&#x27;/data/http/917cp&#x27;</span></span></span><br><span class="line">if [ $1 ]</span><br><span class="line">then</span><br><span class="line">  cpDir=$1</span><br><span class="line">else</span><br><span class="line">  cpDir=&quot;$(dirname $rootDir)/cp&quot;</span><br><span class="line">fi</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">如果目录不存在，则创建</span></span><br><span class="line">if [ ! -d $cpDir ]</span><br><span class="line">then</span><br><span class="line">  echo &quot;创建目录:$cpDir&quot;</span><br><span class="line">  mkdir -p $cpDir</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">echo &quot;开始执行复制需要上传到线上的文件到目录&quot;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">本地分支和线上分支不一致的文件</span></span><br><span class="line">fileList=$(git diff master origin/master --name-only)</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">读取列表，将文件复制到目标文件夹下，保持原本的结构不变</span></span><br><span class="line">fileNum=0</span><br><span class="line">for file in $fileList</span><br><span class="line">do</span><br><span class="line">  cpPath=&quot;$cpDir/$(dirname $file)&quot;</span><br><span class="line">  if [ ! -d $cpPath ]</span><br><span class="line">  then</span><br><span class="line">    mkdir -p $cpPath</span><br><span class="line">  fi</span><br><span class="line"></span><br><span class="line">  fileStr=&quot;$rootDir/$file&quot;</span><br><span class="line">  echo &quot;复制文件$fileStr==&gt;$cpDir/$file&quot;</span><br><span class="line"></span><br><span class="line">  if [ -f $fileStr ]</span><br><span class="line">  then</span><br><span class="line">    cp $fileStr &quot;$cpDir/$file&quot;</span><br><span class="line">    fileNum=$(( $fileNum+1 ))</span><br><span class="line">  fi</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">echo &quot;复制文件完成: 文件数$fileNum&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> linux </category>
          
          <category> shell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>rsync安装配置</title>
      <link href="/posts/86614bdd.html"/>
      <url>/posts/86614bdd.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><p>安装rsync同步配置,安装rsync同步安装,rsync安装参考:</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="regexp">//</span>zyan.cc<span class="regexp">/post/</span><span class="number">379</span>/<span class="comment">#entrymore</span></span><br><span class="line">http:<span class="regexp">//</span>sookk8.blog.<span class="number">51</span>cto.com<span class="regexp">/455855/</span><span class="number">328076</span>/</span><br><span class="line">http:<span class="regexp">//</span>www.cnblogs.com<span class="regexp">/itech/</span>archive<span class="regexp">/2009/</span><span class="number">08</span><span class="regexp">/10/</span><span class="number">1542945</span>.html</span><br></pre></td></tr></table></figure><p>下载:</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">https:</span>//rsync.samba<span class="meta">.org</span>/download.html</span><br><span class="line"><span class="symbol">https:</span>//download.samba<span class="meta">.org</span>/pub/rsync/</span><br></pre></td></tr></table></figure><p>服务器端安装:</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">tar zxvf rsync-3.1.2.tar.gz</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> rsync-3.1.2</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">./configure --prefix=/usr/local/webserver/rsync</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">make</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">make install</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">mkdir</span> /data/logs/</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">touch</span> /usr/local/webserver/rsync/rsyncd.conf</span></span><br></pre></td></tr></table></figure><p>主服务器:192.168.1.212<br>备份服务器:192.168.1.213</p><p>一、主服务器<br>新增修改主配置文件, 复制粘贴灰色区域如下内容    </p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">vi /usr/local/webserver/rsync/rsyncd.conf</span></span><br></pre></td></tr></table></figure><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">### 全局参数 ###</span></span><br><span class="line"><span class="attribute">port</span>=873</span><br><span class="line"><span class="attribute">uid</span>=root</span><br><span class="line"><span class="attribute">gid</span>=root</span><br><span class="line">motd <span class="attribute">file</span>=/usr/local/webserver/rsync/rsyncd.motd</span><br><span class="line">log <span class="attribute">file</span>=/data/logs/rsyncd.log</span><br><span class="line">pid <span class="attribute">file</span>=/var/run/rsyncd.pid</span><br><span class="line"><span class="comment">###</span></span><br><span class="line">[data_917]</span><br><span class="line"><span class="attribute">path</span>=/data/http/917.com/</span><br><span class="line">ignore errors</span><br><span class="line">read <span class="attribute">only</span>=<span class="literal">no</span></span><br><span class="line">hosts allow = 192.168.1.213</span><br><span class="line">hosts deny = 0.0.0.0/32</span><br><span class="line"><span class="comment">###</span></span><br><span class="line">[data_pachong]</span><br><span class="line"><span class="attribute">path</span>=/data/http/917.com/</span><br><span class="line">ignore errors</span><br><span class="line">read <span class="attribute">only</span>=<span class="literal">no</span></span><br><span class="line">hosts allow = 192.168.1.213</span><br><span class="line">hosts deny = 0.0.0.0/32</span><br></pre></td></tr></table></figure><p>创建修改rysnc服务器信息, 复制粘贴灰色区域如下内容</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">echo</span> <span class="string">&#x27;welcome use rsync service&#x27;</span> &gt;&gt; /usr/local/webserver/rsync/rsyncd.motd</span></span><br></pre></td></tr></table></figure><p>启动服务</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">/usr/local/webserver/rsync/bin/rsync --daemon --config=/usr/local/webserver/rsync/rsyncd.conf</span></span><br></pre></td></tr></table></figure><p>  <br>二、备用服务器<br>安装和主服务器一样, 无需配置</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">/usr/local/webserver/rsync/bin/rsync -vzrtopg --progress --delete root@192.168.1.212::data_web /data/http/web</span></span><br></pre></td></tr></table></figure><p>定时脚本配置</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">vi /var/spool/cron/root</span></span><br><span class="line">*/30 * * * * /usr/local/webserver/rsync/bin/rsync -vzrtopg --progress --delete root@192.168.1.212::data_web /data/http/web</span><br></pre></td></tr></table></figure><p>三、语法解析</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">在配置完rsync服务器后，就可以从客户端发出rsync命令来实现各种同步的操作。rsync有很多功能选项，下面就对介绍一下常用的选项：</span><br><span class="line"></span><br><span class="line">rsync的命令格式可以为：</span><br><span class="line"></span><br><span class="line"><span class="number">1</span>. rsync <span class="selector-attr">[OPTION]</span>... SRC <span class="selector-attr">[SRC]</span>... <span class="selector-attr">[USER@]</span>HOST:DEST</span><br><span class="line"><span class="number">2</span>. rsync <span class="selector-attr">[OPTION]</span>... <span class="selector-attr">[USER@]</span>HOST:SRC DEST</span><br><span class="line"><span class="number">3</span>. rsync <span class="selector-attr">[OPTION]</span>... SRC <span class="selector-attr">[SRC]</span>... DEST</span><br><span class="line"><span class="number">4</span>. rsync <span class="selector-attr">[OPTION]</span>... <span class="selector-attr">[USER@]</span>HOST::SRC <span class="selector-attr">[DEST]</span></span><br><span class="line"><span class="number">5</span>. rsync <span class="selector-attr">[OPTION]</span>... SRC <span class="selector-attr">[SRC]</span>... <span class="selector-attr">[USER@]</span>HOST::DEST</span><br><span class="line"><span class="number">6</span>. rsync <span class="selector-attr">[OPTION]</span>... rsync:<span class="comment">//[USER@]HOST[:PORT]/SRC [DEST]</span></span><br><span class="line"></span><br><span class="line">rsync有六种不同的工作模式：</span><br><span class="line"></span><br><span class="line"><span class="number">1</span>. 拷贝本地文件；当SRC和DES路径信息都不包含有单个冒号<span class="string">&quot;:&quot;</span>分隔符时就启动这种工作模式。</span><br><span class="line"><span class="number">2</span>.使用一个远程shell程序（如rsh、ssh）来实现将本地机器的内容拷贝到远程机器。当DST路径地址包含单个冒号<span class="string">&quot;:&quot;</span>分隔符时启动该模式。</span><br><span class="line"><span class="number">3</span>.使用一个远程shell程序（如rsh、ssh）来实现将远程机器的内容拷贝到本地机器。当SRC地址路径包含单个冒号<span class="string">&quot;:&quot;</span>分隔符时启动该模式。</span><br><span class="line"><span class="number">4</span>. 从远程rsync服务器中拷贝文件到本地机。当SRC路径信息包含<span class="string">&quot;::&quot;</span>分隔符时启动该模式。</span><br><span class="line"><span class="number">5</span>. 从本地机器拷贝文件到远程rsync服务器中。当DST路径信息包含<span class="string">&quot;::&quot;</span>分隔符时启动该模式。</span><br><span class="line"><span class="number">6</span>. 列远程机的文件列表。这类似于rsync传输，不过只要在命令中省略掉本地机信息即可。</span><br><span class="line">-<span class="selector-tag">a</span> 以archive模式操作、复制目录、符号连接 相当于-rlptgoD</span><br><span class="line"></span><br><span class="line">rsync中的参数</span><br><span class="line"></span><br><span class="line">-<span class="attribute">r</span> 是递归</span><br><span class="line">-l 是链接文件，意思是拷贝链接文件；-<span class="selector-tag">p</span> 表示保持文件原有权限；-t 保持文件原有时间；-<span class="selector-tag">g</span> 保持文件原有用户组；-o 保持文件原有属主；-D 相当于块设备文件；</span><br><span class="line">-z 传输时压缩；</span><br><span class="line">-P 传输进度；</span><br><span class="line">-v 传输时的进度等信息，和-P有点关系，自己试试。可以看文档；</span><br><span class="line">-e ssh的参数建立起加密的连接。</span><br><span class="line">-u只进行更新，防止本地新文件被重写，注意两者机器的时钟的同时</span><br><span class="line"><span class="attr">--progress</span>是指显示出详细的进度情况</span><br><span class="line"><span class="attr">--delete</span>是指如果服务器端删除了这一文件，那么客户端也相应把文件删除，保持真正的一致</span><br><span class="line"><span class="attr">--password-file</span>=/password/path/file来指定密码文件，这样就可以在脚本中使用而无需交互式地输入验证密码了，这里需要注意的是这份密码文件权限属性要设得只有属主可读。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> linux </category>
          
          <category> rsync </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>主主同步</title>
      <link href="/posts/c3d98a2c.html"/>
      <url>/posts/c3d98a2c.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="MYSQL主主同步"><a href="#MYSQL主主同步" class="headerlink" title="MYSQL主主同步"></a>MYSQL主主同步</h1><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># 主服务器 192.168.1.212 master</span></span><br><span class="line"><span class="meta"># 从服务器 192.168.1.213 slave</span></span><br></pre></td></tr></table></figure><br><h1 id="主服务器配置"><a href="#主服务器配置" class="headerlink" title="主服务器配置"></a>主服务器配置</h1><h2 id="一、配置my-cnf"><a href="#一、配置my-cnf" class="headerlink" title="一、配置my.cnf"></a>一、配置my.cnf</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">vim my.cnf</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">log-bin=mysql-bin-master</span><br><span class="line">server-id=212</span><br><span class="line">binlog-ignore-db = mysql</span><br><span class="line">#把从库的写操作记录到binlog中</span><br><span class="line">log-slave-updates = 1</span><br><span class="line"></span><br><span class="line"># 处理主键冲突</span><br><span class="line">auto-increment-increment = 2</span><br><span class="line">auto-increment-offset = 1</span><br><span class="line"></span><br><span class="line"># 开启gtid模式</span><br><span class="line"># 默认配置非gtid模式，如需开启gtid模式，需做以下修改</span><br><span class="line"># 命令中 MASTER_LOG_FILE=&#x27;mysql-bin.000255&#x27;,MASTER_LOG_POS=120 改为 MASTER_AUTO_POSITION=1;</span><br><span class="line">gtid_mode = on</span><br><span class="line"># 一致性</span><br><span class="line">enforce_gtid_consistency = 1</span><br></pre></td></tr></table></figure><h2 id="二、重启mysql"><a href="#二、重启mysql" class="headerlink" title="二、重启mysql"></a>二、重启mysql</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">kill</span> -USR2 `<span class="built_in">cat</span> /data/mysqlData/mysql.pid`</span></span><br></pre></td></tr></table></figure><h2 id="三、创建账号并且授权"><a href="#三、创建账号并且授权" class="headerlink" title="三、创建账号并且授权"></a>三、创建账号并且授权</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt;grant replication slave on  to &#x27;tongbu&#x27;@&#x27;192.168.1.213&#x27; identified by &#x27;123456&#x27;;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># mysql8</span><br><span class="line">mysql&gt; CREATE USER &#x27;tongbu&#x27;@&#x27;192.168.1.213&#x27; IDENTIFIED BY &#x27;123456&#x27;;</span><br><span class="line">mysql&gt;GRANT SELECT, INSERT, UPDATE, DELETE, CREATE, RELOAD, PROCESS, REFERENCES, INDEX, ALTER, SHOW DATABASES, SUPER, CREATE TEMPORARY TABLES, LOCK TABLES, EXECUTE, REPLICATION SLAVE, REPLICATION CLIENT, CREATE VIEW, SHOW VIEW, CREATE ROUTINE, ALTER ROUTINE, CREATE USER, EVENT, TRIGGER, CREATE ROLE, DROP ROLE ON *.* TO `tongbu`@`192.168.1.213` WITH GRANT OPTION;</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><h2 id="四、查看binlog文件以及pos"><a href="#四、查看binlog文件以及pos" class="headerlink" title="四、查看binlog文件以及pos"></a>四、查看binlog文件以及pos</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt;show master status;</span><br></pre></td></tr></table></figure><h2 id="五、导出数据库"><a href="#五、导出数据库" class="headerlink" title="五、导出数据库"></a>五、导出数据库</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump  -uroot -p123456 cat&gt;cat.sql</span><br></pre></td></tr></table></figure><h2 id="六、将数据库传到从服务器"><a href="#六、将数据库传到从服务器" class="headerlink" title="六、将数据库传到从服务器"></a>六、将数据库传到从服务器</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">scp cat.sql  192.168.1.213:/data</span></span><br></pre></td></tr></table></figure><h2 id="七、mysql命令行下配置slave-logfile和logpos需要在213使用show-master-status"><a href="#七、mysql命令行下配置slave-logfile和logpos需要在213使用show-master-status" class="headerlink" title="七、mysql命令行下配置slave logfile和logpos需要在213使用show master status;"></a>七、mysql命令行下配置slave logfile和logpos需要在213使用show master status;</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt;CHANGE MASTER TO MASTER_HOST=&#x27;192.168.1.213&#x27;,MASTER_USER=&#x27;tongbu&#x27;,MASTER_PASSWORD=&#x27;123456&#x27;,</span><br><span class="line">MASTER_LOG_FILE=&#x27;mysql-bin.000255&#x27;,MASTER_LOG_POS=120;</span><br><span class="line">mysql&gt;start slave;</span><br><span class="line">mysql&gt;show slave status \G;</span><br></pre></td></tr></table></figure><br><h1 id="从服务器配置"><a href="#从服务器配置" class="headerlink" title="从服务器配置"></a>从服务器配置</h1><h2 id="一、配置my-cnf-1"><a href="#一、配置my-cnf-1" class="headerlink" title="一、配置my.cnf"></a>一、配置my.cnf</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">vim my.cnf</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">log-bin=mysql-bin-master</span><br><span class="line">server-id=213</span><br><span class="line">binlog-ignore-db = mysql</span><br><span class="line">#把从库的写操作记录到binlog中</span><br><span class="line">log-slave-updates = 1</span><br><span class="line"># 处理主键冲突</span><br><span class="line"># mysql的服务器变量auto_increment_increment【增长值】和auto_increment_offset【偏移量】可以协调多主服务器复制和AUTO_INCREMENT列。</span><br><span class="line"># 并且每个变量有一个默认的(并且是最小的)值1，有一个最大值65,535。把这些变量设置为非冲突的值，例如在同 一个表插入新行时，</span><br><span class="line"># 多主服务器配置主的服务器就不会发生AUTO_INCREMENT值冲突，这里就可以解决这个问题</span><br><span class="line">auto-increment-increment = 2</span><br><span class="line">auto-increment-offset = 2</span><br><span class="line"></span><br><span class="line"># 开启gtid模式</span><br><span class="line"># 默认配置非gtid模式，如需开启gtid模式，需做以下修改</span><br><span class="line"># 命令中 MASTER_LOG_FILE=&#x27;mysql-bin.000255&#x27;,MASTER_LOG_POS=120 改为 MASTER_AUTO_POSITION=1;</span><br><span class="line">gtid_mode = on</span><br><span class="line"># 一致性</span><br><span class="line">enforce_gtid_consistency = 1</span><br></pre></td></tr></table></figure><h2 id="二、重启mysql-1"><a href="#二、重启mysql-1" class="headerlink" title="二、重启mysql"></a>二、重启mysql</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">kill</span> -USR2 `<span class="built_in">cat</span> /data/mysqlData/mysql.pid`</span></span><br></pre></td></tr></table></figure><h2 id="三、创建账号并且授权-1"><a href="#三、创建账号并且授权-1" class="headerlink" title="三、创建账号并且授权"></a>三、创建账号并且授权</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt;grant replication slave on *.* to &#x27;tongbu&#x27;@&#x27;192.168.1.212&#x27; identified by &#x27;123456&#x27;;</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><h2 id="四、查看binlog文件以及pos-1"><a href="#四、查看binlog文件以及pos-1" class="headerlink" title="四、查看binlog文件以及pos"></a>四、查看binlog文件以及pos</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt;show master status;</span><br></pre></td></tr></table></figure><h2 id="五、mysql命令行下配置slave-logfile和logpos需要在212使用show-master-status"><a href="#五、mysql命令行下配置slave-logfile和logpos需要在212使用show-master-status" class="headerlink" title="五、mysql命令行下配置slave logfile和logpos需要在212使用show master status;"></a>五、mysql命令行下配置slave logfile和logpos需要在212使用show master status;</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt;CHANGE MASTER TO MASTER_HOST=&#x27;192.168.1.212&#x27;,MASTER_USER=&#x27;tongbu&#x27;,MASTER_PASSWORD=&#x27;123456&#x27;,</span><br><span class="line">MASTER_LOG_FILE=&#x27;mysql-bin.000255&#x27;,MASTER_LOG_POS=120;</span><br></pre></td></tr></table></figure><h2 id="六、到主服务器查看状态"><a href="#六、到主服务器查看状态" class="headerlink" title="六、到主服务器查看状态"></a>六、到主服务器查看状态</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt;show processlist \G;</span><br></pre></td></tr></table></figure><h1 id="三、注意事项"><a href="#三、注意事项" class="headerlink" title="三、注意事项"></a>三、注意事项</h1><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># <span class="selector-tag">binlog_format</span>不等于<span class="selector-tag">row</span>，需要<span class="selector-tag">use</span> <span class="selector-tag">database</span>;后执行语句，才能够同步数据</span><br><span class="line"># <span class="selector-attr">[具体说明]</span>(<span class="attribute">https</span>:<span class="comment">//blog.csdn.net/weixin_33709609/article/details/89865649)</span></span><br></pre></td></tr></table></figure><h2 id="一、-跳过错误-非gtid模式"><a href="#一、-跳过错误-非gtid模式" class="headerlink" title="一、 跳过错误(非gtid模式)"></a>一、 跳过错误(非gtid模式)</h2><h3 id="1-mysql语句"><a href="#1-mysql语句" class="headerlink" title="1. mysql语句"></a>1. mysql语句</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 跳过指定数量的事务：</span><br><span class="line">mysql&gt;slave stop;</span><br><span class="line">mysql&gt;SET GLOBAL SQL_SLAVE_SKIP_COUNTER = 1        #跳过一个事务</span><br><span class="line">mysql&gt;slave start;</span><br></pre></td></tr></table></figure><h3 id="2-修改mysql的配置文件，通过slave-skip-errors参数来跳所有错误或指定类型的错误"><a href="#2-修改mysql的配置文件，通过slave-skip-errors参数来跳所有错误或指定类型的错误" class="headerlink" title="2.修改mysql的配置文件，通过slave_skip_errors参数来跳所有错误或指定类型的错误"></a>2.修改mysql的配置文件，通过slave_skip_errors参数来跳所有错误或指定类型的错误</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">vim /etc/my.cnf</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">#slave-skip-errors=1062,1053,1146 #跳过指定error no类型的错误</span><br><span class="line">#slave-skip-errors=all #跳过所有错误</span><br></pre></td></tr></table></figure><h2 id="二、跳过错误-gtid模式"><a href="#二、跳过错误-gtid模式" class="headerlink" title="二、跳过错误(gtid模式)"></a>二、跳过错误(gtid模式)</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h2 id="三、错误处理"><a href="#三、错误处理" class="headerlink" title="三、错误处理"></a>三、错误处理</h2><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 错误信息:</span></span><br><span class="line">Last_IO_Errno: <span class="number">1236</span></span><br><span class="line">Last_IO_Error: Got fatal error <span class="number">1236</span> from <span class="keyword">master</span> <span class="title">when</span> reading data from binary log: &#x27;Could not find first log file name <span class="keyword">in</span> binary log index file&#x27;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 处理方案</span></span><br><span class="line"><span class="literal">Slave</span>: mysql&gt;<span class="literal">stop</span> <span class="literal">slave</span>;</span><br><span class="line"><span class="literal">Master</span>: mysql&gt;flush logs</span><br><span class="line"><span class="literal">Master</span>: mysql&gt;show <span class="keyword">master</span> <span class="title">status</span>;</span><br><span class="line"><span class="literal">Slave</span>: mysql&gt;CHANGE <span class="keyword">MASTER</span> <span class="title">TO</span> <span class="attr">MASTER_LOG_FILE=</span>&#x27;log-bin.<span class="number">00000</span>X&#x27;, <span class="attr">MASTER_LOG_POS=</span><span class="number">106</span>;</span><br><span class="line"><span class="literal">Slave</span>: mysql&gt;<span class="literal">start</span> <span class="literal">slave</span>;</span><br><span class="line"></span><br><span class="line">错误信息:</span><br><span class="line">ERROR <span class="number">1776</span> (HY000): Parameters MASTER_LOG_FILE, MASTER_LOG_POS, RELAY_LOG_FILE <span class="keyword">and</span> RELAY_LOG_POS cannot be set when MASTER_AUTO_POSITION is active.</span><br><span class="line"></span><br><span class="line"><span class="comment"># 处理方案</span></span><br><span class="line">mysql&gt;change <span class="keyword">master</span> <span class="title">to</span> <span class="attr">master_auto_position=</span><span class="number">0</span>;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> mysql </category>
          
          <category> 主从同步 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>设计图对应font-weight</title>
      <link href="/posts/ec825a3a.html"/>
      <url>/posts/ec825a3a.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">字体粗细：‘font-weight’属性</span><br><span class="line">名称： font-weight</span><br><span class="line">取值： <span class="keyword">normal </span><span class="title">| bold |</span> <span class="keyword">bolder </span><span class="title">| lighter |</span> <span class="number">100</span> <span class="title">| 200 |</span> <span class="number">300</span> <span class="title">| 400 |</span> <span class="number">500</span> <span class="title">| 600 |</span> <span class="number">700</span> <span class="title">| 800 |</span> <span class="number">900</span></span><br><span class="line">初始： <span class="keyword">normal</span></span><br><span class="line"><span class="keyword"></span>适用于：    所有元素</span><br><span class="line">继承： 是</span><br><span class="line">百分比：    （不适用）</span><br><span class="line">媒介： 视觉</span><br><span class="line">计算值：    详见描述</span><br><span class="line">动画： -</span><br><span class="line">‘font-weight’属性执行字体中字形的重量，这取决于黑度等级或笔划粗细。</span><br><span class="line">其值的意义如下：</span><br><span class="line"><span class="number">100</span>至<span class="number">900</span></span><br><span class="line">这些有序排列中的每个值，表示至少与其起身拥有相同黑度的重量。其大致符合下列通用重量名称：</span><br><span class="line"><span class="number">100</span> - Thin</span><br><span class="line"><span class="number">200</span> - <span class="keyword">Extra </span>Light (Ultra Light)</span><br><span class="line"><span class="number">300</span> - Light</span><br><span class="line"><span class="number">400</span> - Regular (<span class="keyword">Normal、Book、Roman)</span></span><br><span class="line"><span class="keyword"></span><span class="number">500</span> - Medium</span><br><span class="line"><span class="number">600</span> - Semi <span class="keyword">Bold </span>(Demi <span class="keyword">Bold)</span></span><br><span class="line"><span class="keyword"></span><span class="number">700</span> - <span class="keyword">Bold</span></span><br><span class="line"><span class="keyword"></span><span class="number">800</span> - <span class="keyword">Extra </span><span class="keyword">Bold </span>(Ultra <span class="keyword">Bold)</span></span><br><span class="line"><span class="keyword"></span><span class="number">900</span> - <span class="keyword">Black </span>(Heavy)</span><br><span class="line"></span><br><span class="line"><span class="keyword">normal、regular与&#x27;400&#x27;相同。</span></span><br><span class="line"><span class="keyword"></span><span class="keyword">bold与&#x27;700&#x27;相同。</span></span><br><span class="line"><span class="keyword"></span><span class="keyword">bolder指定外观的重量大于继承的值。</span></span><br><span class="line"><span class="keyword"></span>lighter 指定外观的重量小于继承的值。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>windows下安装docker</title>
      <link href="/posts/2fce4b74.html"/>
      <url>/posts/2fce4b74.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="win7下使用Docker-Toolbox安装"><a href="#win7下使用Docker-Toolbox安装" class="headerlink" title="win7下使用Docker Toolbox安装"></a>win7下使用Docker Toolbox安装</h1><p>一、国内镜像源:  </p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">http:</span><span class="comment">//get.daocloud.io/  </span></span><br><span class="line"><span class="symbol">http:</span><span class="comment">//mirrors.aliyun.com/docker-toolbox/</span></span><br></pre></td></tr></table></figure><br><p>二、执行Docker Toolbox安装<br>三、在命令行(cmd)下执行命令<br>参数说明:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># --virtualbox-boot2docker-url: 指定boot2docker路径</span></span><br><span class="line"><span class="comment"># --engine-registry-mirror: 指定加速地址</span></span><br><span class="line"><span class="comment"># default virtualBox命名</span></span><br></pre></td></tr></table></figure><p>1.一种方式是在创建的时候直接设置加速地址</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在cmd中执行创建命令</span></span><br><span class="line">$ docker-machine create --driver virtualbox --virtualbox-boot2docker-url=/Users/Administrator/.docker/machine/cache/boot2docker.iso --engine-registry-mirror=http://f1361db2.m.daocloud.io default</span><br><span class="line"></span><br></pre></td></tr></table></figure><br><p>2.另外一种方式是先创建virtualBox, 然后设置加速地址</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在cmd创建virtualBox</span></span><br><span class="line">$ docker-machine create --driver virtualbox --virtualbox-boot2docker-url=/Users/Administrator/.docker/machine/cache/boot2docker.iso default</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入virtualBox中</span></span><br><span class="line">$ docker-machine ssh default</span><br><span class="line"><span class="comment"># 在进入virtualBox后执行命令, 将加速地址添加到文件中 --label provider=virtualbox 的下一行</span></span><br><span class="line">$ <span class="built_in">sudo</span> sed -i <span class="string">&quot;s|EXTRA_ARGS=&#x27;|EXTRA_ARGS=&#x27;--registry-mirror=加速地址 |g&quot;</span> /var/lib/boot2docker/profile</span><br><span class="line"><span class="comment"># 或者sudo vim /var/lib/boot2docker/profile </span></span><br><span class="line"><span class="comment"># 在–label provider=virtualbox的下一行添加--registry-mirror 加速器地址(https://dockerhub.azk8s.cn https://reg-mirror.qiniu.com)</span></span><br><span class="line"><span class="comment"># 退出virtualBox</span></span><br><span class="line">$ <span class="built_in">exit</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 退出后, 回到cmd命令界面, 执行docker重启操作</span></span><br><span class="line">$ docker-machine restart default</span><br><span class="line"><span class="comment"># 执行docker info, 如果没有输出数据则执行</span></span><br><span class="line">$ docker-machine <span class="built_in">env</span> default</span><br><span class="line"><span class="comment"># 执行后会出现 export xxxx Run this command to configure your shell:的语句, 按照提示执行语句</span></span><br><span class="line">$ <span class="built_in">eval</span> $(<span class="string">&quot;C:\Program Files\Docker Toolbox\docker-machine.exe&quot;</span> <span class="built_in">env</span> default)</span><br><span class="line"><span class="comment"># 继续测试docker info, 如果输出数据则说明成功, 可以通过docker pull 镜像执行镜像下载</span></span><br><span class="line">$ docker pull ubuntu</span><br></pre></td></tr></table></figure><br><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">ssh</span> 用户名默认是：docker  密码默认：tcuser  端口：<span class="number">22</span></span><br></pre></td></tr></table></figure><h1 id="Docker虚拟机文件地址修改"><a href="#Docker虚拟机文件地址修改" class="headerlink" title="Docker虚拟机文件地址修改"></a>Docker虚拟机文件地址修改</h1><p>一、未安装时直接修改存储位置</p><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、在Windows的系统环境添加MACHINE_STORAGE_PATH ，指向虚拟机的位置（我推荐D:\VM\machine\machines）</span><br><span class="line"><span class="number">2</span>、复制boot2docker.iso到虚拟机的位置同级目录<span class="keyword">cache</span>上（D:\VM\machine\<span class="keyword">cache</span>）</span><br></pre></td></tr></table></figure><p>二、已安装的进行迁移</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>使用docker-machine stop <span class="keyword">default</span>停掉Docker的虚拟机。</span><br><span class="line"><span class="number">2.</span>打开VirtualBox，选择“管理”菜单下的“虚拟介质管理”，我们可以看到Docker虚拟机用的虚拟硬盘的文件disk。</span><br><span class="line"><span class="number">3.</span>选中“disk”，然后点击菜单中的“复制”命令，根据向导，把当前的disk复制到另一个盘上面去。</span><br><span class="line"><span class="number">4.</span>回到VirtualBox主界面，右键“<span class="keyword">default</span>”这个虚拟机，选择“设置”命令，在弹出的窗口中选择“存储”选项。</span><br><span class="line"><span class="number">5.</span>把disk从“控制器SATA”中删除，然后重新添加我们刚才复制到另外一个磁盘上的那个文件。</span><br></pre></td></tr></table></figure><br><h1 id="可能会遇到的坑"><a href="#可能会遇到的坑" class="headerlink" title="可能会遇到的坑"></a>可能会遇到的坑</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 直接使用docker run 运行ubuntu的镜像时会出现 </span></span><br><span class="line"><span class="comment"># the input device is not a TTY.  If you are using mintty, try prefixing the command with &#x27;winpty&#x27; 的错误</span></span><br><span class="line">$ winpty docker run -it ubuntu bash</span><br></pre></td></tr></table></figure><h1 id="win7使用toolbox挂载失败"><a href="#win7使用toolbox挂载失败" class="headerlink" title="win7使用toolbox挂载失败"></a>win7使用toolbox挂载失败</h1><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">修改virtualbox中，设置共享文件夹</span><br><span class="line">假设本地地址为d:\dnmp,文件名为<span class="regexp">/d/</span>dnmp,dnmp文件夹需要放在盘根目录，原因未知</span><br></pre></td></tr></table></figure><p>docker windows环境变量</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable constant_">COMPOSE_CONVERT_WINDOWS_PATHS</span><span class="symbol">:true</span></span><br><span class="line"><span class="variable constant_">DOCKER_CERT_PATH</span><span class="symbol">:D</span><span class="symbol">:</span>\dockerVM\machines\default</span><br><span class="line"><span class="variable constant_">DOCKER_HOST</span><span class="symbol">:tcp</span><span class="symbol">://localhost</span><span class="symbol">:</span><span class="number">2376</span></span><br><span class="line"><span class="variable constant_">DOCKER_MACHINE_NAME</span><span class="symbol">:default</span></span><br><span class="line"><span class="variable constant_">DOCKER_TLS_VERIFY</span><span class="symbol">:</span><span class="number">0</span></span><br><span class="line"><span class="variable constant_">MACHINE_STORAGE_PATH</span><span class="symbol">:D</span><span class="symbol">:</span>\dockerVM</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> Docker </category>
          
          <category> 文档 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>杂记</title>
      <link href="/posts/430d67de.html"/>
      <url>/posts/430d67de.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># <span class="attribute">offset</span>()<span class="selector-class">.top</span>和offsetTop区别</span><br><span class="line"><span class="attribute">offset</span>()<span class="selector-class">.top</span>获取和document距离</span><br><span class="line">offsetTop获取和父类距离(offsetParent()获取父类)</span><br></pre></td></tr></table></figure><h1 id="处理页面跳转后修改class"><a href="#处理页面跳转后修改class" class="headerlink" title="处理页面跳转后修改class"></a>处理页面跳转后修改class</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 方法1</span></span><br><span class="line"><span class="keyword">var</span> links = $(<span class="string">&#x27;.navigation&gt;li&#x27;</span>).<span class="title function_">find</span>(<span class="string">&#x27;a&#x27;</span>),</span><br><span class="line">  index = <span class="number">0</span>,<span class="comment">//默认第一个菜单项</span></span><br><span class="line">  url = location.<span class="property">href</span>.<span class="title function_">split</span>(<span class="string">&#x27;?&#x27;</span>)[<span class="number">0</span>].<span class="title function_">split</span>(<span class="string">&#x27;/&#x27;</span>).<span class="title function_">pop</span>();<span class="comment">//取当前URL最后一个 / 后面的文件名</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(url)&#123;<span class="comment">//如果有取到, 则进行匹配, 否则默认为首页(即index的值所指向的那个)</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> i=links.<span class="property">length</span>; i--;) &#123;<span class="comment">//遍历 menu 的中连接地址</span></span><br><span class="line">     <span class="keyword">if</span>(links[i].<span class="property">href</span>.<span class="title function_">indexOf</span>(url) !== -<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>($(<span class="variable language_">this</span>));</span><br><span class="line">        index = i;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">     &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// links[index].parent.className = &#x27;active&#x27;;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 方法2</span></span><br><span class="line">$(<span class="string">&#x27;.on&#x27;</span>).<span class="title function_">removeClass</span>(<span class="string">&#x27;on&#x27;</span>);</span><br><span class="line">$(<span class="string">&quot;.navigation li a&quot;</span>).<span class="title function_">each</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">   $this = $(<span class="variable language_">this</span>);</span><br><span class="line"></span><br><span class="line">   <span class="keyword">if</span>($this[<span class="number">0</span>].<span class="property">href</span>==<span class="title class_">String</span>(<span class="variable language_">window</span>.<span class="property">location</span>))&#123;</span><br><span class="line">      $this.<span class="title function_">parent</span>().<span class="title function_">addClass</span>(<span class="string">&#x27;on&#x27;</span>);</span><br><span class="line">      $this.<span class="title function_">parents</span>(<span class="string">&#x27;li&#x27;</span>).<span class="title function_">addClass</span>(<span class="string">&#x27;on&#x27;</span>);</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h1 id="floatToString"><a href="#floatToString" class="headerlink" title="floatToString"></a>floatToString</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**2.0   --&gt;   &#x27;2.0&#x27;</span></span><br><span class="line"><span class="comment">2.123 --&gt;   &#x27;2.123&#x27;</span></span><br><span class="line"><span class="comment">0.05  --&gt;   &#x27;0.05&#x27;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">floatToString</span>(<span class="params">num</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span>(num%<span class="number">1</span> == <span class="number">0</span>)</span><br><span class="line">        num = num.<span class="title function_">toFixed</span>(<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> num;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="js复制object"><a href="#js复制object" class="headerlink" title="js复制object"></a>js复制object</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 方法一:</span></span><br><span class="line"><span class="keyword">var</span> o = &#123;<span class="attr">a</span>: [<span class="number">1</span>]&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 浅拷贝</span></span><br><span class="line"><span class="keyword">var</span> o1 = $.<span class="title function_">extend</span>(&#123;&#125;, o);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(o1.<span class="property">a</span> === o.<span class="property">a</span>);  <span class="comment">// true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 深拷贝</span></span><br><span class="line"><span class="keyword">var</span> o2 = $.<span class="title function_">extend</span>(<span class="literal">true</span>, &#123;&#125;, o);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(o2.<span class="property">a</span> === o.<span class="property">a</span>);  <span class="comment">//false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 方法二:</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">copy</span>(<span class="params"> obj </span>)&#123;</span><br><span class="line">    <span class="comment">// JSON解析之类的其实如果给定格式不对很容易出错滴，自己做好检验~</span></span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">JSON</span>.<span class="title function_">parse</span>( <span class="title class_">JSON</span>.<span class="title function_">stringify</span>( obj ) );</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> data = &#123; <span class="attr">name</span>: <span class="string">&quot;neekey&quot;</span>, <span class="attr">sex</span>: <span class="string">&quot;male&quot;</span> &#125;</span><br><span class="line"><span class="keyword">var</span> dataCopy = <span class="title function_">copy</span>( data );</span><br></pre></td></tr></table></figure><h1 id="爆炸粒子效果"><a href="#爆炸粒子效果" class="headerlink" title="爆炸粒子效果"></a>爆炸粒子效果</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 粒子总数</span></span><br><span class="line"><span class="keyword">var</span> <span class="variable constant_">COUNT</span> = <span class="number">500</span>;</span><br><span class="line"><span class="comment">// 重力</span></span><br><span class="line"><span class="keyword">var</span> G = -<span class="number">0.1</span>;</span><br><span class="line"><span class="comment">// 摩擦力</span></span><br><span class="line"><span class="keyword">var</span> F = -<span class="number">0.04</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">init</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="variable constant_">COUNT</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">var</span> d = <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">2</span> * <span class="title class_">Math</span>.<span class="property">PI</span>;</span><br><span class="line">        <span class="keyword">var</span> v = <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">5</span>;</span><br><span class="line">        <span class="keyword">var</span> circle = $(<span class="string">&#x27;&lt;div id=&quot;circle-&#x27;</span> + i + <span class="string">&#x27;&quot; class=&quot;circle&quot; data-x=&quot;250&quot; data-y=&quot;250&quot; data-d=&quot;&#x27;</span> + d + <span class="string">&#x27;&quot; data-v=&quot;&#x27;</span> + v + <span class="string">&#x27;&quot;&gt;&lt;/div&gt;&#x27;</span>);</span><br><span class="line">        circle.<span class="title function_">appendTo</span>($(<span class="string">&#x27;.main&#x27;</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">updateCircle</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="variable constant_">COUNT</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">var</span> x = <span class="built_in">parseFloat</span>($(<span class="string">&#x27;#circle-&#x27;</span> + i).<span class="title function_">attr</span>(<span class="string">&#x27;data-x&#x27;</span>));</span><br><span class="line">        <span class="keyword">var</span> y = <span class="built_in">parseFloat</span>($(<span class="string">&#x27;#circle-&#x27;</span> + i).<span class="title function_">attr</span>(<span class="string">&#x27;data-y&#x27;</span>));</span><br><span class="line">        <span class="keyword">var</span> d = <span class="built_in">parseFloat</span>($(<span class="string">&#x27;#circle-&#x27;</span> + i).<span class="title function_">attr</span>(<span class="string">&#x27;data-d&#x27;</span>));</span><br><span class="line">        <span class="keyword">var</span> v = <span class="built_in">parseFloat</span>($(<span class="string">&#x27;#circle-&#x27;</span> + i).<span class="title function_">attr</span>(<span class="string">&#x27;data-v&#x27;</span>));</span><br><span class="line">        <span class="keyword">var</span> vx = v * <span class="title class_">Math</span>.<span class="title function_">cos</span>(d);</span><br><span class="line">        <span class="keyword">var</span> vy = v * <span class="title class_">Math</span>.<span class="title function_">sin</span>(d);</span><br><span class="line">        <span class="keyword">if</span> (<span class="title class_">Math</span>.<span class="title function_">abs</span>(vx) &lt; <span class="number">1e-9</span>) vx = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">// 速度分量改变</span></span><br><span class="line">        vx += F * <span class="title class_">Math</span>.<span class="title function_">cos</span>(d);</span><br><span class="line">        vy += F * <span class="title class_">Math</span>.<span class="title function_">sin</span>(d) + G;</span><br><span class="line">        <span class="comment">// 计算新速度</span></span><br><span class="line">        v = <span class="title class_">Math</span>.<span class="title function_">sqrt</span>(vx * vx + vy * vy);</span><br><span class="line">        <span class="keyword">if</span> (vy &gt; <span class="number">0</span>) d = <span class="title class_">Math</span>.<span class="title function_">acos</span>(vx / v);</span><br><span class="line">        <span class="keyword">else</span> d = -<span class="title class_">Math</span>.<span class="title function_">acos</span>(vx / v);</span><br><span class="line">        <span class="comment">// 位移分量改变</span></span><br><span class="line">        x += vx;</span><br><span class="line">        y += vy;</span><br><span class="line">        $(<span class="string">&#x27;#circle-&#x27;</span> + i).<span class="title function_">attr</span>(<span class="string">&#x27;data-x&#x27;</span>, x);</span><br><span class="line">        $(<span class="string">&#x27;#circle-&#x27;</span> + i).<span class="title function_">attr</span>(<span class="string">&#x27;data-y&#x27;</span>, y);</span><br><span class="line">        $(<span class="string">&#x27;#circle-&#x27;</span> + i).<span class="title function_">attr</span>(<span class="string">&#x27;data-d&#x27;</span>, d);</span><br><span class="line">        $(<span class="string">&#x27;#circle-&#x27;</span> + i).<span class="title function_">attr</span>(<span class="string">&#x27;data-v&#x27;</span>, v);</span><br><span class="line">        $(<span class="string">&#x27;#circle-&#x27;</span> + i).<span class="title function_">css</span>(&#123;<span class="string">&#x27;top&#x27;</span>: <span class="number">400</span> - y, <span class="string">&#x27;left&#x27;</span>: x&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> interval = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">showAnimation</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (interval) <span class="built_in">clearInterval</span>(interval);</span><br><span class="line">    $(<span class="string">&#x27;.main&#x27;</span>).<span class="title function_">html</span>(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">    <span class="title function_">init</span>();</span><br><span class="line">    interval = <span class="built_in">setInterval</span>(updateCircle, <span class="number">1000</span> / <span class="number">60</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="禁止浏览器滚动条滚动"><a href="#禁止浏览器滚动条滚动" class="headerlink" title="禁止浏览器滚动条滚动"></a>禁止浏览器滚动条滚动</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//当页面滚动时，把当前距离赋值给页面，这样保持页面滚动条不动</span></span><br><span class="line"><span class="keyword">var</span> tops = $(<span class="variable language_">document</span>).<span class="title function_">scrollTop</span>();</span><br><span class="line">$(<span class="variable language_">document</span>).<span class="title function_">bind</span>(<span class="string">&quot;scroll&quot;</span>,<span class="keyword">function</span> (<span class="params"></span>)&#123;</span><br><span class="line">        $(<span class="variable language_">document</span>).<span class="title function_">scrollTop</span>(tops);</span><br><span class="line">    &#125;</span><br><span class="line">);</span><br><span class="line"><span class="comment">//关闭模态框时释放document.scroll事件</span></span><br><span class="line">$(<span class="variable language_">document</span>).<span class="title function_">unbind</span>(<span class="string">&quot;scroll&quot;</span>);</span><br></pre></td></tr></table></figure><h1 id="动态绑定事件无效"><a href="#动态绑定事件无效" class="headerlink" title="动态绑定事件无效"></a>动态绑定事件无效</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 动态绑定原本不存在的元素时，存在元素还没生成，绑定事件的代码已经执行</span></span><br><span class="line">$(<span class="string">&#x27;a&#x27;</span>).<span class="title function_">on</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>)&#123;&#125;)</span><br><span class="line"><span class="comment">// 需要更改为以下方式处理</span></span><br><span class="line">$(<span class="variable language_">document</span>).<span class="title function_">on</span>(<span class="string">&#x27;click&#x27;</span>, <span class="string">&#x27;a&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>)&#123;&#125;)</span><br></pre></td></tr></table></figure><h1 id="IE跨域处理"><a href="#IE跨域处理" class="headerlink" title="IE跨域处理"></a>IE跨域处理</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 点击IE浏览器的的“工具-&gt;Internet 选项-&gt;安全-&gt;自定义级别”修改域相关设置为启动</span></span><br><span class="line">$.<span class="title function_">ajax</span>(&#123;</span><br><span class="line">        <span class="attr">url</span>: <span class="string">&#x27;url地址&#x27;</span>,</span><br><span class="line">        <span class="attr">type</span>: <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">        <span class="attr">dataType</span>: <span class="string">&#x27;json&#x27;</span>,</span><br><span class="line">        <span class="attr">crossDomain</span>: <span class="literal">true</span> == !(<span class="variable language_">document</span>.<span class="property">all</span>), <span class="comment">// 主要这句启动跨域作用</span></span><br><span class="line">        <span class="attr">data</span>: &#123;</span><br><span class="line">            <span class="string">&#x27;command&#x27;</span>: <span class="string">&#x27;&#123;$compareCommand&#125;&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;action&#x27;</span>: <span class="string">&#x27;GetOne&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;city_id&#x27;</span>: <span class="string">&#x27;&#123;SITE_ID&#125;&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;hid&#x27;</span>: hid</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">success</span>: <span class="keyword">function</span> (<span class="params">result</span>) &#123;</span><br><span class="line">        </span><br><span class="line">        &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h1 id="选择器获取script"><a href="#选择器获取script" class="headerlink" title="选择器获取script"></a>选择器获取script</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取所有的script</span></span><br><span class="line">$(<span class="string">&#x27;script&#x27;</span>);</span><br><span class="line"><span class="comment">// 获取包含lng字符串以及之后的文本</span></span><br><span class="line">$(<span class="string">&#x27;script:contains(&quot;lng&quot;)&#x27;</span>);</span><br></pre></td></tr></table></figure><h1 id="监听浏览器标签切换或者缩小"><a href="#监听浏览器标签切换或者缩小" class="headerlink" title="监听浏览器标签切换或者缩小"></a>监听浏览器标签切换或者缩小</h1><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Page_Visibility_API">页面可见性 API</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> hidden, visibilityChange;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">typeof</span> <span class="variable language_">document</span>.<span class="property">hidden</span> !== <span class="string">&quot;undefined&quot;</span>) &#123; <span class="comment">// Opera 12.10 and Firefox 18 and later support</span></span><br><span class="line">    hidden = <span class="string">&quot;hidden&quot;</span>;</span><br><span class="line">    visibilityChange = <span class="string">&quot;visibilitychange&quot;</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">typeof</span> <span class="variable language_">document</span>.<span class="property">msHidden</span> !== <span class="string">&quot;undefined&quot;</span>) &#123;</span><br><span class="line">    hidden = <span class="string">&quot;msHidden&quot;</span>;</span><br><span class="line">    visibilityChange = <span class="string">&quot;msvisibilitychange&quot;</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">typeof</span> <span class="variable language_">document</span>.<span class="property">webkitHidden</span> !== <span class="string">&quot;undefined&quot;</span>) &#123;</span><br><span class="line">    hidden = <span class="string">&quot;webkitHidden&quot;</span>;</span><br><span class="line">    visibilityChange = <span class="string">&quot;webkitvisibilitychange&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$(<span class="variable language_">document</span>).<span class="title function_">on</span>(visibilityChange,handleVisibilityChange);</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">handleVisibilityChange</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">document</span>[hidden]) &#123;</span><br><span class="line">        $(<span class="string">&#x27;title&#x27;</span>).<span class="title function_">text</span>(<span class="string">&#x27;切换标签&#x27;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $(<span class="string">&#x27;title&#x27;</span>).<span class="title function_">text</span>(<span class="string">&#x27;切回标签&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="cookie转json"><a href="#cookie转json" class="headerlink" title="cookie转json"></a>cookie转json</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">cookieToJson</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> cookieArr = <span class="variable language_">document</span>.<span class="property">cookie</span>.<span class="title function_">split</span>(<span class="string">&quot;;&quot;</span>);</span><br><span class="line">    <span class="keyword">let</span> obj = &#123;&#125; </span><br><span class="line">    cookieArr.<span class="title function_">forEach</span>(<span class="function">(<span class="params">i</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> arr = i.<span class="title function_">split</span>(<span class="string">&quot;=&quot;</span>);</span><br><span class="line">        obj[arr[<span class="number">0</span>].<span class="title function_">trim</span>()] =arr[<span class="number">1</span>].<span class="title function_">trim</span>();</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> obj</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> cookieJson = <span class="title function_">cookieToJson</span>();</span><br><span class="line">  <span class="keyword">var</span> cookieJsonStr = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>();</span><br></pre></td></tr></table></figure><h1 id="json转字符串，格式化输出"><a href="#json转字符串，格式化输出" class="headerlink" title="json转字符串，格式化输出"></a>json转字符串，格式化输出</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// JSON.stringify(value[, replacer[, space]])</span></span><br><span class="line"><span class="comment">// space:</span></span><br><span class="line"><span class="comment">// 可选，文本添加缩进、空格和换行符，如果 space 是一个数字，则返回值文本在每个级别缩进指定数目的空格，如果 space 大于 10，则文本缩进 10 个空格。space 也可以使用非数//// 字，如：\t。</span></span><br><span class="line"><span class="keyword">let</span> json = &#123;&#125;</span><br><span class="line"><span class="title class_">JSON</span>.<span class="title function_">stringify</span>(json, <span class="literal">null</span>, <span class="string">&#x27;\t&#x27;</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> js </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/posts/0.html"/>
      <url>/posts/0.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>vagrant常用命令</title>
      <link href="/posts/eeec638f.html"/>
      <url>/posts/eeec638f.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h2 id="ssh方式登陆vagrant"><a href="#ssh方式登陆vagrant" class="headerlink" title="ssh方式登陆vagrant"></a>ssh方式登陆vagrant</h2><p>具体参数通过vagrant ssh-config查看 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh vagrant@127.0.0.1 -p 2222 -o Compression=<span class="built_in">yes</span> -o DSAAuthentication=<span class="built_in">yes</span> -o LogLevel=FATAL -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o IdentitiesOnly=<span class="built_in">yes</span> -i /cygdrive/c/Users/Administrator/.vagrant.d/boxes/centos7-docker/0/virtualbox/vagrant_private_key</span><br></pre></td></tr></table></figure><h2 id="安装docker-compose"><a href="#安装docker-compose" class="headerlink" title="安装docker-compose"></a>安装docker-compose</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装docker-compose</span></span><br><span class="line">$ <span class="built_in">sudo</span> curl -L https://github.com/docker/compose/releases/download/1.24.1/docker-compose-`<span class="built_in">uname</span> -s`-`<span class="built_in">uname</span> -m` -o /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$ vagrant box add <span class="comment"># 添加box的操作</span></span><br><span class="line">$ vagrant init <span class="comment"># 初始化box的操作</span></span><br><span class="line">$ vagrant up <span class="comment"># 启动虚拟机的操作</span></span><br><span class="line">$ vagrant halt <span class="comment"># 关闭虚拟机的操作</span></span><br><span class="line">$ vagrant ssh <span class="comment"># 登录虚拟机的操作</span></span><br><span class="line">$ vagrant box list <span class="comment"># 显示当前已经添加的box列表</span></span><br><span class="line">$ vagrant box remove <span class="comment"># 移除相应的box</span></span><br><span class="line">$ vagrant destroy <span class="comment"># 停止当前正在运行的虚拟机并销毁所有创建的资源</span></span><br><span class="line">$ vagrant plugin <span class="comment"># 用于安装卸载插件</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 重新加载配置文件 --provision:强制</span></span><br><span class="line">$ vagrant reload --provision</span><br><span class="line"><span class="comment">#打包</span></span><br><span class="line">$ vagrant package</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置vagrant存储路径</span></span><br><span class="line">VAGRANT_HOME</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置不适用vagrant默认的ssh, 使用系统的ssh(修改默认存储路径后 vagrant ssh会导致请求失败)</span></span><br><span class="line">VAGRANT_PREFER_SYSTEM_BIN=0</span><br></pre></td></tr></table></figure><h2 id="使用clash代理"><a href="#使用clash代理" class="headerlink" title="使用clash代理"></a>使用clash代理</h2><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置中新增 9091：配置的api端口</span></span><br><span class="line">config.vm.network <span class="string">&quot;forwarded_port&quot;</span>, <span class="params">guest:</span> <span class="number">9091</span>, <span class="params">host:</span> <span class="number">9091</span>, <span class="params">host_ip:</span> <span class="string">&quot;127.0.0.1&quot;</span></span><br></pre></td></tr></table></figure><h2 id="io慢处理"><a href="#io慢处理" class="headerlink" title="io慢处理"></a>io慢处理</h2><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装nfs插件</span></span><br><span class="line">$ vagrant plugin <span class="keyword">install </span>vagrant-winnfsd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置中修改网络为private_network，并且开启nfs</span></span><br><span class="line"><span class="built_in">config</span>.vm.network <span class="string">&quot;private_network&quot;</span>, type: <span class="string">&quot;dhcp&quot;</span></span><br><span class="line"><span class="built_in">config</span>.winnfsd.uid = <span class="number">1</span></span><br><span class="line"><span class="built_in">config</span>.winnfsd.gid = <span class="number">1</span></span><br><span class="line"><span class="comment"># 同步方式为nfs</span></span><br><span class="line"><span class="built_in">config</span>.vm.<span class="keyword">synced_folder </span><span class="string">&quot;E:/vagrant&quot;</span>, <span class="string">&quot;/data/vagrant&quot;</span>, type: <span class="string">&quot;nfs&quot;</span></span><br></pre></td></tr></table></figure><h2 id="通过国内网址下载插件"><a href="#通过国内网址下载插件" class="headerlink" title="通过国内网址下载插件"></a>通过国内网址下载插件</h2><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vagrant <span class="keyword">plugin</span> install --<span class="keyword">plugin</span>-clean-sources --<span class="keyword">plugin</span>-source https:<span class="comment">//gems.ruby-china.com/ vagrant-disksize</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> vagrant </category>
          
          <category> 常用命令 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 常用命令 </tag>
            
            <tag> vagrant </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>正则表达式</title>
      <link href="/posts/2f57a694.html"/>
      <url>/posts/2f57a694.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="获取json部分"><a href="#获取json部分" class="headerlink" title="获取json部分"></a>获取json部分</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\[&#123;.*?\&#125;]/is&quot;</span>, <span class="variable">$str</span>, <span class="variable">$matches</span>);</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 只能输入数字，并且小数点后两位</span></span><br><span class="line">(<span class="variable language_">this</span>.<span class="property">value</span>.<span class="title function_">match</span>(<span class="regexp">/\d+(\.\d&#123;0,2&#125;)?/</span>)||[<span class="string">&#x27;&#x27;</span>])[<span class="number">0</span>];</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取href地址:</span></span><br><span class="line">/\&lt;a\shref\=\<span class="string">&quot;([^\&quot;]+)/</span></span><br><span class="line"><span class="string">// 获取div</span></span><br><span class="line"><span class="string">/&lt;div class=&quot;</span>resume-left<span class="string">&quot;[\S\s]*?&gt;/</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 去除html标签的id以及class</span></span><br><span class="line">preg = re.<span class="built_in">compile</span>(<span class="string">r&#x27;((id|class)=\&quot;[\S\s]*?\&quot;)&#x27;</span>)</span><br><span class="line">essayMain = re.sub(preg, <span class="string">&#x27;&#x27;</span>, essayMain)</span><br><span class="line"><span class="comment"># 去除html的注释</span></span><br><span class="line">preg = re.<span class="built_in">compile</span>(<span class="string">r&#x27;&lt;!--[\S\s]*?--&gt;&#x27;</span>)</span><br><span class="line">essayMain = re.sub(preg, <span class="string">&#x27;&#x27;</span>, essayMain)</span><br></pre></td></tr></table></figure><h1 id="链接只保留文字去除标签"><a href="#链接只保留文字去除标签" class="headerlink" title="链接只保留文字去除标签"></a>链接只保留文字去除标签</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">&lt;a href=<span class="string">&quot;xxx&quot;</span>&gt;文字&lt;/a&gt; 替换后保留<span class="string">&quot;文字&quot;</span></span></span><br><span class="line">(?i)&lt;/?a[^&gt;]*&gt;</span><br></pre></td></tr></table></figure><h1 id="小程序User-Agent-需要忽略大小写i"><a href="#小程序User-Agent-需要忽略大小写i" class="headerlink" title="小程序User-Agent(需要忽略大小写i)"></a>小程序User-Agent(需要忽略大小写i)</h1><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># 微信</span></span><br><span class="line">Android.*MicroMessenger.*miniProgram <span class="comment">// 安卓端的小程序</span></span><br><span class="line">iPhone.*MicroMessenger <span class="comment">// 苹果端小程序</span></span><br><span class="line"><span class="meta"># 百度</span></span><br><span class="line">Android.*swan.*swan<span class="punctuation">-</span>baiduboxapp</span><br><span class="line">iPhone.*swan.*swan<span class="punctuation">-</span>baiduboxapp</span><br></pre></td></tr></table></figure><h1 id="去除html所有属性"><a href="#去除html所有属性" class="headerlink" title="去除html所有属性"></a>去除html所有属性</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># style将被去除</span></span><br><span class="line"><span class="variable">$html</span> = <span class="string">&#x27;&lt;div style=&quot;&quot;&gt;&lt;/div&gt;&#x27;</span>;</span><br><span class="line"><span class="variable">$html</span> = <span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/(&lt;[^\s\/&gt;]+)\b[^&gt;]*&gt;/i&#x27;</span>, <span class="string">&quot;<span class="subst">$1</span>&gt;&quot;</span>, <span class="variable">$html</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> 正则表达式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 正则表达式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>正则表达式速查</title>
      <link href="/posts/351dcf8c.html"/>
      <url>/posts/351dcf8c.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="一、速查表"><a href="#一、速查表" class="headerlink" title="一、速查表"></a>一、速查表</h1><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml">正则表达式中的特殊字符</span></span><br><span class="line"><span class="language-xml">字符含义</span></span><br><span class="line"><span class="language-xml">\</span></span><br><span class="line"><span class="language-xml">依照下列规则匹配：</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">在非特殊字符之前的反斜杠表示下一个字符是特殊字符，不能按照字面理解。例如，前面没有 &quot;\&quot; 的 &quot;b&quot; 通常匹配小写字母 &quot;b&quot;，即字符会被作为字面理解，无论它出现在哪里。但如果前面加了 &quot;\&quot;，它将不再匹配任何字符，而是表示一个字符边界。</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">在特殊字符之前的反斜杠表示下一个字符不是特殊字符，应该按照字面理解。详情请参阅下文中的 &quot;转义（Escaping）&quot; 部分。</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">如果你想将字符串传递给 RegExp 构造函数，不要忘记在字符串字面量中反斜杠是转义字符。所以为了在模式中添加一个反斜杠，你需要在字符串字面量中转义它。/[a-z]\s/i 和 new RegExp(&quot;[a-z]\\s&quot;, &quot;i&quot;) 创建了相同的正则表达式：一个用于搜索后面紧跟着空白字符（\s 可看后文）并且在 a-z 范围内的任意字符的表达式。为了通过字符串字面量给 RegExp 构造函数创建包含反斜杠的表达式，你需要在字符串级别和正则表达式级别都对它进行转义。例如 /[a-z]:\\/i 和 new RegExp(&quot;[a-z]:\\\\&quot;,&quot;i&quot;) 会创建相同的表达式，即匹配类似 &quot;C:\&quot; 字符串。</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">^</span></span><br><span class="line"><span class="language-xml">匹配输入的开始。如果多行标志被设置为 true，那么也匹配换行符后紧跟的位置。</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">例如，/^A/ 并不会匹配 &quot;an A&quot; 中的 &#x27;A&#x27;，但是会匹配 &quot;An E&quot; 中的 &#x27;A&#x27;。</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">当 &#x27;^&#x27; 作为第一个字符出现在一个字符集合模式时，它将会有不同的含义。反向字符集合 一节有详细介绍和示例。</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">$</span></span><br><span class="line"><span class="language-xml">匹配输入的结束。如果多行标志被设置为 true，那么也匹配换行符前的位置。</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">例如，/t$/ 并不会匹配 &quot;eater&quot; 中的 &#x27;t&#x27;，但是会匹配 &quot;eat&quot; 中的 &#x27;t&#x27;。</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">*</span></span><br><span class="line"><span class="language-xml">匹配前一个表达式 0 次或多次。等价于 </span><span class="template-variable">&#123;0,&#125;</span><span class="language-xml">。</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">例如，/bo*/ 会匹配 &quot;A ghost boooooed&quot; 中的 &#x27;booooo&#x27; 和 &quot;A bird warbled&quot; 中的 &#x27;b&#x27;，但是在 &quot;A goat grunted&quot; 中不会匹配任何内容。</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">+</span></span><br><span class="line"><span class="language-xml">匹配前面一个表达式 1 次或者多次。等价于 </span><span class="template-variable">&#123;1,&#125;</span><span class="language-xml">。</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">例如，/a+/ 会匹配 &quot;candy&quot; 中的 &#x27;a&#x27; 和 &quot;caaaaaaandy&quot; 中所有的 &#x27;a&#x27;，但是在 &quot;cndy&quot; 中不会匹配任何内容。</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">?</span></span><br><span class="line"><span class="language-xml">匹配前面一个表达式 0 次或者 1 次。等价于 </span><span class="template-variable">&#123;0,1&#125;</span><span class="language-xml">。</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">例如，/e?le?/ 匹配 &quot;angel&quot; 中的 &#x27;el&#x27;、&quot;angle&quot; 中的 &#x27;le&#x27; 以及 &quot;oslo&#x27; 中的 &#x27;l&#x27;。</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">如果紧跟在任何量词 *、 +、? 或 </span><span class="template-variable">&#123;&#125;</span><span class="language-xml"> 的后面，将会使量词变为非贪婪（匹配尽量少的字符），和缺省使用的贪婪模式（匹配尽可能多的字符）正好相反。例如，对 &quot;123abc&quot; 使用 /\d+/ 将会匹配 &quot;123&quot;，而使用 /\d+?/ 则只会匹配到 &quot;1&quot;。</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">还用于先行断言中，如本表的 x(?=y) 和 x(?!y) 条目所述。</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">.</span></span><br><span class="line"><span class="language-xml">（小数点）默认匹配除换行符之外的任何单个字符。</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">例如，/.n/ 将会匹配 &quot;nay, an apple is on the tree&quot; 中的 &#x27;an&#x27; 和 &#x27;on&#x27;，但是不会匹配 &#x27;nay&#x27;。</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">如果 s (&quot;dotAll&quot;) 标志位被设为 true，它也会匹配换行符。</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">(x)</span></span><br><span class="line"><span class="language-xml">像下面的例子展示的那样，它会匹配 &#x27;x&#x27; 并且记住匹配项。其中括号被称为捕获括号。</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">模式 /(foo) (bar) \1 \2/ 中的 &#x27;(foo)&#x27; 和 &#x27;(bar)&#x27; 匹配并记住字符串 &quot;foo bar foo bar&quot; 中前两个单词。模式中的 \1 和 \2 表示第一个和第二个被捕获括号匹配的子字符串，即 foo 和 bar，匹配了原字符串中的后两个单词。注意 \1、\2、...、\n 是用在正则表达式的匹配环节，详情可以参阅后文的 \n 条目。而在正则表达式的替换环节，则要使用像 $1、$2、...、$n 这样的语法，例如，&#x27;bar foo&#x27;.replace(/(...) (...)/, &#x27;$2 $1&#x27;)。$&amp; 表示整个用于匹配的原字符串。</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">(?:x)</span></span><br><span class="line"><span class="language-xml">匹配 &#x27;x&#x27; 但是不记住匹配项。这种括号叫作非捕获括号，使得你能够定义与正则表达式运算符一起使用的子表达式。看看这个例子 /(?:foo)</span><span class="template-variable">&#123;1,2&#125;</span><span class="language-xml">/。如果表达式是 /foo</span><span class="template-variable">&#123;1,2&#125;</span><span class="language-xml">/，</span><span class="template-variable">&#123;1,2&#125;</span><span class="language-xml"> 将只应用于 &#x27;foo&#x27; 的最后一个字符 &#x27;o&#x27;。如果使用非捕获括号，则 </span><span class="template-variable">&#123;1,2&#125;</span><span class="language-xml"> 会应用于整个 &#x27;foo&#x27; 单词。更多信息，可以参阅下文的 Using parentheses 条目.</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">x(?=y)</span></span><br><span class="line"><span class="language-xml">匹配&#x27;x&#x27;仅仅当&#x27;x&#x27;后面跟着&#x27;y&#x27;.这种叫做先行断言。</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">例如，/Jack(?=Sprat)/会匹配到&#x27;Jack&#x27;仅当它后面跟着&#x27;Sprat&#x27;。/Jack(?=Sprat|Frost)/匹配‘Jack’仅当它后面跟着&#x27;Sprat&#x27;或者是‘Frost’。但是‘Sprat’和‘Frost’都不是匹配结果的一部分。</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">(?&lt;=y)x</span></span><br><span class="line"><span class="language-xml">匹配&#x27;x&#x27;仅当&#x27;x&#x27;前面是&#x27;y&#x27;.这种叫做后行断言。</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">例如，/(?&lt;=Jack)Sprat/会匹配到&#x27; Sprat &#x27;仅仅当它前面是&#x27; Jack &#x27;。/(?&lt;=Jack|Tom)Sprat/匹配‘ Sprat ’仅仅当它前面是&#x27;Jack&#x27;或者是‘Tom’。但是‘Jack’和‘Tom’都不是匹配结果的一部分。</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">x(?!y)</span></span><br><span class="line"><span class="language-xml">仅仅当&#x27;x&#x27;后面不跟着&#x27;y&#x27;时匹配&#x27;x&#x27;，这被称为正向否定查找。</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">例如，仅仅当这个数字后面没有跟小数点的时候，/\d+(?!\.)/ 匹配一个数字。正则表达式/\d+(?!\.)/.exec(&quot;3.141&quot;)匹配‘141’而不是‘3.141’</span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">(?<span class="meta">&lt;!y)x</span></span></span><br><span class="line"><span class="meta"><span class="language-xml">仅仅当<span class="string">&#x27;x&#x27;</span>前面不是<span class="string">&#x27;y&#x27;</span>时匹配<span class="string">&#x27;x&#x27;</span>，这被称为反向否定查找。</span></span></span><br><span class="line"><span class="meta"><span class="language-xml"></span></span></span><br><span class="line"><span class="meta"><span class="language-xml">例如, 仅仅当这个数字前面没有负号的时候，/(?&lt;!-)\d+/ 匹配一个数字。</span></span></span><br><span class="line"><span class="meta"><span class="language-xml">/(?&lt;!-)\d+/.exec(&#x27;3&#x27;) 匹配到 <span class="string">&quot;3&quot;</span>.</span></span></span><br><span class="line"><span class="meta"><span class="language-xml">/(?&lt;!-)\d+/.exec(&#x27;-3&#x27;) 因为这个数字前有负号，所以没有匹配到。</span></span></span><br><span class="line"><span class="meta"><span class="language-xml"></span></span></span><br><span class="line"><span class="meta"><span class="language-xml">x|y</span></span></span><br><span class="line"><span class="meta"><span class="language-xml">匹配‘x’或者‘y’。</span></span></span><br><span class="line"><span class="meta"><span class="language-xml"></span></span></span><br><span class="line"><span class="meta"><span class="language-xml">例如，/green|red/匹配“green <span class="keyword">apple</span>”中的‘green’和“red <span class="keyword">apple</span>”中的‘red’</span></span></span><br><span class="line"><span class="meta"><span class="language-xml"></span></span></span><br><span class="line"><span class="meta"><span class="language-xml"></span></span><span class="template-variable">&#123;n&#125;</span><span class="language-xml"><span class="meta">n 是一个正整数，匹配了前面一个字符刚好出现了 n 次。</span></span></span><br><span class="line"><span class="meta"><span class="language-xml">比如， /a</span></span><span class="template-variable">&#123;2&#125;</span><span class="language-xml"><span class="meta">/ 不会匹配“candy”中的<span class="string">&#x27;a&#x27;</span>,但是会匹配“caandy”中所有的 a，以及“caaandy”中的前两个<span class="string">&#x27;a&#x27;</span>。</span></span></span><br><span class="line"><span class="meta"><span class="language-xml"></span></span><span class="template-variable">&#123;n,&#125;</span><span class="language-xml"><span class="meta"></span></span></span><br><span class="line"><span class="meta"><span class="language-xml">n是一个正整数，匹配前一个字符至少出现了n次。</span></span></span><br><span class="line"><span class="meta"><span class="language-xml"></span></span></span><br><span class="line"><span class="meta"><span class="language-xml">例如, /a</span></span><span class="template-variable">&#123;2,&#125;</span><span class="language-xml"><span class="meta">/ 匹配 <span class="string">&quot;aa&quot;</span>, <span class="string">&quot;aaaa&quot;</span> 和 <span class="string">&quot;aaaaa&quot;</span> 但是不匹配 <span class="string">&quot;a&quot;</span>。</span></span></span><br><span class="line"><span class="meta"><span class="language-xml"></span></span></span><br><span class="line"><span class="meta"><span class="language-xml"></span></span><span class="template-variable">&#123;n,m&#125;</span><span class="language-xml"><span class="meta"></span></span></span><br><span class="line"><span class="meta"><span class="language-xml">n 和 m 都是整数。匹配前面的字符至少n次，最多m次。如果 n 或者 m 的值是0， 这个值被忽略。</span></span></span><br><span class="line"><span class="meta"><span class="language-xml"></span></span></span><br><span class="line"><span class="meta"><span class="language-xml">例如，/a</span></span><span class="template-variable">&#123;1, 3&#125;</span><span class="language-xml"><span class="meta">/ 并不匹配“cndy”中的任意字符，匹配“candy”中的a，匹配“caandy”中的前两个a，也匹配“caaaaaaandy”中的前三个a。注意，当匹配”caaaaaaandy“时，匹配的值是“aaa”，即使原始的字符串中有更多的a。</span></span></span><br><span class="line"><span class="meta"><span class="language-xml"></span></span></span><br><span class="line"><span class="meta"><span class="language-xml">[xyz]一个字符集合。匹配方括号中的任意字符，包括转义序列。你可以使用破折号（-）来指定一个字符范围。对于点（.）和星号（*）这样的特殊符号在一个字符集中没有特殊的意义。他们不必进行转义，不过转义也是起作用的。</span></span></span><br><span class="line"><span class="meta"><span class="language-xml">例如，[abcd] 和[a-d]是一样的。他们都匹配<span class="string">&quot;brisket&quot;</span>中的‘b’,也都匹配“city”中的‘c’。/[a-z.]+/ 和/[\w.]+/与字符串“test.i.ng”匹配。</span></span></span><br><span class="line"><span class="meta"><span class="language-xml">[^xyz]</span></span></span><br><span class="line"><span class="meta"><span class="language-xml">一个反向字符集。也就是说， 它匹配任何没有包含在方括号中的字符。你可以使用破折号（-）来指定一个字符范围。任何普通字符在这里都是起作用的。</span></span></span><br><span class="line"><span class="meta"><span class="language-xml"></span></span></span><br><span class="line"><span class="meta"><span class="language-xml">例如，[^abc] 和 [^a-c] 是一样的。他们匹配<span class="string">&quot;brisket&quot;</span>中的‘r’，也匹配“chop”中的‘h’。</span></span></span><br><span class="line"><span class="meta"><span class="language-xml"></span></span></span><br><span class="line"><span class="meta"><span class="language-xml">[\b]</span></span></span><br><span class="line"><span class="meta"><span class="language-xml">匹配一个退格(U+0008)。（不要和\b混淆了。）</span></span></span><br><span class="line"><span class="meta"><span class="language-xml"></span></span></span><br><span class="line"><span class="meta"><span class="language-xml">\b</span></span></span><br><span class="line"><span class="meta"><span class="language-xml">匹配一个词的边界。一个词的边界就是一个词不被另外一个“字”字符跟随的位置或者前面跟其他“字”字符的位置，例如在字母和空格之间。注意，匹配中不包括匹配的字边界。换句话说，一个匹配的词的边界的内容的长度是0。（不要和[\b]混淆了）</span></span></span><br><span class="line"><span class="meta"><span class="language-xml"></span></span></span><br><span class="line"><span class="meta"><span class="language-xml">使用<span class="string">&quot;moon&quot;</span>举例：</span></span></span><br><span class="line"><span class="meta"><span class="language-xml">/\bm/匹配“moon”中的‘m’；</span></span></span><br><span class="line"><span class="meta"><span class="language-xml">/oo\b/并不匹配<span class="string">&quot;moon&quot;</span>中的<span class="string">&#x27;oo&#x27;</span>，因为<span class="string">&#x27;oo&#x27;</span>被一个“字”字符<span class="string">&#x27;n&#x27;</span>紧跟着。</span></span></span><br><span class="line"><span class="meta"><span class="language-xml">/oon\b/匹配<span class="string">&quot;moon&quot;</span>中的<span class="string">&#x27;oon&#x27;</span>，因为<span class="string">&#x27;oon&#x27;</span>是这个字符串的结束部分。这样他没有被一个“字”字符紧跟着。</span></span></span><br><span class="line"><span class="meta"><span class="language-xml">/\w\b\w/将不能匹配任何字符串，因为在一个单词中间的字符永远也不可能同时满足没有“字”字符跟随和有“字”字符跟随两种情况。</span></span></span><br><span class="line"><span class="meta"><span class="language-xml"></span></span></span><br><span class="line"><span class="meta"><span class="language-xml">注意: <span class="keyword">JavaScript</span>的正则表达式引擎将特定的字符集定义为“字”字符。不在该集合中的任何字符都被认为是一个断词。这组字符相当有限：它只包括大写和小写的罗马字母，十进制数字和下划线字符。不幸的是，重要的字符，例如“é”或“ü”，被视为断词。</span></span></span><br><span class="line"><span class="meta"><span class="language-xml"></span></span></span><br><span class="line"><span class="meta"><span class="language-xml">\B</span></span></span><br><span class="line"><span class="meta"><span class="language-xml">匹配一个非单词边界。匹配如下几种情况：</span></span></span><br><span class="line"><span class="meta"><span class="language-xml"></span></span></span><br><span class="line"><span class="meta"><span class="language-xml">字符串第一个字符为非“字”字符</span></span></span><br><span class="line"><span class="meta"><span class="language-xml">字符串最后一个字符为非“字”字符</span></span></span><br><span class="line"><span class="meta"><span class="language-xml">两个单词字符之间</span></span></span><br><span class="line"><span class="meta"><span class="language-xml">两个非单词字符之间</span></span></span><br><span class="line"><span class="meta"><span class="language-xml">空字符串</span></span></span><br><span class="line"><span class="meta"><span class="language-xml">例如，/\B../匹配<span class="string">&quot;noonday&quot;</span>中的<span class="string">&#x27;oo&#x27;</span>, 而/y\B../匹配<span class="string">&quot;possibly yesterday&quot;</span>中的’yes‘</span></span></span><br><span class="line"><span class="meta"><span class="language-xml"></span></span></span><br><span class="line"><span class="meta"><span class="language-xml">\cX</span></span></span><br><span class="line"><span class="meta"><span class="language-xml">当X是处于A到Z之间的字符的时候，匹配字符串中的一个控制符。</span></span></span><br><span class="line"><span class="meta"><span class="language-xml"></span></span></span><br><span class="line"><span class="meta"><span class="language-xml">例如，/\cM/ 匹配字符串中的 <span class="keyword">control-M</span> (U+000D)。</span></span></span><br><span class="line"><span class="meta"><span class="language-xml"></span></span></span><br><span class="line"><span class="meta"><span class="language-xml">\d</span></span></span><br><span class="line"><span class="meta"><span class="language-xml">匹配一个数字。等价于[0-9]。</span></span></span><br><span class="line"><span class="meta"><span class="language-xml"></span></span></span><br><span class="line"><span class="meta"><span class="language-xml">例如， /\d/ 或者 /[0-9]/ 匹配<span class="string">&quot;B2 is the suite number.&quot;</span>中的<span class="string">&#x27;2&#x27;</span>。</span></span></span><br><span class="line"><span class="meta"><span class="language-xml"></span></span></span><br><span class="line"><span class="meta"><span class="language-xml">\D</span></span></span><br><span class="line"><span class="meta"><span class="language-xml">匹配一个非数字字符。等价于[^0-9]。</span></span></span><br><span class="line"><span class="meta"><span class="language-xml"></span></span></span><br><span class="line"><span class="meta"><span class="language-xml">例如， /\D/ 或者 /[^0-9]/ 匹配<span class="string">&quot;B2 is the suite number.&quot;</span>中的<span class="string">&#x27;B&#x27;</span> 。</span></span></span><br><span class="line"><span class="meta"><span class="language-xml"></span></span></span><br><span class="line"><span class="meta"><span class="language-xml">\f匹配一个换页符 (U+000C)。</span></span></span><br><span class="line"><span class="meta"><span class="language-xml">\n匹配一个换行符 (U+000A)。</span></span></span><br><span class="line"><span class="meta"><span class="language-xml">\r匹配一个回车符 (U+000D)。</span></span></span><br><span class="line"><span class="meta"><span class="language-xml">\s</span></span></span><br><span class="line"><span class="meta"><span class="language-xml">匹配一个空白字符，包括空格、制表符、换页符和换行符。等价于[ \f\n\r\t\v\u00a0\u1680\u180e\u2000-\u200a\u2028\u2029\u202f\u205f\u3000\ufeff]。</span></span></span><br><span class="line"><span class="meta"><span class="language-xml"></span></span></span><br><span class="line"><span class="meta"><span class="language-xml">例如, /\s\w*/ 匹配<span class="string">&quot;foo bar.&quot;</span>中的<span class="string">&#x27; bar&#x27;</span>。</span></span></span><br><span class="line"><span class="meta"><span class="language-xml"></span></span></span><br><span class="line"><span class="meta"><span class="language-xml">经测试，\s不匹配<span class="string">&quot;\u180e&quot;</span>，在当前版本Chrome(<span class="keyword">v8</span>0.0.3987.122)和Firefox(76.0.1)控制台输入/\s/.test(&quot;\<span class="keyword">u18</span>0e&quot;)均返回false。</span></span></span><br><span class="line"><span class="meta"><span class="language-xml"></span></span></span><br><span class="line"><span class="meta"><span class="language-xml">\S</span></span></span><br><span class="line"><span class="meta"><span class="language-xml">匹配一个非空白字符。等价于 [^ \f\n\r\t\v\u00a0\u1680\u180e\u2000-\u200a\u2028\u2029\u202f\u205f\u3000\ufeff]。</span></span></span><br><span class="line"><span class="meta"><span class="language-xml"></span></span></span><br><span class="line"><span class="meta"><span class="language-xml">例如，/\S\w*/ 匹配<span class="string">&quot;foo bar.&quot;</span>中的<span class="string">&#x27;foo&#x27;</span>。</span></span></span><br><span class="line"><span class="meta"><span class="language-xml"></span></span></span><br><span class="line"><span class="meta"><span class="language-xml">\t匹配一个水平制表符 (U+0009)。</span></span></span><br><span class="line"><span class="meta"><span class="language-xml">\v匹配一个垂直制表符 (U+000B)。</span></span></span><br><span class="line"><span class="meta"><span class="language-xml">\w</span></span></span><br><span class="line"><span class="meta"><span class="language-xml">匹配一个单字字符（字母、数字或者下划线）。等价于 [A-Za-z0-9_]。</span></span></span><br><span class="line"><span class="meta"><span class="language-xml"></span></span></span><br><span class="line"><span class="meta"><span class="language-xml">例如, /\w/ 匹配 <span class="string">&quot;apple,&quot;</span> 中的 <span class="string">&#x27;a&#x27;</span>，<span class="string">&quot;$5.28,&quot;</span>中的 <span class="string">&#x27;5&#x27;</span> 和 <span class="string">&quot;3D.&quot;</span> 中的 <span class="string">&#x27;3&#x27;</span>。</span></span></span><br><span class="line"><span class="meta"><span class="language-xml"></span></span></span><br><span class="line"><span class="meta"><span class="language-xml">\W</span></span></span><br><span class="line"><span class="meta"><span class="language-xml">匹配一个非单字字符。等价于 [^A-Za-z0-9_]。</span></span></span><br><span class="line"><span class="meta"><span class="language-xml"></span></span></span><br><span class="line"><span class="meta"><span class="language-xml">例如, /\W/ 或者 /[^A-Za-z0-9_]/ 匹配 <span class="string">&quot;50%.&quot;</span> 中的 <span class="string">&#x27;%&#x27;</span>。</span></span></span><br><span class="line"><span class="meta"><span class="language-xml"></span></span></span><br><span class="line"><span class="meta"><span class="language-xml">\n</span></span></span><br><span class="line"><span class="meta"><span class="language-xml">在正则表达式中，它返回最后的第n个子捕获匹配的子字符串(捕获的数目以左括号计数)。</span></span></span><br><span class="line"><span class="meta"><span class="language-xml"></span></span></span><br><span class="line"><span class="meta"><span class="language-xml">比如 /apple(,)\sorange\1/ 匹配<span class="string">&quot;apple, orange, cherry, peach.&quot;</span>中的<span class="string">&#x27;apple, orange,&#x27;</span> 。</span></span></span><br><span class="line"><span class="meta"><span class="language-xml"></span></span></span><br><span class="line"><span class="meta"><span class="language-xml">\0匹配 <span class="keyword">NULL</span>（U+0000）字符， 不要在这后面跟其它小数，因为 \0&lt;digits&gt;</span> 是一个八进制转义序列。</span></span><br><span class="line"><span class="language-xml">\xhh匹配一个两位十六进制数（\x00-\xFF）表示的字符。</span></span><br><span class="line"><span class="language-xml">\uhhhh匹配一个四位十六进制数表示的 UTF-16 代码单元。</span></span><br><span class="line"><span class="language-xml">\u</span><span class="template-variable">&#123;hhhh&#125;</span><span class="language-xml">或\u</span><span class="template-variable">&#123;hhhhh&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">（仅当设置了u标志时）匹配一个十六进制数表示的 Unicode 字符。</span></span><br></pre></td></tr></table></figure><h1 id="二、修饰符"><a href="#二、修饰符" class="headerlink" title="二、修饰符"></a>二、修饰符</h1><p>i 不区分(ignore)大小写；</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">例如: /<span class="keyword">abc</span>/i 可以匹配 <span class="keyword">abc</span>、aBC、Abc</span><br></pre></td></tr></table></figure><p>g 全局(global)匹配<br>如果不带g，正则过程中字符串从左到右匹配，找到第一个符合条件的即匹配成功，返回<br>如果带g，则字符串从左到右，找到每个符合条件的都记录下来，知道字符串结尾位置<br>例如:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&#x27;aaaaaaaa&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> reg1 = <span class="regexp">/a/</span>;  str.<span class="title function_">match</span>(reg1);  <span class="comment">// 结果为：[&quot;a&quot;, index: 0, input: &quot;aaaaaaaa&quot;]</span></span><br><span class="line"><span class="keyword">var</span> reg2 = <span class="regexp">/a/g</span>; str.<span class="title function_">match</span>(reg2);  <span class="comment">// 结果为：[&quot;a&quot;, &quot;a&quot;, &quot;a&quot;, &quot;a&quot;, &quot;a&quot;, &quot;a&quot;, &quot;a&quot;, &quot;a&quot;]</span></span><br></pre></td></tr></table></figure><p>m 多(more)行匹配<br>若存在换行\n并且有开始^或结束$符的情况下，和g一起使用实现全局匹配,<br>因为存在换行时默认会把换行符作为一个字符任务匹配字符串是个单行，<br>g只匹配第一行，添加m之后实现多行，每个换行符之后就是开始</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&quot;abcggab\nabcoab&quot;</span>;</span><br><span class="line"><span class="keyword">var</span> preg1 = <span class="regexp">/^abc/gm</span>;  str.<span class="title function_">match</span>(preg1);  <span class="comment">// 结果为：[&quot;abc&quot;, &quot;abc&quot;]</span></span><br><span class="line"><span class="keyword">var</span> preg2 = <span class="regexp">/ab$/gm</span>;   str.<span class="title function_">match</span>(preg2);  <span class="comment">// 结果为：[&quot;ab&quot;, &quot;ab&quot;]</span></span><br></pre></td></tr></table></figure><p>s 特殊字符圆点 . 中包含换行符<br>默认的圆点 . 是 匹配除换行符 \n 之外的任何单字符，加上s之后, . 中包含换行符</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$str</span> = <span class="string">&quot;abggab\nacbs&quot;</span>;</span><br><span class="line"><span class="variable">$preg</span> = <span class="string">&quot;/b./s&quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">preg_match_all</span>(<span class="variable">$preg</span>, <span class="variable">$str</span>,<span class="variable">$matchs</span>);</span><br><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="variable">$matchs</span>);<span class="comment">//Array ( [0] =&gt; Array ( [0] =&gt; bg [1] =&gt; b [2] =&gt; bs ) )</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="built_in">str</span> = <span class="string">&quot;abggab\nacbs&quot;</span>;</span><br><span class="line">reg = re.<span class="built_in">compile</span>(<span class="string">r&#x27;b.&#x27;</span>, re.S)</span><br><span class="line"><span class="built_in">print</span>(re.findall(reg, <span class="built_in">str</span>))</span><br></pre></td></tr></table></figure><p>U 只匹配最近的一个字符串;不重复匹配;</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$mode</span>=<span class="string">&quot;/a(.*?)c/&quot;</span>;</span><br><span class="line"><span class="variable">$preg</span>=<span class="string">&quot;/a.*c/U&quot;</span>;<span class="comment">//这两个正则返回相同的值</span></span><br><span class="line"><span class="variable">$str</span>=<span class="string">&quot;abcabbbcabbbbbc&quot;</span> ;</span><br><span class="line"><span class="title function_ invoke__">preg_match</span>(<span class="variable">$mode</span>,<span class="variable">$str</span>,<span class="variable">$content</span>);   <span class="keyword">echo</span> <span class="variable">$content</span>[<span class="number">0</span>];<span class="comment">//abc</span></span><br><span class="line"><span class="title function_ invoke__">preg_match</span>(<span class="variable">$preg</span>,<span class="variable">$str</span>,<span class="variable">$content</span>);   <span class="keyword">echo</span> <span class="variable">$content</span>[<span class="number">0</span>];<span class="comment">//abc</span></span><br></pre></td></tr></table></figure><p>修正符:x 将模式中的空白忽略;<br>修正符:A 强制从目标字符串开头匹配;<br>例:</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$mode=<span class="string">&quot;/abc/A&quot;</span><span class="comment">;</span></span><br><span class="line">可以与$str=<span class="string">&quot;abcsdfi&quot;</span>匹配,</span><br><span class="line">不可以与$str2=<span class="string">&quot;sdsdabc&quot;</span>匹配<span class="comment">;</span></span><br><span class="line">因为$str2不是以abc开头<span class="comment">;</span></span><br></pre></td></tr></table></figure><p>修正符:D 如果使用$限制结尾字符,则不允许结尾有换行;<br>例:</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">模式为:<span class="variable">$mode</span><span class="operator">=</span><span class="string">&quot;/abc$/&quot;</span>;</span><br><span class="line">可以与最后有换行的<span class="variable">$str</span><span class="operator">=</span><span class="string">&quot;adshabc<span class="subst">\n</span>&quot;</span>匹配;</span><br><span class="line">元子符<span class="variable">$会忽略最后的换行</span>\n;</span><br><span class="line">如果模式为:<span class="variable">$mode</span><span class="operator">=</span><span class="string">&quot;/abc/D&quot;</span>,</span><br><span class="line">则不能与<span class="variable">$str</span><span class="operator">=</span><span class="string">&quot;adshabc<span class="subst">\n</span>&quot;</span>匹配</span><br></pre></td></tr></table></figure><p>修正符D限制其不可有换行;必需以abc结尾;<br>修正符:e 配合函数preg_replace()使用, 可以把匹配来的字符串当作正则表达式执行;</p>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> 正则表达式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 正则表达式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>字典排序</title>
      <link href="/posts/df1b8d1e.html"/>
      <url>/posts/df1b8d1e.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="字典按照key从大到小排序"><a href="#字典按照key从大到小排序" class="headerlink" title="字典按照key从大到小排序"></a>字典按照key从大到小排序</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">keysInfoDict = <span class="built_in">dict</span>(<span class="built_in">sorted</span>(<span class="built_in">list</span>(keysInfoDict.items()),key = <span class="keyword">lambda</span> x:x[<span class="number">0</span>], reverse=<span class="literal">True</span>))</span><br></pre></td></tr></table></figure><h1 id="字典按照值从大到小排序"><a href="#字典按照值从大到小排序" class="headerlink" title="字典按照值从大到小排序"></a>字典按照值从大到小排序</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">keysInfoDict = <span class="built_in">dict</span>(<span class="built_in">sorted</span>(<span class="built_in">list</span>(keysInfoDict.items()),key = <span class="keyword">lambda</span> x:x[<span class="number">1</span>], reverse=<span class="literal">True</span>))</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP中使用OpenSSL生成RSA公钥私钥及进行加密解密示例（非对称加密）</title>
      <link href="/posts/8bee91c2.html"/>
      <url>/posts/8bee91c2.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><p>一、公钥加密<br>假设一下，我找了两个数字，一个是1，一个是2。我把2保留起来，不告诉你们，当做我的私钥，然后我告诉大家，1是我的公钥。<br>我有一个文件，不能让别人看，我就用1加密了。别人找到了这个文件，但是他不知道2就是解密的私钥啊，所以他解不开，只有我可以用数字2，就是我的私钥，来解密。这样我就可以保护数据了。<br>我的好朋友x用我的公钥1加密了字符a，加密后成了b，放在网上。别人偷到了这个文件，但是别人解不开，因为别人不知道2就是我的私钥，只有我才能解密，解密后就得到a。这样，我们就可以传送加密的数据了。  </p><p>二、私钥签名<br>如果我用私钥加密一段数据（当然只有我可以用私钥加密，因为只有我知道2是我的私钥），结果所有的人都看到我的内容了，因为他们都知道我的公钥是1，那么这种加密有什么用处呢？<br>但是我的好朋友x说有人冒充我给他发信。怎么办呢？我把我要发的信，内容是c，用我的私钥2，加密，加密后的内容是d，发给x，再告诉他解密看是不是c。他用我的公钥1解密，发现果然是c。<br>这个时候，他会想到，能够用我的公钥解密的数据，必然是用我的私钥加的密。只有我知道我得私钥，因此他就可以确认确实是我发的东西。<br>这样我们就能确认发送方身份了。这个过程叫做数字签名。当然具体的过程要稍微复杂一些。用私钥来加密数据，用途就是数字签名。  </p><p>三、总结<br>公钥和私钥是成对的，它们互相解密。<br>公钥加密，私钥解密。<br>私钥数字签名，公钥验证。  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$config</span> = <span class="keyword">array</span>(</span><br><span class="line">        <span class="string">&quot;digest_alg&quot;</span>    =&gt; <span class="string">&quot;sha512&quot;</span>,</span><br><span class="line">        <span class="string">&quot;private_key_bits&quot;</span> =&gt; <span class="number">4096</span>,           <span class="comment">//字节数 512 1024 2048 4096 等加密长度</span></span><br><span class="line">        <span class="string">&quot;private_key_type&quot;</span> =&gt; OPENSSL_KEYTYPE_RSA,   <span class="comment">//加密类型</span></span><br><span class="line">      );</span><br><span class="line">    <span class="variable">$res</span> =    <span class="title function_ invoke__">openssl_pkey_new</span>(<span class="variable">$config</span>); </span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 提取私钥</span></span><br><span class="line">    <span class="title function_ invoke__">openssl_pkey_export</span>(<span class="variable">$res</span>, <span class="variable">$private_key</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 生成公钥</span></span><br><span class="line">    <span class="variable">$public_key</span> = <span class="title function_ invoke__">openssl_pkey_get_details</span>(<span class="variable">$res</span>);</span><br><span class="line">    <span class="comment">// var_dump($public_key);</span></span><br><span class="line">    </span><br><span class="line">    <span class="variable">$public_key</span>=<span class="variable">$public_key</span>[<span class="string">&quot;key&quot;</span>];</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 显示数据</span></span><br><span class="line">    <span class="title function_ invoke__">var_dump</span>(<span class="variable">$private_key</span>);    <span class="comment">//私钥</span></span><br><span class="line">    <span class="title function_ invoke__">var_dump</span>(<span class="variable">$public_key</span>);     <span class="comment">//公钥</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 要加密的数据</span></span><br><span class="line">    <span class="variable">$data</span> = <span class="string">&quot;thisofcat&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;加密的数据：&#x27;</span>.<span class="variable">$data</span>.<span class="string">&quot;\r\n&quot;</span>;  </span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 私钥加密后的数据</span></span><br><span class="line">    <span class="title function_ invoke__">openssl_private_encrypt</span>(<span class="variable">$data</span>,<span class="variable">$encrypted</span>,<span class="variable">$private_key</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 加密后的内容通常含有特殊字符，需要base64编码转换下</span></span><br><span class="line">    <span class="variable">$encrypted</span> = <span class="title function_ invoke__">base64_encode</span>(<span class="variable">$encrypted</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;私钥加密后的数据:&quot;</span>.<span class="variable">$encrypted</span>.<span class="string">&quot;\r\n&quot;</span>;  </span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 公钥解密  </span></span><br><span class="line">    <span class="title function_ invoke__">openssl_public_decrypt</span>(<span class="title function_ invoke__">base64_decode</span>(<span class="variable">$encrypted</span>), <span class="variable">$decrypted</span>, <span class="variable">$public_key</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;公钥解密后的数据:&quot;</span>.<span class="variable">$decrypted</span>,<span class="string">&quot;\r\n&quot;</span>;  </span><br><span class="line">      </span><br><span class="line">    <span class="comment">// 公钥加密 </span></span><br><span class="line">    <span class="title function_ invoke__">openssl_public_encrypt</span>(<span class="variable">$data</span>, <span class="variable">$encrypted</span>, <span class="variable">$public_key</span>);</span><br><span class="line">    <span class="variable">$encrypted</span> = <span class="title function_ invoke__">base64_encode</span>(<span class="variable">$encrypted</span>);  </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;公钥加密后的数据:&quot;</span>.<span class="variable">$encrypted</span>.<span class="string">&quot;\r\n&quot;</span>;</span><br><span class="line">      </span><br><span class="line">    <span class="title function_ invoke__">openssl_private_decrypt</span>(<span class="title function_ invoke__">base64_decode</span>(<span class="variable">$encrypted</span>), <span class="variable">$decrypted</span>, <span class="variable">$private_key</span>);<span class="comment">//私钥解密  </span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;私钥解密后的数据:&quot;</span>.<span class="variable">$decrypted</span>.<span class="string">&quot;n&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> php </category>
          
          <category> 加密解密 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
            <tag> 加密解密 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>url_safe base64编码解码</title>
      <link href="/posts/d0c08f2f.html"/>
      <url>/posts/d0c08f2f.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><p>1: 为什么需要base64?<br>ASCII码一共规定了128个字符的编码,这128个符号,范围在[0,127]之间.<br>其中,[0,31],及127, 33个属于不可打印的控制字符.<br>在电子邮件传输信息时,有些邮件网关会把[0,31]这些控制字符给悄悄清除.<br>还有的早期程序,收到[128,255]之间的国际字符时,甚至会发生错误.<br>如何在不同邮件网关之间安全的传输控制字符,国际字符,甚至二进制文件?<br>于是作为MIME多媒体电子邮件标准的一部分—base64被开发出来.  </p><p>1.url_safe base64编码<br>在上面的base64传统编码中会出现+, &#x2F;两个会被url直接转义的符号，因此如果希望通过url传输这些编码字符串，我们<br>需要先做传统base64编码，随后将+和&#x2F;分别替换为- _两个字符，在接收端则做相反的动作解码  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * URL base64解码</span></span><br><span class="line"><span class="comment">     * &#x27;-&#x27; -&gt; &#x27;+&#x27;</span></span><br><span class="line"><span class="comment">     * &#x27;_&#x27; -&gt; &#x27;/&#x27;</span></span><br><span class="line"><span class="comment">     * 字符串长度%4的余数，补&#x27;=&#x27;</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $string</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">urlsafe_b64decode</span>(<span class="params"><span class="variable">$string</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$data</span> = <span class="title function_ invoke__">str_replace</span>(<span class="keyword">array</span>(<span class="string">&#x27;-&#x27;</span>,<span class="string">&#x27;_&#x27;</span>),<span class="keyword">array</span>(<span class="string">&#x27;+&#x27;</span>,<span class="string">&#x27;/&#x27;</span>),<span class="variable">$string</span>);</span><br><span class="line">        <span class="variable">$mod4</span> = <span class="title function_ invoke__">strlen</span>(<span class="variable">$data</span>) % <span class="number">4</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$mod4</span>) &#123;</span><br><span class="line">            <span class="variable">$data</span> .= <span class="title function_ invoke__">substr</span>(<span class="string">&#x27;====&#x27;</span>, <span class="variable">$mod4</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">base64_decode</span>(<span class="variable">$data</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * URL base64编码</span></span><br><span class="line"><span class="comment">     * &#x27;+&#x27; -&gt; &#x27;-&#x27;</span></span><br><span class="line"><span class="comment">     * &#x27;/&#x27; -&gt; &#x27;_&#x27;</span></span><br><span class="line"><span class="comment">     * &#x27;=&#x27; -&gt; &#x27;&#x27;</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $string</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">urlsafe_b64encode</span>(<span class="params"><span class="variable">$string</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$data</span> = <span class="title function_ invoke__">base64_encode</span>(<span class="variable">$string</span>);</span><br><span class="line">        <span class="variable">$data</span> = <span class="title function_ invoke__">str_replace</span>(<span class="keyword">array</span>(<span class="string">&#x27;+&#x27;</span>,<span class="string">&#x27;/&#x27;</span>),<span class="keyword">array</span>(<span class="string">&#x27;-&#x27;</span>,<span class="string">&#x27;_&#x27;</span>),<span class="variable">$data</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$data</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> php </category>
          
          <category> 加密解密 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
            <tag> 加密解密 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>图片处理</title>
      <link href="/posts/e65a2183.html"/>
      <url>/posts/e65a2183.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 生成带水印的图片</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $source_path 图片文件或URL</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> int $source_type 图片来源类型 1-楼盘 2-用户图片 3-微信二维码 4- 5-小程序二维码 6- 7-</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> int $source_x 调整后的原图x坐标点</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> int $source_y 调整后的原图y坐标点</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> int $target_width 原图调整后的宽度</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> int $target_height 原图调整后的高度</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> int $cropped_width 裁剪调整后图片的宽度</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> int $cropped_height 采集调整后图片的高度</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> bool|string 返回图片地址</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">imageCropperWatermark</span>(<span class="params"><span class="variable">$source_path</span>, <span class="variable">$source_type</span>, <span class="variable">$source_x</span>=<span class="number">0</span>,<span class="variable">$source_y</span>=<span class="number">0</span>,<span class="variable">$target_width</span>=<span class="number">0</span>, <span class="variable">$target_height</span>=<span class="number">0</span>, <span class="variable">$cropped_width</span> = <span class="number">0</span>, <span class="variable">$cropped_height</span> = <span class="number">0</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$logo</span> = ROOT_PATH . <span class="string">&quot;img/img/picEditLogo.png&quot;</span>; <span class="comment">//水印图片</span></span><br><span class="line">        <span class="comment">//获取水印源</span></span><br><span class="line">        <span class="variable">$watermark</span> = <span class="title function_ invoke__">imagecreatefromstring</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$logo</span>));</span><br><span class="line">        <span class="comment">//获取图、水印 宽高类型</span></span><br><span class="line">        <span class="variable">$sourceInfo</span> = <span class="title function_ invoke__">getimagesize</span>(<span class="variable">$source_path</span>);</span><br><span class="line">        <span class="keyword">list</span>(<span class="variable">$sourceWidth</span>, <span class="variable">$sourceHeight</span>, <span class="variable">$sourceType</span>) = <span class="variable">$sourceInfo</span>;</span><br><span class="line">        <span class="variable">$sourceMime</span>   = <span class="variable">$sourceInfo</span>[<span class="string">&#x27;mime&#x27;</span>];</span><br><span class="line">        <span class="keyword">list</span>(<span class="variable">$logoWidth</span>, <span class="variable">$logoHeight</span>, <span class="variable">$logoType</span>) = <span class="title function_ invoke__">getimagesize</span>(<span class="variable">$logo</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable">$cropped_width</span>) &amp;&amp; <span class="keyword">empty</span>(<span class="variable">$cropped_height</span>)) &#123;</span><br><span class="line">            <span class="variable">$target_width</span> = <span class="variable">$cropped_width</span> = <span class="variable">$sourceWidth</span>;</span><br><span class="line">            <span class="variable">$target_height</span> = <span class="variable">$cropped_height</span> = <span class="variable">$sourceHeight</span>;</span><br><span class="line">        &#125; <span class="keyword">elseif</span>(<span class="variable">$target_width</span>&lt;<span class="variable">$cropped_width</span> || <span class="variable">$target_height</span>&lt; <span class="variable">$cropped_height</span>)&#123;</span><br><span class="line">            <span class="variable">$target_width</span> = <span class="variable">$cropped_width</span>;</span><br><span class="line">            <span class="variable">$target_height</span> = <span class="variable">$cropped_height</span>;</span><br><span class="line">            <span class="variable">$source_x</span> = <span class="number">0</span>;</span><br><span class="line">            <span class="variable">$source_y</span> = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$temp</span> =  <span class="title function_ invoke__">dirname</span>(SITE_PATH).<span class="string">&#x27;/img/tmp/&#x27;</span>.<span class="title function_ invoke__">time</span>();</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$source_type</span> == <span class="number">3</span>) &#123;</span><br><span class="line">            <span class="comment">//微信二维码裁剪图</span></span><br><span class="line">            <span class="variable">$temp</span> =  <span class="title function_ invoke__">dirname</span>(SITE_PATH).<span class="string">&#x27;/pic/weixin/&#x27;</span>.<span class="title function_ invoke__">date</span>(<span class="string">&#x27;Y/m/d&#x27;</span>,<span class="title function_ invoke__">time</span>()).<span class="string">&#x27;/&#x27;</span>.<span class="title function_ invoke__">time</span>();</span><br><span class="line">        &#125;<span class="keyword">elseif</span>(<span class="variable">$source_type</span> == <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="comment">//头像裁剪图</span></span><br><span class="line">            <span class="variable">$temp</span> =  <span class="title function_ invoke__">dirname</span>(SITE_PATH).<span class="string">&#x27;/img/tmp/&#x27;</span>.<span class="title function_ invoke__">time</span>();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> (<span class="variable">$sourceMime</span>) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;image/gif&#x27;</span>:</span><br><span class="line">                <span class="variable">$sourceImage</span> = <span class="title function_ invoke__">imagecreatefromgif</span>(<span class="variable">$source_path</span>);</span><br><span class="line">                <span class="variable">$_type</span> = <span class="string">&#x27;.gif&#x27;</span>;</span><br><span class="line">                <span class="variable">$temp</span> .=<span class="variable">$_type</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;image/jpeg&#x27;</span>:</span><br><span class="line">                <span class="variable">$sourceImage</span> = <span class="title function_ invoke__">imagecreatefromjpeg</span>(<span class="variable">$source_path</span>);</span><br><span class="line">                <span class="variable">$_type</span> = <span class="string">&#x27;.jpg&#x27;</span>;</span><br><span class="line">                <span class="variable">$temp</span> .=<span class="variable">$_type</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;image/png&#x27;</span>:</span><br><span class="line">                <span class="variable">$sourceImage</span> = <span class="title function_ invoke__">imagecreatefrompng</span>(<span class="variable">$source_path</span>);</span><br><span class="line">                <span class="variable">$_type</span> =<span class="string">&#x27;.png&#x27;</span>;</span><br><span class="line">                <span class="variable">$temp</span> .=<span class="variable">$_type</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//定义平铺数据</span></span><br><span class="line">        <span class="variable">$x_length</span> = <span class="variable">$sourceWidth</span>; <span class="comment">//x轴总长度</span></span><br><span class="line">        <span class="variable">$y_length</span> = <span class="variable">$sourceHeight</span>; <span class="comment">//y轴总长度</span></span><br><span class="line">        <span class="comment">//创建透明画布 伪白色</span></span><br><span class="line">        <span class="variable">$opacity</span>=<span class="number">20</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//循环平铺水印</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="variable">$x</span> = <span class="number">0</span>; <span class="variable">$x</span> &lt; <span class="variable">$x_length</span>; <span class="variable">$x</span>++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="variable">$y</span> = <span class="number">0</span>; <span class="variable">$y</span> &lt; <span class="variable">$y_length</span>; <span class="variable">$y</span>++) &#123;</span><br><span class="line">                <span class="title function_ invoke__">imagecopymerge</span>(<span class="variable">$sourceImage</span>, <span class="variable">$watermark</span>, <span class="variable">$x</span>, <span class="variable">$y</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="variable">$logoWidth</span>, <span class="variable">$logoHeight</span>, <span class="variable">$opacity</span>);</span><br><span class="line">                <span class="variable">$y</span> += <span class="variable">$logoHeight</span> - <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$x</span> += <span class="variable">$logoWidth</span> - <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$targetImage</span>  = <span class="title function_ invoke__">imagecreatetruecolor</span>(<span class="variable">$target_width</span>, <span class="variable">$target_height</span>);</span><br><span class="line">        <span class="variable">$croppedImage</span> = <span class="title function_ invoke__">imagecreatetruecolor</span>(<span class="variable">$cropped_width</span>, <span class="variable">$cropped_height</span>);</span><br><span class="line">        <span class="title function_ invoke__">imagecopyresampled</span>(<span class="variable">$targetImage</span>,<span class="variable">$sourceImage</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="variable">$target_width</span>,<span class="variable">$target_height</span>,<span class="variable">$sourceWidth</span>,<span class="variable">$sourceHeight</span>);<span class="comment">//缩放图片</span></span><br><span class="line"></span><br><span class="line">        <span class="variable">$source_x</span> = <span class="title function_ invoke__">abs</span>(<span class="variable">$source_x</span>);</span><br><span class="line">        <span class="variable">$source_y</span> = <span class="title function_ invoke__">abs</span>(<span class="variable">$source_y</span>);</span><br><span class="line">        <span class="title function_ invoke__">imagecopy</span>(<span class="variable">$croppedImage</span>, <span class="variable">$targetImage</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="variable">$source_x</span>, <span class="variable">$source_y</span>, <span class="variable">$cropped_width</span>,<span class="variable">$cropped_height</span>);<span class="comment">//切割</span></span><br><span class="line">        <span class="title function_ invoke__">header</span>(<span class="string">&#x27;Content-Type: image/jpeg&#x27;</span>);</span><br><span class="line">        <span class="title function_ invoke__">imagejpeg</span>(<span class="variable">$croppedImage</span>,<span class="variable">$temp</span>,<span class="number">100</span>);</span><br><span class="line">        <span class="title function_ invoke__">imagedestroy</span>(<span class="variable">$sourceImage</span>);</span><br><span class="line">        <span class="title function_ invoke__">imagedestroy</span>(<span class="variable">$targetImage</span>);</span><br><span class="line">        <span class="title function_ invoke__">imagedestroy</span>(<span class="variable">$croppedImage</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> php </category>
          
          <category> 方法 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>php $global和$GLOBALS区别</title>
      <link href="/posts/8c25c764.html"/>
      <url>/posts/8c25c764.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br></pre></td><td class="code"><pre><span class="line"> php 中 <span class="keyword">global</span> 与 <span class="variable">$GLOBAL</span> 由引用产生的区别</span><br><span class="line"></span><br><span class="line">很多人都认为<span class="keyword">global</span>和<span class="variable">$GLOBALS</span>[]只是写法上面的差别，其实不然。</span><br><span class="line"></span><br><span class="line">根据官方的解释是</span><br><span class="line"></span><br><span class="line">    <span class="variable">$GLOBALS</span>[<span class="string">&#x27;var&#x27;</span>] 是外部的全局变量<span class="variable">$var</span>本身。</span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$var</span> 是外部<span class="variable">$var</span>的同名引用或者指针。（错误：是个别名引用而已，非指针！！！）</span><br><span class="line"></span><br><span class="line">举例说明一下：</span><br><span class="line"><span class="number">01</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="number">02</span></span><br><span class="line"><span class="variable">$var1</span> = <span class="number">1</span>;</span><br><span class="line"><span class="number">03</span></span><br><span class="line"><span class="variable">$var2</span> = <span class="number">2</span>;</span><br><span class="line"><span class="number">04</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="number">05</span></span><br><span class="line">    <span class="variable">$GLOBALS</span>[<span class="string">&#x27;var2&#x27;</span>] = &amp;<span class="variable">$GLOBALS</span>[<span class="string">&#x27;var1&#x27;</span>];</span><br><span class="line"><span class="number">06</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="number">07</span></span><br><span class="line"></span><br><span class="line"><span class="number">08</span></span><br><span class="line"><span class="title function_ invoke__">test</span>();</span><br><span class="line"><span class="number">09</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$var2</span>;</span><br><span class="line"><span class="number">10</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">    正常打印结果为<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="number">01</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="number">02</span></span><br><span class="line"><span class="variable">$var1</span> = <span class="number">1</span>;</span><br><span class="line"><span class="number">03</span></span><br><span class="line"><span class="variable">$var2</span> = <span class="number">2</span>;</span><br><span class="line"><span class="number">04</span></span><br><span class="line"> </span><br><span class="line"><span class="number">05</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="number">06</span></span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$var1</span>, <span class="variable">$var2</span>;</span><br><span class="line"><span class="number">07</span></span><br><span class="line">    <span class="variable">$var2</span> = &amp;<span class="variable">$var1</span>;</span><br><span class="line"><span class="number">08</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$var2</span>;</span><br><span class="line"><span class="number">09</span></span><br><span class="line">    <span class="variable">$var2</span> = <span class="string">&#x27;qianyunlai.com&#x27;</span>;</span><br><span class="line"><span class="number">10</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="number">11</span></span><br><span class="line"> </span><br><span class="line"><span class="number">12</span></span><br><span class="line"><span class="title function_ invoke__">test</span>(); <span class="comment">// 输出 1</span></span><br><span class="line"><span class="number">13</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$var2</span>; <span class="comment">// 输出 2</span></span><br><span class="line"><span class="number">14</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$var1</span>; <span class="comment">// 输出 qianyunlai.com</span></span><br><span class="line"><span class="number">15</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="title function_ invoke__">test</span>()函数中的<span class="variable">$var1</span>，<span class="variable">$va2</span>都是局部变量，只不过是加了<span class="keyword">global</span>关键字后，分别引用指向全局变量<span class="variable">$var1</span>，<span class="variable">$va2</span>了，当 <span class="variable">$var2</span> = &amp;<span class="variable">$var1</span>; 时，局部变量<span class="variable">$var2</span>不再指向全局变量<span class="variable">$val2</span>，而重新指向全局变量<span class="variable">$var1</span>，换句话来说，局部变量<span class="variable">$var2</span>的改变，不会再影响到全局变量<span class="variable">$val2</span>，而会影响到重新指向的全局变量<span class="variable">$val1</span>。</span><br><span class="line"></span><br><span class="line">我们再来看一个例子吧。</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="variable">$var1</span> = <span class="number">1</span>;</span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="number">4</span></span><br><span class="line">    <span class="keyword">unset</span>(<span class="variable">$GLOBALS</span>[<span class="string">&#x27;var1&#x27;</span>]);</span><br><span class="line"><span class="number">5</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="number">6</span></span><br><span class="line"><span class="title function_ invoke__">test</span>();</span><br><span class="line"><span class="number">7</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$var1</span>;</span><br><span class="line"><span class="number">8</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">    因为<span class="variable">$var1</span>被删除了，所以什么东西都没有打印。</span><br><span class="line"></span><br><span class="line"><span class="number">01</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="number">02</span></span><br><span class="line"><span class="variable">$var1</span> = <span class="number">1</span>;</span><br><span class="line"><span class="number">03</span></span><br><span class="line"> </span><br><span class="line"><span class="number">04</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="number">05</span></span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$var1</span>;</span><br><span class="line"><span class="number">06</span></span><br><span class="line">    <span class="keyword">unset</span>(<span class="variable">$var1</span>);</span><br><span class="line"><span class="number">07</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="number">08</span></span><br><span class="line"> </span><br><span class="line"><span class="number">09</span></span><br><span class="line"><span class="title function_ invoke__">test</span>();</span><br><span class="line"><span class="number">10</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$var1</span>;</span><br><span class="line"><span class="number">11</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">    意外的打印了<span class="number">1</span>。</span><br><span class="line"></span><br><span class="line">证明删除的只是别名，<span class="variable">$GLOBALS</span>[<span class="string">&#x27;var&#x27;</span>]的引用，起本身的值没有受到任何的改变。</span><br><span class="line"></span><br><span class="line">明白了吧？</span><br><span class="line"></span><br><span class="line">也就是说 <span class="keyword">global</span> <span class="variable">$var</span> 其实就是<span class="variable">$var</span> = &amp;<span class="variable">$GLOBALS</span>[<span class="string">&#x27;var&#x27;</span>]。调用外部变量的一个别名而已。</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">+++ 探讨（二）++++++++++++++++++++++++++++++++++++++++++</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">PHP中<span class="keyword">global</span>和<span class="variable">$GLOBALS</span>不仅仅是写法不一样以为，两者的区别还是很大的，在实际应用中需要注意！</span><br><span class="line"></span><br><span class="line">先看下面的例子：</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="variable">$id</span> = <span class="number">1</span>;</span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="number">4</span></span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$id</span>;</span><br><span class="line"><span class="number">5</span></span><br><span class="line">    <span class="keyword">unset</span>(<span class="variable">$id</span>);</span><br><span class="line"><span class="number">6</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="number">7</span></span><br><span class="line"><span class="title function_ invoke__">test</span>();</span><br><span class="line"><span class="number">8</span></span><br><span class="line"><span class="keyword">echo</span>(<span class="variable">$id</span>); <span class="comment">// 输出 1</span></span><br><span class="line"><span class="number">9</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">引用定位</span><br><span class="line"></span><br><span class="line">许多PHP的语法结构是通过引用机制实现的，所以上述有关引用绑定的一切也都适用于这些结构。一些结构，例如引用传递和引用返回，已经在上面提到了。其它使用引用的结构有：</span><br><span class="line"></span><br><span class="line">当用 <span class="keyword">global</span> <span class="variable">$var</span> 声明一个变量时实际上建立了一个到全局变量的引用。也就是说和这样做是相同的：</span><br><span class="line"><span class="number">01</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="number">02</span></span><br><span class="line"><span class="variable">$GLOBALS</span>[<span class="string">&quot;var1&quot;</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="number">03</span></span><br><span class="line"><span class="variable">$var</span> = &amp;<span class="variable">$GLOBALS</span>[<span class="string">&quot;var1&quot;</span>];</span><br><span class="line"><span class="number">04</span></span><br><span class="line"><span class="keyword">unset</span>(<span class="variable">$var</span>);</span><br><span class="line"><span class="number">05</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$GLOBALS</span>[<span class="string">&#x27;var1&#x27;</span>]; <span class="comment">//输出1</span></span><br><span class="line"><span class="number">06</span></span><br><span class="line"><span class="comment">//############################################</span></span><br><span class="line"><span class="number">07</span></span><br><span class="line"><span class="variable">$GLOBALS</span>[<span class="string">&quot;var1&quot;</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="number">08</span></span><br><span class="line"><span class="variable">$var</span> = &amp;<span class="variable">$GLOBALS</span>[<span class="string">&quot;var1&quot;</span>];</span><br><span class="line"><span class="number">09</span></span><br><span class="line"><span class="keyword">unset</span>(<span class="variable">$GLOBALS</span>[<span class="string">&#x27;var1&#x27;</span>]);</span><br><span class="line"><span class="number">10</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$var</span>; <span class="comment">//输出1</span></span><br><span class="line"><span class="number">11</span></span><br><span class="line"><span class="comment">//############################################</span></span><br><span class="line"><span class="number">12</span></span><br><span class="line"><span class="comment">//如果写成如下，则会出错</span></span><br><span class="line"><span class="number">13</span></span><br><span class="line"><span class="variable">$GLOBALS</span>[<span class="string">&quot;var&quot;</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="number">14</span></span><br><span class="line"><span class="variable">$var</span> = &amp;<span class="variable">$GLOBALS</span>[<span class="string">&quot;var&quot;</span>];</span><br><span class="line"><span class="number">15</span></span><br><span class="line"><span class="keyword">unset</span>(<span class="variable">$GLOBALS</span>[<span class="string">&#x27;var&#x27;</span>]);</span><br><span class="line"><span class="number">16</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$var</span>; <span class="comment">//脚本没法执行</span></span><br><span class="line"><span class="number">17</span></span><br><span class="line"><span class="comment">//###########################################</span></span><br><span class="line"><span class="number">18</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">这意味着，例如，<span class="keyword">unset</span> <span class="variable">$var</span> 不会 <span class="keyword">unset</span> 全局变量。</span><br><span class="line"></span><br><span class="line"><span class="keyword">unset</span>只是把只是断开了变量名和变量内容之间的绑定。这并不意味着变量内容被销毁了。</span><br><span class="line"></span><br><span class="line">使用<span class="keyword">isset</span>(<span class="variable">$var</span>)的时候返回 <span class="literal">false</span>。<span class="variable language_">$this</span>在一个对象的方法中，<span class="variable language_">$this</span> 永远是调用它的对象的引用。</span><br><span class="line"></span><br><span class="line">如果在一个函数内部给一个声明为 <span class="keyword">global</span> 的变量赋于一个引用，该引用只在函数内部可见。</span><br><span class="line"></span><br><span class="line">可以通过使用 <span class="variable">$GLOBALS</span> 数组避免这一点。</span><br><span class="line"></span><br><span class="line">例 在函数内引用全局变量：</span><br><span class="line"><span class="number">01</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="number">02</span></span><br><span class="line"><span class="variable">$var1</span> = <span class="string">&quot;Example variable&quot;</span>;</span><br><span class="line"><span class="number">03</span></span><br><span class="line"><span class="variable">$var2</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="number">04</span></span><br><span class="line"> </span><br><span class="line"><span class="number">05</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">global_references</span>(<span class="params"><span class="variable">$use_globals</span></span>) </span>&#123;</span><br><span class="line"><span class="number">06</span></span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$var1</span>, <span class="variable">$var2</span>;</span><br><span class="line"><span class="number">07</span></span><br><span class="line">    <span class="keyword">if</span> (!<span class="variable">$use_globals</span>) &#123;</span><br><span class="line"><span class="number">08</span></span><br><span class="line">        <span class="variable">$var2</span> = &amp;<span class="variable">$var1</span>; <span class="comment">// visible only inside the function</span></span><br><span class="line"><span class="number">09</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="number">10</span></span><br><span class="line">        <span class="variable">$GLOBALS</span>[<span class="string">&quot;var2&quot;</span>] = &amp;<span class="variable">$var1</span>; <span class="comment">// visible also in global context</span></span><br><span class="line"><span class="number">11</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="number">12</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="number">13</span></span><br><span class="line"> </span><br><span class="line"><span class="number">14</span></span><br><span class="line"><span class="title function_ invoke__">global_references</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="number">15</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;var2 is set to &#x27;<span class="subst">$var2</span>&#x27;\n&quot;</span>; <span class="comment">// var2 is set to &#x27;&#x27;</span></span><br><span class="line"><span class="number">16</span></span><br><span class="line"><span class="title function_ invoke__">global_references</span>(<span class="literal">true</span>);</span><br><span class="line"><span class="number">17</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;var2 is set to &#x27;<span class="subst">$var2</span>&#x27;\n&quot;</span>; <span class="comment">// var2 is set to &#x27;Example variable&#x27;</span></span><br><span class="line"><span class="number">18</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">把 <span class="keyword">global</span> <span class="variable">$var</span>; 当成是 <span class="variable">$var</span> = &amp;<span class="variable">$GLOBALS</span>[<span class="string">&#x27;var&#x27;</span>]; 的简写。所以 如果将其它引用赋给 <span class="variable">$var</span>， 只改变了本地变量的引用。</span><br><span class="line"></span><br><span class="line">如前所述，引用不是指针。这意味着下面的结构不会产生预期的效果：</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="variable">$bar</span> = <span class="number">3</span>;</span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params">&amp;<span class="variable">$var</span></span>) </span>&#123;</span><br><span class="line"><span class="number">4</span></span><br><span class="line">    <span class="variable">$GLOBALS</span>[<span class="string">&quot;baz&quot;</span>] = <span class="number">5</span>;</span><br><span class="line"><span class="number">5</span></span><br><span class="line">    <span class="variable">$var</span> = &amp;<span class="variable">$GLOBALS</span>[<span class="string">&quot;baz&quot;</span>];</span><br><span class="line"><span class="number">6</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="number">7</span></span><br><span class="line"><span class="title function_ invoke__">foo</span>(<span class="variable">$bar</span>);</span><br><span class="line"><span class="number">8</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$bar</span>;<span class="comment">//输出3</span></span><br><span class="line"><span class="number">9</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">这将使 foo 函数中的 <span class="variable">$var</span> 变量在函数调用时和 <span class="variable">$bar</span> 绑定在一起，但接着又被重新绑定到了 <span class="variable">$GLOBALS</span>[<span class="string">&quot;baz&quot;</span>] 上面。</span><br><span class="line"></span><br><span class="line">不可能通过引用机制将 <span class="variable">$bar</span> 在函数调用范围内绑定到别的变量上面，因为在函数 foo 中并没有变量 <span class="variable">$bar</span>（它被表示为 <span class="variable">$var</span>，但是 <span class="variable">$var</span> 只有变量内容而没有调用符号表中的名字到值的绑定）。可以使用引用返回来引用被函数选择的变量。</span><br><span class="line"></span><br><span class="line">引用php手册的<span class="variable">$GLOBALS</span>的解释:</span><br><span class="line"></span><br><span class="line">Global 变量：<span class="variable">$GLOBALS</span>，注意： <span class="variable">$GLOBALS</span> 在 PHP <span class="number">3.0</span>.<span class="number">0</span> 及以后版本中适用。</span><br><span class="line"></span><br><span class="line">由所有已定义全局变量组成的数组。变量名就是该数组的索引。这是一个“superglobal”，或者可以描述为自动全局变量。</span><br><span class="line"></span><br><span class="line">也就是说上面代码中的<span class="variable">$var1</span>和<span class="variable">$GLOBALS</span>[<span class="string">&#x27;var1&#x27;</span>]是指的同一变量，而不是<span class="number">2</span>个不同的变量！</span><br><span class="line"></span><br><span class="line">如果在一个函数内部给一个声明为 <span class="keyword">global</span> 的变量赋于一个引用，该引用只在函数内部可见。可以通过使用 <span class="variable">$GLOBALS</span> 数组避免这一点。</span><br><span class="line"></span><br><span class="line">我们都知道php中的函数所产生的变量都是函数的私有变量，那么 <span class="keyword">global</span>关键字产生的变量也肯定逃不出这个规则，<span class="keyword">global</span>在函数产生一个指向函数外部变量的别名变量，而不是真正的函数外部变量，一但改变了别名 变量的指向地址，就会发生一些意料不到情况，<span class="variable">$GLOBALS</span>[]确确实实调用是外部的变量，函数内外会始终保持一致。</span><br><span class="line"><span class="number">01</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="number">02</span></span><br><span class="line"><span class="variable">$a</span> = <span class="number">1</span>;</span><br><span class="line"><span class="number">03</span></span><br><span class="line"><span class="variable">$b</span> = <span class="number">2</span>;</span><br><span class="line"><span class="number">04</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Sum</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="number">05</span></span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$a</span>, <span class="variable">$b</span>;</span><br><span class="line"><span class="number">06</span></span><br><span class="line">    <span class="variable">$b</span> = <span class="variable">$a</span> + <span class="variable">$b</span>;</span><br><span class="line"><span class="number">07</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="number">08</span></span><br><span class="line"><span class="title function_ invoke__">Sum</span>();</span><br><span class="line"><span class="number">09</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$b</span>;</span><br><span class="line"><span class="number">10</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">输出将是 “<span class="number">3</span>″。在函数中申明 了全局变量 <span class="variable">$a</span> 和 <span class="variable">$b</span>，任何变量的所有引用变量都会指向到全局变量。</span><br><span class="line"></span><br><span class="line">怎么不是<span class="number">2</span>呢，在函数外部不是不影响吗，请注意<span class="variable">$b</span>在函数中并没有通过引用修改，而是修改的<span class="variable">$b</span>指向物理内存的值，因此外部输入为<span class="number">3</span>。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>资料整理</title>
      <link href="/posts/bc315d23.html"/>
      <url>/posts/bc315d23.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><p>一、CookiesMiddleware插件<br>该中间件使得爬取需要cookie(例如使用session)的网站成为了可能。 其追踪了web server发送的cookie，<br>并在之后的request中发送回去，就如浏览器所做的那样。</p><p>COOKIES_ENABLED<br>默认: True<br>是否启用cookies middleware。如果关闭，cookies将不会发送给web server。</p><p>COOKIES_DEBUG<br>默认: False<br>如果启用，Scrapy将记录所有在request(Cookie 请求头)发送的cookies及response接收到的cookies(Set-Cookie 接收头)。</p><p>Scrapy通过使用 cookiejar Request meta key来支持单spider追踪多cookie session。 默认情况下其使用一个cookie jar(session)，不过您可以传递一个标示符来使用多个。<br>例如:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i, url <span class="keyword">in</span> <span class="built_in">enumerate</span>(urls):</span><br><span class="line">    <span class="keyword">yield</span> scrapy.Request(<span class="string">&quot;http://www.example.com&quot;</span>, meta=&#123;<span class="string">&#x27;cookiejar&#x27;</span>: i&#125;,</span><br><span class="line">        callback=<span class="variable language_">self</span>.parse_page)</span><br></pre></td></tr></table></figure><p>需要注意的是 cookiejar meta key不是”黏性的(sticky)”。 您需要在之后的request请求中接着传递。例如:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">parse_page</span>(<span class="params">self, response</span>):</span><br><span class="line">    <span class="comment"># do some processing</span></span><br><span class="line">    <span class="keyword">return</span> scrapy.Request(<span class="string">&quot;http://www.example.com/otherpage&quot;</span>,</span><br><span class="line">        meta=&#123;<span class="string">&#x27;cookiejar&#x27;</span>: response.meta[<span class="string">&#x27;cookiejar&#x27;</span>]&#125;,</span><br><span class="line">        callback=<span class="variable language_">self</span>.parse_other_page)</span><br></pre></td></tr></table></figure><p>二、html字符串转scrapy可识别的元素</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 方法1</span></span><br><span class="line"><span class="keyword">from</span> scrapy.http <span class="keyword">import</span> HtmlResponse</span><br><span class="line"><span class="comment"># 如果本身存在response, 则url=response.url</span></span><br><span class="line">response = HtmlResponse(url=<span class="string">&quot;my HTML string&quot;</span>, body=<span class="string">&#x27;&lt;div id=&quot;test&quot;&gt;Test text&lt;/div&gt;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法2</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> scrapy <span class="keyword">import</span> Selector</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>doc = <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string"><span class="meta">... </span>&lt;div&gt;</span></span><br><span class="line"><span class="string"><span class="meta">... </span>    &lt;ul&gt;</span></span><br><span class="line"><span class="string"><span class="meta">... </span>        &lt;li class=&quot;item-0&quot;&gt;&lt;a href=&quot;link1.html&quot;&gt;first item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string"><span class="meta">... </span>        &lt;li class=&quot;item-1&quot;&gt;&lt;a href=&quot;link2.html&quot;&gt;second item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string"><span class="meta">... </span>        &lt;li class=&quot;item-inactive&quot;&gt;&lt;a href=&quot;link3.html&quot;&gt;third item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string"><span class="meta">... </span>        &lt;li class=&quot;item-1&quot;&gt;&lt;a href=&quot;link4.html&quot;&gt;fourth item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string"><span class="meta">... </span>        &lt;li class=&quot;item-0&quot;&gt;&lt;a href=&quot;link5.html&quot;&gt;fifth item&lt;/a&gt;&lt;/li&gt;</span></span><br><span class="line"><span class="string"><span class="meta">... </span>    &lt;/ul&gt;</span></span><br><span class="line"><span class="string"><span class="meta">... </span>&lt;/div&gt;</span></span><br><span class="line"><span class="string"><span class="meta">... </span>&quot;&quot;&quot;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>sel = Selector(text=doc, <span class="built_in">type</span>=<span class="string">&quot;html&quot;</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>sel.xpath(<span class="string">&#x27;//li//@href&#x27;</span>).extract()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> python </category>
          
          <category> scrapy </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>yum</title>
      <link href="/posts/c52a1a9b.html"/>
      <url>/posts/c52a1a9b.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><p>一、yum重装<br>yum依赖python，删除自带的python后导致yum无法正常使用</p><p>1.删除原有yum</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -aq|grep yum|xargs rpm -e --nodeps</span><br></pre></td></tr></table></figure><p>2.下载python和yum程序包以及依赖包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># url:http://mirrors.163.com/centos/7.5.1804/os/x86_64/Packages/</span></span><br><span class="line">wget http://mirrors.163.com/centos/7.5.1804/os/x86_64/Packages/lvm2-python-libs-2.02.177-4.el7.x86_64.rpm</span><br><span class="line">wget http://mirrors.163.com/centos/7.5.1804/os/x86_64/Packages/libxml2-python-2.9.1-6.el7_2.3.x86_64.rpm</span><br><span class="line">wget http://mirrors.163.com/centos/7.5.1804/os/x86_64/Packages/python-libs-2.7.5-68.el7.x86_64.rpm</span><br><span class="line">wget http://mirrors.163.com/centos/7.5.1804/os/x86_64/Packages/python-ipaddress-1.0.16-2.el7.noarch.rpm</span><br><span class="line">wget http://mirrors.163.com/centos/7.5.1804/os/x86_64/Packages/python-backports-1.0-8.el7.x86_64.rpm</span><br><span class="line">wget http://mirrors.163.com/centos/7.5.1804/os/x86_64/Packages/python-backports-ssl_match_hostname-3.5.0.1-1.el7.noarch.rpm</span><br><span class="line">wget http://mirrors.163.com/centos/7.5.1804/os/x86_64/Packages/python-2.7.5-68.el7.x86_64.rpm</span><br><span class="line">wget http://mirrors.163.com/centos/7.5.1804/os/x86_64/Packages/python-iniparse-0.4-9.el7.noarch.rpm</span><br><span class="line">wget http://mirrors.163.com/centos/7.5.1804/os/x86_64/Packages/python-pycurl-7.19.0-19.el7.x86_64.rpm</span><br><span class="line">wget http://mirrors.163.com/centos/7.5.1804/os/x86_64/Packages/python-urlgrabber-3.10-8.el7.noarch.rpm</span><br><span class="line">wget http://mirrors.163.com/centos/7.5.1804/os/x86_64/Packages/python-setuptools-0.9.8-7.el7.noarch.rpm</span><br><span class="line">wget http://mirrors.163.com/centos/7.5.1804/os/x86_64/Packages/python-kitchen-1.1.1-5.el7.noarch.rpm</span><br><span class="line">wget http://mirrors.163.com/centos/7.5.1804/os/x86_64/Packages/python-chardet-2.2.1-1.el7_1.noarch.rpm</span><br><span class="line">wget http://mirrors.163.com/centos/7.5.1804/os/x86_64/Packages/rpm-python-4.11.3-32.el7.x86_64.rpm</span><br><span class="line">wget http://mirrors.163.com/centos/7.5.1804/os/x86_64/Packages/yum-utils-1.1.31-45.el7.noarch.rpm</span><br><span class="line">wget http://mirrors.163.com/centos/7.5.1804/os/x86_64/Packages/yum-3.4.3-158.el7.centos.noarch.rpm</span><br><span class="line">wget http://mirrors.163.com/centos/7.5.1804/os/x86_64/Packages/yum-metadata-parser-1.1.4-10.el7.x86_64.rpm</span><br><span class="line">wget http://mirrors.163.com/centos/7.5.1804/os/x86_64/Packages/yum-plugin-aliases-1.1.31-45.el7.noarch.rpm</span><br><span class="line">wget http://mirrors.163.com/centos/7.5.1804/os/x86_64/Packages/yum-plugin-protectbase-1.1.31-45.el7.noarch.rpm</span><br><span class="line">wget http://mirrors.163.com/centos/7.5.1804/os/x86_64/Packages/yum-plugin-fastestmirror-1.1.31-45.el7.noarch.rpm</span><br></pre></td></tr></table></figure><p>3.依次执行安装命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">rpm -Uvh --replacepkgs lvm2-python-libs*.rpm</span><br><span class="line">rpm -Uvh --replacepkgs libxml2-python*.rpm</span><br><span class="line">rpm -Uvh --replacepkgs python*.rpm</span><br><span class="line">rpm -Uvh --replacepkgs rpm-python*.rpm yum*.rpm</span><br></pre></td></tr></table></figure><p>4.测试python和yum</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python</span><br><span class="line">yum</span><br></pre></td></tr></table></figure><p>二、修改yum源<br>1.进入yum源目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /etc/yum.repos.d</span><br></pre></td></tr></table></figure><p>2.下载repo文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget http://mirrors.163.com/.help/CentOS7-Base-163.repo</span><br><span class="line"><span class="comment">#wget http://mirrors.aliyun.com/repo/Centos-7.repo</span></span><br></pre></td></tr></table></figure><p>3.备份repo源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mv</span> Cents-Bash.repo Cents-Base.repo.bak</span><br></pre></td></tr></table></figure><p>4.修改下载的repo的$releasever为linux版本号</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cat /etc/redhat-release 查看版本号</span></span><br><span class="line">vim CentOS7-Base-163.repo</span><br><span class="line"><span class="comment"># 1,$ s/$releasever/7/</span></span><br></pre></td></tr></table></figure><p>5.清除缓存</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum clean all</span><br></pre></td></tr></table></figure><p>6.生成缓存</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum makecache</span><br></pre></td></tr></table></figure><p>6.1<br>yum安装时出现：Cannot retrieve metalink for repository: epel. Please verify its path and try again<br>打开&#x2F;etc&#x2F;yum.repos.d&#x2F;epel.repo，将</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[epel]</span></span><br><span class="line"><span class="attr">name</span>=Extra Packages for Enterprise Linux <span class="number">6</span> - <span class="variable">$basearch</span></span><br><span class="line"><span class="comment">#baseurl=http://download.fedoraproject.org/pub/epel/6/$basearch</span></span><br><span class="line"><span class="attr">mirrorlist</span>=https://mirrors.fedoraproject.org/metalink?repo=epel-<span class="number">6</span>&amp;arch=<span class="variable">$basearch</span></span><br></pre></td></tr></table></figure><p>修改为</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[epel]</span></span><br><span class="line"><span class="attr">name</span>=Extra Packages for Enterprise Linux <span class="number">6</span> - <span class="variable">$basearch</span></span><br><span class="line"><span class="attr">baseurl</span>=http://download.fedoraproject.org/pub/epel/<span class="number">6</span>/<span class="variable">$basearch</span></span><br><span class="line"><span class="comment">#mirrorlist=https://mirrors.fedoraproject.org/metalink?repo=epel-6&amp;arch=$basearch</span></span><br></pre></td></tr></table></figure><p>再清理源，重新安装<br>如果还是不行，修改DNS,到&#x2F;etc&#x2F;resolv.conf下添加一下：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">nameserver</span> <span class="number">8.8.8.8</span></span><br><span class="line">search localdomain</span><br></pre></td></tr></table></figure><p>然后重启network服务：service network restart</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ yum clean all</span><br></pre></td></tr></table></figure><p>7.更新yum文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum update</span><br></pre></td></tr></table></figure><p>8.查看repo列表</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum repolist</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>装饰者模式</title>
      <link href="/posts/a708a60d.html"/>
      <url>/posts/a708a60d.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by PhpStorm.</span></span><br><span class="line"><span class="comment"> * User: cat</span></span><br><span class="line"><span class="comment"> * Date: 18-11-20</span></span><br><span class="line"><span class="comment"> * Time: 下午2:29</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Beverage</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$_name</span>;</span><br><span class="line">    <span class="keyword">abstract</span> <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">Cost</span>(<span class="params"></span>)</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 被装饰者类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Coffee</span> <span class="keyword">extends</span> <span class="title">Beverage</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;_name = <span class="string">&#x27;Coffee&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">Cost</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1.00</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 以下三个类是装饰者相关类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CondimentDecorator</span> <span class="keyword">extends</span> <span class="title">Beverage</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;_name = <span class="string">&#x27;Condiment&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">Cost</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0.1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Milk</span> <span class="keyword">extends</span> <span class="title">CondimentDecorator</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$_beverage</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$beverage</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;_name = <span class="string">&#x27;Milk&#x27;</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$beverage</span> <span class="keyword">instanceof</span> Beverage)&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;_beverage = <span class="variable">$beverage</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span></span><br><span class="line">            <span class="keyword">exit</span>(<span class="string">&#x27;Failure&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">Cost</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;_beverage-&gt;<span class="title function_ invoke__">Cost</span>() + <span class="number">0.2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Sugar</span> <span class="keyword">extends</span> <span class="title">CondimentDecorator</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$_beverage</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$beverage</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;_name = <span class="string">&#x27;Sugar&#x27;</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$beverage</span> <span class="keyword">instanceof</span> Beverage)&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;_beverage = <span class="variable">$beverage</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">exit</span>(<span class="string">&#x27;Failure&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">Cost</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;_beverage-&gt;<span class="title function_ invoke__">Cost</span>() + <span class="number">0.2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Test Case</span></span><br><span class="line"><span class="comment">//1.拿杯咖啡</span></span><br><span class="line"><span class="variable">$coffee</span> = <span class="keyword">new</span> <span class="title class_">Coffee</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">//2.加点牛奶</span></span><br><span class="line"><span class="variable">$coffee</span> = <span class="keyword">new</span> <span class="title class_">Milk</span>(<span class="variable">$coffee</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//3.加点糖</span></span><br><span class="line"><span class="variable">$coffee</span> = <span class="keyword">new</span> <span class="title class_">Sugar</span>(<span class="variable">$coffee</span>);</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">printf</span>(<span class="string">&quot;Coffee Total:%0.2f元\n&quot;</span>,<span class="variable">$coffee</span>-&gt;<span class="title function_ invoke__">Cost</span>());</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> php </category>
          
          <category> 设计模式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 设计模式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo安装</title>
      <link href="/posts/93c315da.html"/>
      <url>/posts/93c315da.html</url>
      
        <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">1.在安装nodeJs前提下安装hexo</span><br><span class="line">npm install -g hexo-cli</span><br><span class="line"></span><br><span class="line">2.建立hexo软连接</span><br><span class="line"><span class="built_in">ln</span> -s /usr/local/webserver/nodeJs/bin/hexo /usr/local/bin/</span><br><span class="line"></span><br><span class="line">3.初始化</span><br><span class="line">hexo init folder</span><br><span class="line"><span class="built_in">cd</span> folder</span><br><span class="line">npm install</span><br><span class="line"><span class="comment"># 已存在hexo项目时</span></span><br><span class="line">npm install hexo --save</span><br><span class="line"></span><br><span class="line">4.安装hexo-server</span><br><span class="line">npm install hexo-server --save</span><br><span class="line"></span><br><span class="line">5.生成文件</span><br><span class="line">hexo g -d</span><br><span class="line"></span><br><span class="line">6.运行</span><br><span class="line"><span class="comment"># 无需执行hexo g -d</span></span><br><span class="line">hexo server</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安装文档 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nodeJs安装</title>
      <link href="/posts/7479241f.html"/>
      <url>/posts/7479241f.html</url>
      
        <content type="html"><![CDATA[<p>1.下载</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ wget https://nodejs.org/dist/v10.<span class="number">13.0</span>/<span class="keyword">node</span><span class="title">-v10</span>.<span class="number">13.0</span>-linux-x64.tar.xz</span><br><span class="line">$ tar xvf <span class="keyword">node</span><span class="title">-v10</span>.<span class="number">13.0</span>-linux-x64.tar.xz</span><br></pre></td></tr></table></figure><p>2.建立软连接</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ln -s <span class="regexp">/usr/</span>local<span class="regexp">/webserver/</span>nodeJs<span class="regexp">/bin/</span>npm <span class="regexp">/usr/</span>local<span class="regexp">/bin/</span></span><br><span class="line">$ ln -s <span class="regexp">/usr/</span>local<span class="regexp">/webserver/</span>nodeJs<span class="regexp">/bin/</span>node <span class="regexp">/usr/</span>local<span class="regexp">/bin/</span></span><br></pre></td></tr></table></figure><p>3.检测安装</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="keyword">node</span> <span class="title">-v</span></span><br></pre></td></tr></table></figure><p>4.修改源</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir ~/.pip</span><br><span class="line"></span><br><span class="line">$ vim ~/.pip.conf</span><br><span class="line"># 在.pip目录创建并编辑pip.conf</span><br><span class="line"># pip安装需要使用的https加密，所以在此需要添加<span class="keyword">trusted</span>-host </span><br><span class="line">[<span class="keyword">global</span>]</span><br><span class="line"><span class="keyword">trusted</span>-host = pypi.tuna.tsinghua.edu.cn</span><br><span class="line"><span class="keyword">index</span>-url = https://pypi.tuna.tsinghua.edu.cn/simple/</span><br></pre></td></tr></table></figure><p>5.问题处理<br>5.1. syscall symlink错误</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm ERR! code EPROTO</span><br><span class="line">npm ERR! errno -71</span><br><span class="line">npm ERR! syscall symlink</span><br><span class="line"></span><br><span class="line">npm ERR! EPROTO: protocol error, symlink</span><br></pre></td></tr></table></figure><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">npm</span>默认会使用symbolic links来安装组件，也即我们在linux系统里经常用的软链接（ln -s）或硬链接(ln)，但是有些文件系统不支持文件链接，  </span><br><span class="line">比如Windows（或者说出于安全原因禁用了），有时候linux系统运行在有windows分区的硬盘上也不支持链接，比如virtualbox在windows主机上默认禁止在共享文件夹里使用symbolic links,当然也是出于安全考虑。  </span><br><span class="line">那么<span class="built_in">npm</span> install默认需要使用symbolic link，而且这也本身也是<span class="built_in">npm</span>比较重要的一个特性，但如果我们的系统不支持这一属性的话，就会报上面的错误了。  </span><br><span class="line">解决办法，就是在<span class="built_in">npm</span> install的时候加上一个参数，就是--<span class="literal">no</span>-bin-links，也即<span class="built_in">npm</span> install --<span class="literal">no</span>-bin-links:  </span><br><span class="line">也即是说，为了防止syscall symlink错误，如果你是在windows使用<span class="built_in">npm</span>，或者即使在homestead里，但主机是windows，那么每次你执行<span class="built_in">npm</span>安装或更新组件相关的命令时，都要在后面加上--<span class="literal">no</span>-bin-links，  </span><br><span class="line">比如你要<span class="built_in">npm</span> update --<span class="literal">no</span>-bin-links,你也要<span class="built_in">npm</span> rebuild node-sass -<span class="literal">no</span>-bin-links,确实挺麻烦的  </span><br><span class="line">当然，你也可以整体设置一下<span class="built_in">npm</span>，让它默认不再使用文件链接功能了，执行：  </span><br><span class="line">$ <span class="built_in">npm</span> config set bin-links <span class="literal">false</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> js </category>
          
          <category> nodeJs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安装文档 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php安装扩展</title>
      <link href="/posts/5cca63ee.html"/>
      <url>/posts/5cca63ee.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="安装redis扩展包"><a href="#安装redis扩展包" class="headerlink" title="安装redis扩展包"></a>安装redis扩展包</h1><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">unzip phpredis-develop.zip</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成扩展配置</span></span><br><span class="line">cd phpredis-develop</span><br><span class="line"><span class="regexp">/usr/</span>local<span class="regexp">/webserver/</span>php7<span class="regexp">/bin/</span>phpize</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译Redis</span></span><br><span class="line">.<span class="regexp">/configure --with-php-config=/u</span>sr<span class="regexp">/local/</span>webserver<span class="regexp">/php7/</span>bin/php-config</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><h1 id="安装zip扩展"><a href="#安装zip扩展" class="headerlink" title="安装zip扩展"></a>安装zip扩展</h1><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载</span></span><br><span class="line">wget http:<span class="regexp">//</span>pecl.php.net<span class="regexp">/get/</span>zip</span><br><span class="line">tar xzvf zip</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成扩展配置</span></span><br><span class="line">cd zip</span><br><span class="line"><span class="regexp">/usr/</span>local<span class="regexp">/webserver/</span>php7<span class="regexp">/bin/</span>phpize</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译</span></span><br><span class="line">.<span class="regexp">/configure --with-php-config=/u</span>sr<span class="regexp">/local/</span>webserver<span class="regexp">/php/</span>bin/php-config</span><br><span class="line"></span><br><span class="line"><span class="comment"># 错误信息：</span></span><br><span class="line">libzip not found：</span><br><span class="line"><span class="comment"># 重新安装libzip</span></span><br><span class="line">yum remove libzip -y</span><br><span class="line">wget https:<span class="regexp">//</span>nih.at<span class="regexp">/libzip/</span>libzip-<span class="number">1.2</span>.<span class="number">0</span>.tar.gz</span><br><span class="line">tar -zxvf libzip-<span class="number">1.2</span>.<span class="number">0</span>.tar.gz</span><br><span class="line">cd libzip-<span class="number">1.2</span>.<span class="number">0</span></span><br><span class="line">./configure</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line"><span class="comment"># zipconf.h not found</span></span><br><span class="line">find <span class="regexp">/usr/</span>local -iname <span class="string">&#x27;zipconf.h&#x27;</span></span><br><span class="line">ln -s <span class="regexp">/usr/</span>local<span class="regexp">/lib/</span>libzip<span class="regexp">/include/</span>zipconf.h <span class="regexp">/usr/</span>local/include </span><br></pre></td></tr></table></figure><h1 id="curl安装"><a href="#curl安装" class="headerlink" title="curl安装"></a>curl安装</h1><p>如果编译安装时，已有–with-curl，需要重新编译，无法在php.ini中覆盖</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> php源码目录下/ext/curl/</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">phpize</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">--with-curl为安装curl的目录,如果直接使用当前服务器的版本，则无需指定目录</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">存在需要php curl版本和服务器版本不同时，必须指定目录</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">./configure --with-php-config=/usr/local/webserver/php/bin/php-config --with-curl=/usr/local/webserver/curl-7.29.0/</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">make &amp;&amp; make install</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安装文档 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>redis常用命令</title>
      <link href="/posts/c3982ec0.html"/>
      <url>/posts/c3982ec0.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#-*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># redis keys 获取占用内存后写入文件</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">filePath = <span class="string">&#x27;./&#x27;</span></span><br><span class="line">execCommand = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="comment"># 直接读取文件</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;%sredisKeys.log&#x27;</span> % filePath, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    fileInfo = f.read()</span><br><span class="line"><span class="comment"># 通过命令行获取</span></span><br><span class="line"><span class="comment"># fileInfo = os.popen(&quot;%sredis-cli keys &#x27;*&#x27;&quot; % execCommand).read()</span></span><br><span class="line"></span><br><span class="line">keysInfoDict = &#123;&#125;</span><br><span class="line">subReg = re.<span class="built_in">compile</span>(<span class="string">r&#x27;\s*\d+\)\s*&#x27;</span>)</span><br><span class="line">redisKeysReg = re.<span class="built_in">compile</span>(<span class="string">r&#x27;[0-9a-zA-Z:-_]+&#x27;</span>)</span><br><span class="line">memoryReg = re.<span class="built_in">compile</span>(<span class="string">r&#x27;\d+&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> redisKey <span class="keyword">in</span> fileInfo.split(<span class="string">&#x27;\n&#x27;</span>):</span><br><span class="line">    redisKey = re.sub(subReg, <span class="string">&#x27;&#x27;</span>, redisKey)</span><br><span class="line">    redisKeyRes = re.search(redisKeysReg, redisKey)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> redisKeyRes:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    redisKey = redisKeyRes.group()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 返回字节</span></span><br><span class="line">    memoryUsageStr = os.popen(<span class="string">&quot;%sredis-cli memory usage %s&quot;</span> % (execCommand, redisKey)).read()</span><br><span class="line">    memoryUsageRes = re.search(memoryReg, memoryUsageStr)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> memoryUsageRes:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    memoryUsage = memoryUsageRes.group()</span><br><span class="line">    <span class="built_in">print</span>(redisKey, memoryUsage)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> memoryUsage:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        memoryUsage = <span class="built_in">int</span>(memoryUsage)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    infoStr = <span class="string">&quot;%s %smb:%skb:%sb\n&quot;</span> % (redisKey, <span class="built_in">int</span>(memoryUsage / <span class="number">1024</span> / <span class="number">1024</span>), <span class="built_in">int</span>(memoryUsage / <span class="number">1024</span>), memoryUsage)</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;%sredisKeysMemory.log&#x27;</span> % filePath, <span class="string">&#x27;a+&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(infoStr)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 常用命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>redis常用命令</title>
      <link href="/posts/c3982ec0.html"/>
      <url>/posts/c3982ec0.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h2 id="MONITOR"><a href="#MONITOR" class="headerlink" title="MONITOR"></a>MONITOR</h2><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">MONITOR 是一个调试命令，返回服务器处理的每一个命令，它能帮助我们了解在数据库上发生了什么操作，</span><br><span class="line">可以通过redis-cli和telnet命令使用.</span><br><span class="line">$ redis-cli<span class="built_in"> monitor</span></span><br><span class="line"><span class="built_in"></span>$ telnet localhost 6379</span><br></pre></td></tr></table></figure><h2 id="redis集群下删除keys"><a href="#redis集群下删除keys" class="headerlink" title="redis集群下删除keys"></a>redis集群下删除keys</h2><p>1.命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./redis-cli -c -h 192.168.1.213 -p 7000 keys <span class="string">&#x27;sell:*&#x27;</span> | xargs -i ./redis-cli -c -h 192.168.1.213 -p 7000 del &#123;&#125;</span><br></pre></td></tr></table></figure><p>2.脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#redis集群删除redis keys</span></span><br><span class="line">REDIS_SERVER=192.168.1.213</span><br><span class="line">PORT1=7000</span><br><span class="line">PORT2=7001</span><br><span class="line">PORT3=7002</span><br><span class="line"></span><br><span class="line">REDIS_COMMAND=/usr/local/webserver/redis/bin/redis-cli</span><br><span class="line"><span class="keyword">if</span> [ -z <span class="string">&quot;<span class="variable">$1</span>&quot;</span> ];<span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;empty param&quot;</span></span><br><span class="line">    <span class="built_in">exit</span> 0</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$REDIS_COMMAND</span> -c -h <span class="variable">$REDIS_SERVER</span> -p <span class="variable">$PORT1</span> keys <span class="variable">$1</span> | xargs -i <span class="variable">$REDIS_COMMAND</span> -h <span class="variable">$REDIS_SERVER</span> -p <span class="variable">$PORT1</span> del &#123;&#125; &gt;/dev/null 2&gt;1&amp;</span><br><span class="line"><span class="variable">$REDIS_COMMAND</span> -c -h <span class="variable">$REDIS_SERVER</span> -p <span class="variable">$PORT2</span> keys <span class="variable">$1</span> | xargs -i <span class="variable">$REDIS_COMMAND</span> -h <span class="variable">$REDIS_SERVER</span> -p <span class="variable">$PORT2</span> del &#123;&#125; &gt;/dev/null 2&gt;1&amp;</span><br><span class="line"><span class="variable">$REDIS_COMMAND</span> -c -h <span class="variable">$REDIS_SERVER</span> -p <span class="variable">$PORT3</span> keys <span class="variable">$1</span> | xargs -i <span class="variable">$REDIS_COMMAND</span> -h <span class="variable">$REDIS_SERVER</span> -p <span class="variable">$PORT3</span> del &#123;&#125; &gt;/dev/null 2&gt;1&amp;</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;del ok&#x27;</span></span><br></pre></td></tr></table></figure><h1 id="windows中将redis添加为服务"><a href="#windows中将redis添加为服务" class="headerlink" title="windows中将redis添加为服务"></a>windows中将redis添加为服务</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ redis-server --service-install conf\redis.windows-sell.conf --service-name serviceName --loglevel verbose</span><br><span class="line"><span class="comment"># 开始服务</span></span><br><span class="line">$ redis-server --service-start --service-name redis6371</span><br><span class="line"><span class="comment"># 停止服务</span></span><br><span class="line">redis-server --service-stop --service-name redis6371</span><br><span class="line"></span><br><span class="line"><span class="comment"># 停止服务</span></span><br><span class="line">$ Net Stop serviceName</span><br><span class="line"><span class="comment"># 删除服务</span></span><br><span class="line">$ sc delete serviceName</span><br></pre></td></tr></table></figure><h1 id="查询内存占用"><a href="#查询内存占用" class="headerlink" title="查询内存占用"></a>查询内存占用</h1><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># memory usage key [SAMPLES count]</span></span><br><span class="line"><span class="comment"># 起始版本：4.0.0</span></span><br><span class="line"><span class="comment"># 时间复杂度：O(N) where N is the number of samples.</span></span><br><span class="line"><span class="comment"># 命令MEMORY USAGE 给出一个key和它值在RAM中占用的字节数</span></span><br><span class="line"><span class="comment"># 返回的结果是key的值以及为管理该key分配的内存总字节数</span></span><br><span class="line"><span class="comment"># 对于嵌套数据类型，可以使用选项SAMPLES，其中COUNT表示抽样的元素个数，默认值为5。当需要抽样所有元素时，使用SAMPLES 0</span></span><br><span class="line"><span class="variable">$ </span>redis-cli memory usage key</span><br><span class="line"><span class="comment"># 对于嵌套类型</span></span><br><span class="line"><span class="variable">$ </span>redis-cli memory usage key samples <span class="number">0</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 常用命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>UA</title>
      <link href="/posts/87cecae8.html"/>
      <url>/posts/87cecae8.html</url>
      
        <content type="html"><![CDATA[<figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># IOS-QQBrowser</span></span><br><span class="line"><span class="attribute">5</span>.<span class="number">0</span>(iPhone; CPU iPhone OS <span class="number">12</span>_0 like MAC OS X) AppleWebKit/<span class="number">605</span>.<span class="number">1</span>.<span class="number">15</span>(KHTML, like Gecko) Version/<span class="number">12</span>.<span class="number">0</span> MQQBrowser/<span class="number">8</span>.<span class="number">9</span>.<span class="number">1</span> Mobile/<span class="number">15</span>E148 Safari/<span class="number">604</span>.<span class="number">1</span> MttCustomUA/<span class="number">2</span> QBWebViewType/<span class="number">1</span> WKType/<span class="number">1</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> UA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> UA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端记录</title>
      <link href="/posts/fa72dcb4.html"/>
      <url>/posts/fa72dcb4.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="html空链接导致页面二次加载"><a href="#html空链接导致页面二次加载" class="headerlink" title="html空链接导致页面二次加载"></a>html空链接导致页面二次加载</h1><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">避免空链接属性空的链接属性是指<span class="selector-tag">img</span>、link、script、ifrrame元素的<span class="attribute">src</span>或href属性被设置了，</span><br><span class="line">但是属性却为空。如，我们创建了一个图片，并且暂时设置图片的地址为空，希望在未来动态的去修改它。</span><br><span class="line">但是即使图片的地址为空，浏览器依旧会以默认的规则去请求空地址： </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>API接口</title>
      <link href="/posts/43c6bb40.html"/>
      <url>/posts/43c6bb40.html</url>
      
        <content type="html"><![CDATA[<h1 id="获取经纬度"><a href="#获取经纬度" class="headerlink" title="获取经纬度"></a>获取经纬度</h1><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://api.map.baidu.com/geocoder?address=地址<span class="variable">&amp;output</span>=json<span class="variable">&amp;key</span>=<span class="variable">&amp;city</span>=城市</span><br></pre></td></tr></table></figure><h1 id="支持https"><a href="#支持https" class="headerlink" title="支持https"></a>支持https</h1><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">详见 </span><br><span class="line">http:<span class="regexp">//</span>lbsyun.baidu.com<span class="regexp">/index.php?title=jspopular/gui</span>de/introduction<span class="comment">#Https_.E8.AF.B4.E6.98.8E </span></span><br><span class="line">摘录如下： </span><br><span class="line">注意：仅 JavaScript API V2.<span class="number">0</span> 版本支持 https ，其他 JavaScript API 版本均不支持。使用 https 服务，请先检查您的版本。 </span><br><span class="line">配置 </span><br><span class="line"><span class="number">1</span>. 如果使用 JavaScript API ，需要加一个特殊字段 (s=<span class="number">1</span>)： </span><br><span class="line">https:<span class="regexp">//</span>api.map.baidu.com/api?v=<span class="number">2.0</span>&amp;ak=你的密钥&amp;s=<span class="number">1</span> ；</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> API </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>git常用命令</title>
      <link href="/posts/423abe9e.html"/>
      <url>/posts/423abe9e.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><p>@link <a href="https://www.php.cn/manual/view/34971.html">https://www.php.cn/manual/view/34971.html</a></p><p>一般来说，日常使用只要记住下图6个命令，就可以了。但是熟练使用，恐怕要记住60～100个命令。<br>下面常用 Git 命令清单。几个专用名词的译名如下。</p><p>Workspace：工作区<br>Index &#x2F; Stage：暂存区<br>Repository：仓库区（或本地仓库）<br>Remote：远程仓库</p><h1 id="一、新建代码库"><a href="#一、新建代码库" class="headerlink" title="一、新建代码库"></a>一、新建代码库</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">在当前目录新建一个Git代码库</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git init</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">新建一个目录，将其初始化为Git代码库</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git init [project-name]</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">下载一个项目和它的整个代码历史</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">clone</span> [url]</span></span><br></pre></td></tr></table></figure><h1 id="二、配置"><a href="#二、配置" class="headerlink" title="二、配置"></a>二、配置</h1><p>Git的设置文件为.gitconfig，它可以在用户主目录下（全局配置），也可以在项目目录下（项目配置）。</p><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">#</span> 配置用户和邮箱</span><br><span class="line"><span class="variable">git</span> <span class="variable">config</span> <span class="operator">--</span><span class="variable">global</span> <span class="variable">user</span><span class="operator">.</span><span class="variable">name</span> <span class="string">&quot;Your Name&quot;</span></span><br><span class="line"><span class="variable">git</span> <span class="variable">config</span> <span class="operator">--</span><span class="variable">global</span> <span class="variable">user</span><span class="operator">.</span><span class="variable">email</span> <span class="string">&quot;email@example.com&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="type">#</span> 创建<span class="variable">SSH</span> <span class="built_in">Key</span></span><br><span class="line"><span class="variable">ssh</span><span class="operator">-</span><span class="variable">keygen</span> <span class="operator">-</span><span class="variable">t</span> <span class="variable">rsa</span> <span class="operator">-</span><span class="built_in">C</span> <span class="string">&quot;youremail@example.com&quot;</span></span><br><span class="line">如果一切顺利的话，可以在用户主目录里找到<span class="operator">.</span><span class="variable">ssh</span>目录，里面有<span class="type">id_rsa</span>和<span class="type">id_rsa</span><span class="operator">.</span><span class="variable">pub</span>两个文件，这两个就是<span class="variable">SSH</span> <span class="built_in">Key</span>的秘钥对，<span class="type">id_rsa</span>是私钥，不能泄露出去，<span class="type">id_rsa</span><span class="operator">.</span><span class="variable">pub</span>是公钥，可以放心地告诉任何人。</span><br><span class="line">登陆<span class="variable">GitHub</span>，打开“<span class="variable">Account</span> <span class="variable">settings</span>”，“<span class="variable">SSH</span> <span class="built_in">Keys</span>”页面：</span><br><span class="line">然后，点“<span class="variable">Add</span> <span class="variable">SSH</span> <span class="built_in">Key</span>”，填上任意<span class="variable">Title</span>，在<span class="built_in">Key</span>文本框里粘贴<span class="type">id_rsa</span><span class="operator">.</span><span class="variable">pub</span>文件的内容：</span><br></pre></td></tr></table></figure><h2 id="1-设置和取消代理"><a href="#1-设置和取消代理" class="headerlink" title="1. 设置和取消代理"></a>1. 设置和取消代理</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">设置http代理</span><br><span class="line">git config <span class="attr">--global</span> http<span class="selector-class">.proxy</span> http:<span class="comment">//127.0.0.1:1080</span></span><br><span class="line">设置https代理</span><br><span class="line">git config <span class="attr">--global</span> https<span class="selector-class">.proxy</span> https:<span class="comment">//127.0.0.1:1080</span></span><br><span class="line">取消代理</span><br><span class="line">git config <span class="attr">--global</span> <span class="attr">--unset</span> http<span class="selector-class">.proxy</span></span><br><span class="line">git config <span class="attr">--global</span> <span class="attr">--unset</span> https<span class="selector-class">.proxy</span></span><br><span class="line">设置socks5代理</span><br><span class="line">git config <span class="attr">--global</span> http<span class="selector-class">.proxy</span> <span class="string">&#x27;socks5://127.0.0.1:1080&#x27;</span></span><br><span class="line">git config <span class="attr">--global</span> https<span class="selector-class">.proxy</span> <span class="string">&#x27;socks5://127.0.0.1:1080&#x27;</span></span><br><span class="line">取消代理</span><br><span class="line">git config <span class="attr">--global</span> <span class="attr">--unset</span>  http<span class="selector-class">.proxy</span></span><br><span class="line">git config <span class="attr">--global</span> <span class="attr">--unset</span>  https<span class="selector-class">.proxy</span></span><br><span class="line">只对github<span class="selector-class">.com</span></span><br><span class="line">git config <span class="attr">--global</span> http<span class="selector-class">.https</span>:<span class="comment">//github.com.proxy socks5://127.0.0.1:1080</span></span><br><span class="line">#取消代理</span><br><span class="line">git config <span class="attr">--global</span> <span class="attr">--unset</span> http<span class="selector-class">.https</span>:<span class="comment">//github.com.proxy</span></span><br></pre></td></tr></table></figure><h2 id="2-显示当前的Git配置"><a href="#2-显示当前的Git配置" class="headerlink" title="2. 显示当前的Git配置"></a>2. 显示当前的Git配置</h2><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="keyword">config</span> --list</span><br><span class="line"></span><br><span class="line"># 编辑Git配置文件</span><br><span class="line">$ git <span class="keyword">config</span> -e [--<span class="keyword">global</span>]</span><br><span class="line"></span><br><span class="line"># 设置提交代码时的用户信息</span><br><span class="line">$ git <span class="keyword">config</span> [--<span class="keyword">global</span>] user<span class="variable">.name</span> <span class="string">&quot;[name]&quot;</span></span><br><span class="line">$ git <span class="keyword">config</span> [--<span class="keyword">global</span>] user<span class="variable">.email</span> <span class="string">&quot;[email address]&quot;</span></span><br></pre></td></tr></table></figure><h1 id="三、增加-删除文件"><a href="#三、增加-删除文件" class="headerlink" title="三、增加&#x2F;删除文件"></a>三、增加&#x2F;删除文件</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">添加指定文件到暂存区</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git add [file1] [file2] ...</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">添加指定目录到暂存区，包括子目录</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git add [<span class="built_in">dir</span>]</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">添加当前目录的所有文件到暂存区</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git add .</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">添加每个变化前，都会要求确认</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">对于同一个文件的多处变化，可以实现分次提交</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git add -p</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">删除工作区文件，并且将这次删除放入暂存区</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">rm</span> [file1] [file2] ...</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">停止追踪指定文件，但该文件会保留在工作区</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">rm</span> --cached [file]</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">改名文件，并且将这个改名放入暂存区</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">mv</span> [file-original] [file-renamed]</span></span><br></pre></td></tr></table></figure><h1 id="四、代码提交"><a href="#四、代码提交" class="headerlink" title="四、代码提交"></a>四、代码提交</h1><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 提交暂存区到仓库区</span></span><br><span class="line"><span class="variable">$ </span>git commit -m [message]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 提交暂存区的指定文件到仓库区</span></span><br><span class="line"><span class="variable">$ </span>git commit [file1] [file2] ... -m [message]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 提交工作区自上次commit之后的变化，直接到仓库区</span></span><br><span class="line"><span class="variable">$ </span>git commit -a</span><br><span class="line"></span><br><span class="line"><span class="comment"># 提交时显示所有diff信息</span></span><br><span class="line"><span class="variable">$ </span>git commit -v</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用一次新的commit，替代上一次提交</span></span><br><span class="line"><span class="comment"># 如果代码没有任何新变化，则用来改写上一次commit的提交信息</span></span><br><span class="line"><span class="variable">$ </span>git commit --amend -m [message]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重做上一次commit，并包括指定文件的新变化</span></span><br><span class="line"><span class="variable">$ </span>git commit --amend [file1] [file2] ...</span><br></pre></td></tr></table></figure><h1 id="五、分支"><a href="#五、分支" class="headerlink" title="五、分支"></a>五、分支</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">列出所有本地分支</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git branch</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">列出所有远程分支</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git branch -r</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">列出所有本地分支和远程分支</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git branch -a</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">新建一个分支，但依然停留在当前分支</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git branch [branch-name]</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">新建一个分支，并切换到该分支</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git checkout -b [branch]</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">新建一个分支，指向指定commit</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git branch [branch] [commit]</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">新建一个分支，与指定的远程分支建立追踪关系</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git branch --track [branch] [remote-branch]</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">切换到指定分支，并更新工作区</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git checkout [branch-name]</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">切换到上一个分支</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git checkout -</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">建立追踪关系，在现有分支与指定的远程分支之间</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git branch --set-upstream-to=origin/remote_branch branch</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">合并指定分支到当前分支</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git merge [branch]</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">合并指定分支所有提交为一条，再commit后提交到当前分支</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git merge --squash branchname</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">取消合并</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git merge --abort</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">选择一个commit，合并进当前分支</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git cherry-pick [commit]</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">删除分支</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git branch -d [branch-name]</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">删除远程分支</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git push origin --delete [branch-name]</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git branch -dr [remote/branch]</span></span><br></pre></td></tr></table></figure><h1 id="六、标签"><a href="#六、标签" class="headerlink" title="六、标签"></a>六、标签</h1><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 列出所有tag</span></span><br><span class="line">$ git <span class="keyword">tag</span></span><br><span class="line"></span><br><span class="line"><span class="title"># 显示tag</span>以及注释信息</span><br><span class="line">$ git <span class="keyword">tag</span> <span class="title">-n</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 新建一个tag在当前commit</span></span><br><span class="line">$ git <span class="keyword">tag</span> <span class="title">[tag</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新建一个tag在指定commit</span></span><br><span class="line">$ git <span class="keyword">tag</span> <span class="title">[tag</span>] [commit]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除本地tag</span></span><br><span class="line">$ git <span class="keyword">tag</span> <span class="title">-d</span> [<span class="keyword">tag</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除远程tag</span></span><br><span class="line">$ git push origin :refs/tags/[tagName]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看tag信息</span></span><br><span class="line">$ git show [<span class="keyword">tag</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 提交指定tag</span></span><br><span class="line">$ git push [remote] [<span class="keyword">tag</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 提交所有tag</span></span><br><span class="line">$ git push [remote] --tags</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新建一个分支，指向某个tag</span></span><br><span class="line">$ git checkout -b [branch] [<span class="keyword">tag</span>]</span><br></pre></td></tr></table></figure><h1 id="七、查看信息"><a href="#七、查看信息" class="headerlink" title="七、查看信息"></a>七、查看信息</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">显示有变更的文件</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git status</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">显示当前分支的版本历史</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">log</span></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">显示指定时间指定提交者历史记录</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">log</span> --after=<span class="string">&quot;2020-01-01&quot;</span> --before=<span class="string">&quot;2021-01-01&quot;</span> --committer=xxx --<span class="built_in">date</span>=format:<span class="string">&#x27;%Y-%m-%d %H:%M:%S&#x27;</span> --pretty=format:<span class="string">&quot;%h - %an, %ci : %s&quot;</span></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看已commit未push到远程代码库的提交详情</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">log</span> master ^origin/master</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">显示commit历史，以及每次commit发生变更的文件</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">log</span> --<span class="built_in">stat</span></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">显示某个commit之后的所有变动，每个commit占据一行</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">log</span> [tag] HEAD --pretty=format:%s</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">显示某个commit之后的所有变动，其<span class="string">&quot;提交说明&quot;</span>必须符合搜索条件</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">log</span> [tag] HEAD --grep feature</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">显示某个文件的版本历史，包括文件改名</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">log</span> --follow [file]</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git whatchanged [file]</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">显示指定文件相关的每一次diff</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">log</span> -p [file]</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">显示过去5次提交</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">log</span> -5 --pretty --oneline</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">显示包含在 feature 分支而不在 master 分支中所有的提交</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">log</span> master..feature</span> </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">忽略合并记录</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">log</span> --no-merge</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">显示新增、修改、删除的文件清单</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">log</span> --name-status</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">显示 ASCII 图形表示的分支合并历史</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">log</span> --graph</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">一行显示,只显示哈希值和提交说明</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">log</span> --pretty --oneline</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">控制显示的记录格式</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">%H-完整哈希 %h-简要哈希 %an-名字 %ae-邮箱 %ad-修订日期 %ar修订日期(多久前)(其中a为作者，c为commiter) %s-提交说明</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">log</span> --pretty=format:<span class="string">&quot;%h - %an, %ar : %s&quot;</span></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">git <span class="built_in">log</span> 搜索开始</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">仅显示指定时间之前的提交</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">log</span> --before=<span class="string">&quot;2019-01-14&quot;</span></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">仅显示指定时间之后的提交</span> </span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">log</span> --since=<span class="string">&quot;2018-12-10&quot;</span></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">仅显示指定作者相关的提交</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">log</span> --committer=thisofcat</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">仅显示指定提交者相关的提交</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">log</span> --committer=thisofcat</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">按照commit描述</span></span><br><span class="line">git log --grep=&quot;commit描述&quot;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">按照内容搜索 S-字符串 G-正则</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">log</span> -S<span class="string">&quot;&lt;string&gt;&quot;</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git <span class="built_in">log</span> -G<span class="string">&quot;&lt;string&gt;&quot;</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">git <span class="built_in">log</span> 搜索结束</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">显示所有提交过的用户，按提交次数排序</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git shortlog -sn</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">显示指定文件是什么人在什么时间修改过</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git blame [file]</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">显示暂存区和工作区的差异</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git diff</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">显示暂存区和上一个commit的差异</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git diff --cached [file]</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">显示工作区与当前分支最新commit之间的差异</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git diff HEAD</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">显示两次提交之间的差异</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git diff [first-branch]...[second-branch]</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">显示今天你写了多少行代码</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git diff --shortstat <span class="string">&quot;@&#123;0 day ago&#125;&quot;</span></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">通过文件状态进行筛选, 仅添加（A），复制（C），删除（D），修改（M），重命名（R），其类型（即常规文件，符号链接，子模块，...）更改（T），Unmerged（U）</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git --diff-filter=[(A|C|D|M|R|T|U|X|B)…*]</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">显示某次提交的元数据和内容变化</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git show [commit]</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">显示某次提交发生变化的文件</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git show --name-only [commit]</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">显示某次提交时，某个文件的内容</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git show [commit]:[filename]</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">显示当前分支的最近几次提交</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git reflog</span></span><br></pre></td></tr></table></figure><h1 id="八、远程同步"><a href="#八、远程同步" class="headerlink" title="八、远程同步"></a>八、远程同步</h1><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载远程仓库的所有变动</span></span><br><span class="line"><span class="variable">$</span> git fetch [<span class="type">remote</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示所有远程仓库</span></span><br><span class="line"><span class="variable">$</span> git remote <span class="literal">-v</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示某个远程仓库的信息</span></span><br><span class="line"><span class="variable">$</span> git remote show [<span class="type">remote</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 增加一个新的远程仓库</span></span><br><span class="line"><span class="variable">$</span> git remote add origin git@git.coding.net:cats/thisofcat.git</span><br><span class="line"></span><br><span class="line"><span class="comment"># 增加一个新的远程仓库，并命名</span></span><br><span class="line"><span class="variable">$</span> git remote add [<span class="type">shortname</span>] [<span class="type">url</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改远程仓库</span></span><br><span class="line"><span class="variable">$</span> git remote <span class="built_in">set-url</span> origin url</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除远程仓库地址</span></span><br><span class="line"><span class="variable">$</span> git remote <span class="built_in">rm</span> origin</span><br><span class="line"></span><br><span class="line"><span class="comment"># 取回远程仓库的变化，并与本地分支合并</span></span><br><span class="line"><span class="variable">$</span> git pull [<span class="type">remote</span>] [<span class="type">branch</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 上传本地指定分支到远程仓库</span></span><br><span class="line"><span class="variable">$</span> git push [<span class="type">remote</span>] [<span class="type">branch</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 强行推送当前分支到远程仓库，即使有冲突</span></span><br><span class="line"><span class="variable">$</span> git push [<span class="type">remote</span>] <span class="literal">--force</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 推送所有分支到远程仓库</span></span><br><span class="line"><span class="variable">$</span> git push [<span class="type">remote</span>] <span class="literal">--all</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除本地存在，远程不存在的分支</span></span><br><span class="line"><span class="variable">$</span> git remote prune 指定分支(删除指定分支)</span><br><span class="line"><span class="variable">$</span> git remote prune origin(删除所有)</span><br></pre></td></tr></table></figure><h1 id="九、撤销"><a href="#九、撤销" class="headerlink" title="九、撤销"></a>九、撤销</h1><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 恢复暂存区的指定文件到工作区</span></span><br><span class="line"><span class="variable">$ </span>git checkout [file]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 恢复某个commit的指定文件到暂存区和工作区</span></span><br><span class="line"><span class="variable">$ </span>git checkout [commit] [file]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 恢复暂存区的所有文件到工作区</span></span><br><span class="line"><span class="variable">$ </span>git checkout .</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重置暂存区的指定文件，与上一次commit保持一致，但工作区不变</span></span><br><span class="line"><span class="variable">$ </span>git reset [file]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重置暂存区与工作区，与上一次commit保持一致</span></span><br><span class="line"><span class="variable">$ </span>git reset --hard</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重置当前分支的指针为指定commit，同时重置暂存区，但工作区不变</span></span><br><span class="line"><span class="variable">$ </span>git reset [commit]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重置当前分支的HEAD为指定commit，同时重置暂存区和工作区，与指定commit一致</span></span><br><span class="line"><span class="variable">$ </span>git reset --hard [commit]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重置当前HEAD为指定commit，但保持暂存区和工作区不变</span></span><br><span class="line"><span class="variable">$ </span>git reset --keep [commit]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新建一个commit，用来撤销指定commit</span></span><br><span class="line"><span class="comment"># 后者的所有变化都将被前者抵消，并且应用到当前分支</span></span><br><span class="line"><span class="variable">$ </span>git revert [commit]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 暂时将未提交的变化移除，稍后再移入</span></span><br><span class="line"><span class="variable">$ </span>git stash</span><br><span class="line"><span class="variable">$ </span>git stash pop</span><br><span class="line"><span class="comment"># 进行储存并备注</span></span><br><span class="line"><span class="variable">$ </span>git statsh save <span class="string">&#x27;msg&#x27;</span></span><br><span class="line"><span class="comment"># 查看储存列表</span></span><br><span class="line"><span class="variable">$ </span>git stash list</span><br><span class="line"><span class="comment"># 应用指定储存</span></span><br><span class="line"><span class="variable">$ </span>git stash apply stash@&#123;<span class="number">2</span>&#125;</span><br><span class="line"><span class="comment"># 查看指定储存修改记录</span></span><br><span class="line"><span class="variable">$ </span>git stash show -p stash@&#123;<span class="number">2</span>&#125;</span><br></pre></td></tr></table></figure><h1 id="十、其他"><a href="#十、其他" class="headerlink" title="十、其他"></a>十、其他</h1><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 生成一个可供发布的压缩包</span></span><br><span class="line"><span class="variable">$ </span>git archive</span><br></pre></td></tr></table></figure><h1 id="git命令图"><a href="#git命令图" class="headerlink" title="git命令图"></a>git命令图</h1><p><img src="/images/%E5%90%8E%E7%AB%AF/git/git.png" alt="执行示意图"></p><p>（完）</p>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 常用命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java安装文档</title>
      <link href="/posts/b612af2c.html"/>
      <url>/posts/b612af2c.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="卸载已安装的版本"><a href="#卸载已安装的版本" class="headerlink" title="卸载已安装的版本"></a>卸载已安装的版本</h1><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rpm -<span class="keyword">qa</span> | <span class="keyword">grep</span> java</span><br><span class="line">rpm -<span class="keyword">e</span> java-openjdk</span><br></pre></td></tr></table></figure><h1 id="安装java7-java-se-1-7"><a href="#安装java7-java-se-1-7" class="headerlink" title="安装java7(java se 1.7)"></a>安装java7(java se 1.7)</h1><h1 id="从orcal下载"><a href="#从orcal下载" class="headerlink" title="从orcal下载"></a>从orcal下载</h1><h1 id="java8可以直接下载，java7需要到java档案中下载"><a href="#java8可以直接下载，java7需要到java档案中下载" class="headerlink" title="java8可以直接下载，java7需要到java档案中下载"></a>java8可以直接下载，java7需要到java档案中下载</h1><p><a href="http://www.oracle.com/technetwork/java/javase/downloads/java-archive-downloads-javase7-521261.html">网址链接</a></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ wget https:<span class="regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="regexp">/AdoptOpenJDK/</span><span class="number">8</span><span class="regexp">/jdk/</span>x64<span class="regexp">/linux/</span>OpenJDK8U-jdk_x64_linux_hotspot_8u292b10.tar.gz</span><br></pre></td></tr></table></figure><h1 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xzf OpenJDK8U-jdk_x64_linux_hotspot_8u292b10.tar.gz &amp;&amp; mv jdk8u292-b10 /usr/local/webserver/java8</span><br></pre></td></tr></table></figure><h1 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">sudo</span> vim /etc/profile.d/java.sh</span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/local/webserver/java8</span><br><span class="line"><span class="built_in">export</span> JRE_HOME=<span class="variable">$JAVA_HOME</span>/jre</span><br><span class="line"><span class="built_in">export</span> CLASSPATH=.:<span class="variable">$JAVA_HOME</span>/lib/dt.jar:<span class="variable">$JAVA_HOME</span>/lib/tools.jar:<span class="variable">$JRE_HOME</span>/lib:<span class="variable">$CLASSPATH</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$JAVA_HOME</span>/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure><h1 id="windows环境变量"><a href="#windows环境变量" class="headerlink" title="windows环境变量"></a>windows环境变量</h1><h1 id="新增JAVA-HOME"><a href="#新增JAVA-HOME" class="headerlink" title="新增JAVA_HOME"></a>新增JAVA_HOME</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">D:\Program Files\Java\jdk1.7.0_80</span><br><span class="line">```shell</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">PATH新增</span></span><br><span class="line">```shell</span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">JAVA_HOME%\bin;%JAVA_HOME%\jre\bin;</span></span><br></pre></td></tr></table></figure><h1 id="环境变量生效"><a href="#环境变量生效" class="headerlink" title="环境变量生效"></a>环境变量生效</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">source</span> /etc/profile</span></span><br></pre></td></tr></table></figure><h1 id="查看版本号"><a href="#查看版本号" class="headerlink" title="查看版本号"></a>查看版本号</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">java -version</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安装文档 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql配置文件</title>
      <link href="/posts/ffed214c.html"/>
      <url>/posts/ffed214c.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># For advice on how to change settings please see</span></span><br><span class="line"><span class="comment"># http://dev.mysql.com/doc/refman/5.6/en/server-configuration-defaults.html</span></span><br><span class="line"></span><br><span class="line"><span class="section">[mysqld]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Remove leading # and set to the amount of RAM for the most important data</span></span><br><span class="line"><span class="comment"># cache in MySQL. Start at 70% of total RAM for dedicated server, else 10%.</span></span><br><span class="line"><span class="comment"># innodb_buffer_pool_size = 128M</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Remove leading # to turn on a very important data integrity option: logging</span></span><br><span class="line"><span class="comment"># changes to the binary log between backups.</span></span><br><span class="line"><span class="comment"># log_bin</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># These are commonly set, remove the # and set as required.</span></span><br><span class="line"><span class="comment"># basedir = .....</span></span><br><span class="line"><span class="comment"># datadir = .....</span></span><br><span class="line"><span class="comment"># port = .....</span></span><br><span class="line"><span class="comment"># server_id = .....</span></span><br><span class="line"><span class="comment"># socket = .....</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Remove leading # to set options mainly useful for reporting servers.</span></span><br><span class="line"><span class="comment"># The server defaults are faster for transactions and fast SELECTs.</span></span><br><span class="line"><span class="comment"># Adjust sizes as needed, experiment to find the optimal values.</span></span><br><span class="line"><span class="comment"># join_buffer_size = 128M</span></span><br><span class="line"><span class="comment"># sort_buffer_size = 2M</span></span><br><span class="line"><span class="comment"># read_rnd_buffer_size = 2M </span></span><br><span class="line"></span><br><span class="line"><span class="attr">user</span> = mysql</span><br><span class="line"><span class="attr">sql_mode</span>=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES </span><br><span class="line"><span class="attr">basedir</span> = /usr/local/webserver/mysql</span><br><span class="line"><span class="attr">datadir</span> = /data/mysql/data</span><br><span class="line"><span class="attr">port</span> = <span class="number">3306</span></span><br><span class="line"><span class="attr">socket</span> = /tmp/mysql.sock</span><br><span class="line"><span class="comment"># pid_file = /var/run/mysqld.pid</span></span><br><span class="line"><span class="attr">pid_file</span> = /data/mysql/data/mysql.pid</span><br><span class="line"><span class="attr">log-error</span> = /data/mysql/mysqld_error.log</span><br><span class="line"><span class="attr">log-bin</span> = /data/mysql/mysql-bin</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询超过多少秒写入慢日志</span></span><br><span class="line"><span class="attr">long_query_time</span>=<span class="number">1</span></span><br><span class="line"><span class="comment"># 开启记录慢日志</span></span><br><span class="line"><span class="attr">slow_query_log</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">slow_query_log_file</span>=/data/mysql/mysql-slow.log</span><br><span class="line"><span class="comment"># 　运行的SQL没有使用索引，记录到慢日志 1-开启 0-关闭</span></span><br><span class="line"><span class="attr">log_queries_not_using_indexes</span> = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="attr">max_connections</span>=<span class="number">1000</span></span><br><span class="line"><span class="attr">max_allowed_packet</span>=<span class="number">32</span>M</span><br><span class="line"></span><br><span class="line"><span class="attr">innodb_file_per_table</span> = <span class="number">1</span></span><br><span class="line"><span class="attr">innodb_buffer_pool_size</span> = <span class="number">1</span>G</span><br><span class="line"></span><br><span class="line"><span class="comment"># 0：log buffer将每秒一次地写入log file中，并且log file的flush(刷到磁盘)操作同时进行。该模式下在事务提交的时候，不会主动触发写入磁盘的操作。</span></span><br><span class="line"><span class="comment"># 1：每次事务提交时MySQL都会把log buffer的数据写入log file，并且flush(刷到磁盘)中去，该模式为系统默认。</span></span><br><span class="line"><span class="comment"># 2：每次事务提交时MySQL都会把log buffer的数据写入log file，但是flush(刷到磁盘)操作并不会同时进行。该模式下，MySQL会每秒执行一次 flush(刷到磁盘)操作。</span></span><br><span class="line"><span class="attr">innodb_flush_log_at_trx_commit</span> = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="attr">sql_mode</span>=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="comment"># lower_case_table_names = 1</span></span><br></pre></td></tr></table></figure><p>配置文件参数解读</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br></pre></td><td class="code"><pre><span class="line">[client]</span><br><span class="line"><span class="comment"># 客户端默认连接端口socket</span></span><br><span class="line">port = 3306</span><br><span class="line"></span><br><span class="line"><span class="comment"># 用于本地连接的socket套接字</span></span><br><span class="line">socket = /apps/mysql/lock/mysql.sock</span><br><span class="line">[mysqld]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 服务端基本配置</span></span><br><span class="line"><span class="comment"># mysql服务端监听端口</span></span><br><span class="line">port = 3306</span><br><span class="line"></span><br><span class="line"><span class="comment"># 为mysql客户端程序和服务器之间的本地通讯指定一个套接字文件</span></span><br><span class="line">socket = /apps/mysql/lock/mysql.sock</span><br><span class="line"></span><br><span class="line"><span class="comment"># mysql安装目录</span></span><br><span class="line">basedir = /apps/mysql</span><br><span class="line"></span><br><span class="line"><span class="comment"># mysql数据库数据文件存放目录</span></span><br><span class="line">datadir = /apps/mysql/data</span><br><span class="line"></span><br><span class="line"><span class="comment"># pid所在的目录</span></span><br><span class="line">pid-file = /apps/mysql/run/mysql.pid</span><br><span class="line"></span><br><span class="line"><span class="comment"># 记录mysql错误日志文件</span></span><br><span class="line">log-error = /apps/mysql/logs/mysql-error.log</span><br><span class="line"></span><br><span class="line"><span class="comment"># mysql启动用户</span></span><br><span class="line">user = mysql</span><br><span class="line"></span><br><span class="line"><span class="comment"># 临时目录 比如load data infile会用到,一般都是使用/tmp</span></span><br><span class="line">tmpdir  = /tmp</span><br><span class="line"></span><br><span class="line"><span class="comment"># 表示跳过主机名解析</span></span><br><span class="line"><span class="comment"># 禁止MySQL对外部连接进行DNS解析，使用这一选项可以消除MySQL进行DNS解析的时间。</span></span><br><span class="line"><span class="comment"># 缺点：所有远程主机连接授权都要使用IP地址方式，因为只认得ip地址了。</span></span><br><span class="line">skip_name_resolve = 1</span><br><span class="line"></span><br><span class="line"><span class="comment"># mysql选项以避免外部锁定。该选项默认开启。不使用系统锁定，要使用myisamchk,必须关闭服务器 </span></span><br><span class="line"><span class="comment"># 参考http://www.kuqin.com/database/20120815/328905.html</span></span><br><span class="line">skip-external-locking</span><br><span class="line"></span><br><span class="line"><span class="comment"># 这个参数用来缓存MyISAM存储引擎的索引参数，增加它可得到更好处理的索引(对所有读和多重写)。默认为InnoDB存储引擎，该参数可以设置小点，64M即可。</span></span><br><span class="line"><span class="comment"># 系统将开始换页并且真的变慢了。对于内存在4GB左右的服务器该参数可设置为384M或512M。通过检查状态值Key_read_requests和Key_reads，</span></span><br><span class="line"><span class="comment"># 可以知道key_buffer_size设置是否合理。比例key_reads/key_read_requests应该尽可能的低，  </span></span><br><span class="line"><span class="comment"># 至少是1:100，1:1000更好(上述状态值可以使用SHOW STATUS LIKE &#x27;key_read%&#x27;获得)。注意：该参数值设置的过大反而会是服务器整体效率降低</span></span><br><span class="line">key_buffer_size = 384M</span><br><span class="line"></span><br><span class="line"><span class="comment"># 允许最大接收数据包的大小，防止服务器发送过大的数据包。增加该变量的值十分安全，这是因为仅当需要时才会分配额外内存。例如仅当你发出长查询或mysqld必须返回大的结果行时mysqld才会分配更多内存。可以设置为16MB或者更大，但设置的太大也可能有危险。</span></span><br><span class="line"><span class="comment"># 该变量之所以取较小默认值是一种预防措施，以捕获客户端和服务器之间的错误信息包，并确保不会因偶然使用大的信息包而导致内存溢出。  </span></span><br><span class="line">max_allowed_packet = 16M</span><br><span class="line"></span><br><span class="line"><span class="comment"># MySQL每打开一个表，都会读入一些数据到table_open_cache缓存中，当MySQL在这个缓存中找不到相应信息时，才会去磁盘上读取。默认值64，假定系统有200个并发连接，则需将此参数设置为200*N(N为每个连接所需的文件描述符数目)；当把table_open_cache设置为很大时，如果系统处理不了那么多文件描述符，那么就会出现客户端失效，连接不上。</span></span><br><span class="line"><span class="comment"># 缓存linux文件描述符信息，加快数据文件打开速度</span></span><br><span class="line"><span class="comment"># 它影响myisam表的打开关闭，但是不影响innodb表的打开关闭。</span></span><br><span class="line"><span class="comment"># 默认值2000，建议值：根据状态变量Opened_tables去设定</span></span><br><span class="line">table_open_cache = 512</span><br><span class="line"></span><br><span class="line"><span class="comment"># 缓存表定义的相关信息，加快读取表信息速度</span></span><br><span class="line"><span class="comment"># 默认值1400，最大值2000，建议值：基本不改。</span></span><br><span class="line">table_definition_cache = 1400</span><br><span class="line"><span class="comment"># 该参数是myssql 5.6后引入的，目的是提高并发。</span></span><br><span class="line"><span class="comment"># 默认值1，建议值：cpu核数，并且&lt;=16</span></span><br><span class="line">table_open_cache_instances = 2</span><br><span class="line"></span><br><span class="line"><span class="comment"># MySQL能有的连接数量。当主要MySQL线程在一个很短时间内得到非常多的连接请求，这就起作用，  </span></span><br><span class="line"><span class="comment"># 然后主线程花些时间(尽管很短)检查连接并且启动一个新线程。back_log值指出在MySQL暂时停止回答新请求之前的短时间内多少个请求可以被存在堆栈中。</span></span><br><span class="line"><span class="comment"># 如果期望在一个短时间内有很多连接，你需要增加它。也就是说，如果MySQL的连接数据达到max_connections时，新来的请求将会被存在堆栈中，  </span></span><br><span class="line"><span class="comment"># 以等待某一连接释放资源，该堆栈的数量即back_log，如果等待连接的数量超过back_log，将不被授予连接资源。  </span></span><br><span class="line"><span class="comment"># 另外，这值（back_log）限于您的操作系统对到来的TCP/IP连接的侦听队列的大小。  </span></span><br><span class="line"><span class="comment"># 你的操作系统在这个队列大小上有它自己的限制（可以检查你的OS文档找出这个变量的最大值），试图设定back_log高于你的操作系统的限制将是无效的。</span></span><br><span class="line"><span class="comment"># 在MySQL暂时停止响应新请求之前的短时间内多少个请求可以被存在堆栈中 </span></span><br><span class="line"><span class="comment"># 官方建议back_log = 50 + (max_connections / 5),封顶数为900</span></span><br><span class="line">back_log = 600</span><br><span class="line"></span><br><span class="line"><span class="comment"># MySQL执行排序使用的缓冲大小。如果想要增加ORDER BY的速度，首先看是否可以让MySQL使用索引而不是额外的排序阶段。  </span></span><br><span class="line"><span class="comment"># 如果不能，可以尝试增加sort_buffer_size变量的大小，默认为256k。另外，一般出现Using filesort的时候，要通过增加索引来解决。</span></span><br><span class="line">sort_buffer_size = 8M</span><br><span class="line"></span><br><span class="line"><span class="comment"># 该参数用于表的顺序扫描，表示每个线程分配的缓冲区大小。比如在进行全表扫描时，MySQL会按照数据的存储顺序依次读取数据块，每次读取的数据块首先会暂存在read_buffer_size中，当buffer空间被写满或者全部数据读取结束后，再将buffer中的数据返回给上层调用者，以提高效率。默认为128K，这个参数不要设置过大，一般在128～256之间。如果对表的顺序扫描请求非常频繁，并且你认为频繁扫描进行得太慢，可以通过增加该变量值以及内存缓冲区大小提高其性能</span></span><br><span class="line"><span class="comment"># 为每个扫描MyISAM的线程分配参数设置的内存大小缓冲区。 </span></span><br><span class="line"><span class="comment"># 默认值128kb，建议值：16G内存建议1M，4G：128kb或者256kb吧</span></span><br><span class="line"><span class="comment"># 注意，该缓冲区是每个连接独占的，所以总缓冲区大小为 128kb*连接数；极端情况128kb*maxconnectiosns，会超级大，所以要考虑日常平均连接数。</span></span><br><span class="line"><span class="comment"># 一般不需要太关心该数值，稍微增大就可以了</span></span><br><span class="line">read_buffer_size = 2M  </span><br><span class="line"></span><br><span class="line"><span class="comment"># 该参数用于表的随机读取，表示每个线程分配的缓冲区大小。比如按照一个非索引字段做order by排序操作时，就会利用这个缓冲区来暂存读取的数据。默认为256KB，这个参数不要设置过大，一般在128～512KB。</span></span><br><span class="line"><span class="comment"># mysql会首先扫描一遍该缓冲，以避免磁盘搜索，提高查询速度，如果需要排序大量数据，可适当调高该值。但MySQL会为每个客户连接发放该缓冲空间，所以应尽量适当设置该值，以避免内存开销过大。</span></span><br><span class="line"><span class="comment"># 支持任何存储引擎</span></span><br><span class="line"><span class="comment"># MySQL的随机读缓冲区大小，适当增大，可以提高性能。</span></span><br><span class="line"><span class="comment"># 默认值256kb；建议值：得参考连接数，16G内存，有人推荐8M</span></span><br><span class="line"><span class="comment"># 注意，该缓冲区是每个连接独占的，所以总缓冲区大小为128kb*连接数；极端情况128kb*maxconnectiosns，会超级大，所以要考虑日常平均连接数。</span></span><br><span class="line">read_rnd_buffer_size = 8M</span><br><span class="line"></span><br><span class="line"><span class="comment"># MyISAM设置恢复表之时使用的缓冲区的尺寸，当在REPAIR TABLE或用CREATE INDEX创建索引或ALTER TABLE过程中排序MyISAM索引分配的缓冲区设置太小时可能会遇到” myisam_sort_buffer_size is too small”</span></span><br><span class="line">myisam_sort_buffer_size = 64M</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果临时文件会变得超过索引，不要使用快速排序索引方法来创建一个索引。注释：这个参数以字节的形式给出</span></span><br><span class="line">myisam_max_sort_file_size = 10G</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果该值大于1，在Repair by sorting过程中并行创建MyISAM表索引(每个索引在自己的线程内)</span></span><br><span class="line">myisam_repair_threads = 1 </span><br><span class="line"></span><br><span class="line"><span class="comment"># 线程池，线程缓存。用来缓存空闲的线程，以至于不被销毁，如果线程缓存在的空闲线程，需要重新建立新连接，则会优先调用线程池中的缓存，很快就能响应连接请求。每建立一个连接，都需要一个线程与之匹配。</span></span><br><span class="line"><span class="comment"># 这个值（默认8）表示可以重新利用保存在缓存中线程的数量，当断开连接时如果缓存中还有空间，那么客户端的线程将被放到缓存中，  </span></span><br><span class="line"><span class="comment"># 如果线程重新被请求，那么请求将从缓存中读取,如果缓存中是空的或者是新的请求，那么这个线程将被重新创建,如果有很多新的线程，  </span></span><br><span class="line"><span class="comment"># 增加这个值可以改善系统性能.通过比较Connections和Threads_created状态的变量，可以看到这个变量的作用。(–&gt;表示要调整的值)  </span></span><br><span class="line"><span class="comment"># 根据物理内存设置规则如下：  </span></span><br><span class="line"><span class="comment"># 1G  —&gt; 8  </span></span><br><span class="line"><span class="comment"># 2G  —&gt; 16  </span></span><br><span class="line"><span class="comment"># 3G  —&gt; 32  </span></span><br><span class="line"><span class="comment"># 大于3G  —&gt; 64</span></span><br><span class="line"><span class="comment"># 当客户端断开之后，服务器处理此客户的线程将会缓存起来以响应下一个客户而不是销毁。可重用，减小了系统开销。</span></span><br><span class="line"><span class="comment"># 默认值为9，建议值：两种取值方式，方式一，根据物理内存，1G  —&gt; 8；2G  —&gt; 16； 3G  —&gt; 32； &gt;3G  —&gt; 64；</span></span><br><span class="line"><span class="comment"># 方式二，根据show status like  &#x27;threads%&#x27;，查看Threads_connected值。</span></span><br><span class="line">thread_cache_size = 64</span><br><span class="line"></span><br><span class="line"><span class="comment"># 默认值256k,建议值：16/32G内存，512kb，其他一般不改变，如果报错：Thread stack overrun，就增大看看,</span></span><br><span class="line"><span class="comment"># 注意，每个线程分配内存空间，所以总内存空间。。。你懂得。</span></span><br><span class="line">thread_stack = 512k</span><br><span class="line"></span><br><span class="line"><span class="comment"># 缓存select语句和结果集大小的参数，查询缓存会存储一个select查询的文本与被传送到客户端的相应结果。如果之后接收到一个相同的查询，服务器会从查询缓存中检索结果，而不是再次分析和执行这个同样的查询。如果你的环境中写操作很少，读操作频繁，那么打开query_cache_type=1，会对性能有明显提升。如果写操作频繁，则应该关闭它（query_cache_type=0）。</span></span><br><span class="line"><span class="comment"># 今后对于同样的SELECT语句（区分大小写），将直接从缓冲区中读取结果。根据MySQL用户手册，使用查询缓冲最多可以达到238%的效率。  </span></span><br><span class="line"><span class="comment"># 通过检查状态值&#x27;Qcache_%&#x27;，可以知道query_cache_size设置是否合理：如果Qcache_lowmem_prunes的值非常大，则表明经常出现缓冲不够的情况，  </span></span><br><span class="line"><span class="comment"># 如果Qcache_hits的值也非常大，则表明查询缓冲使用非常频繁，此时需要增加缓冲大小；如果Qcache_hits的值不大，则表明你的查询重复率很低，  </span></span><br><span class="line"><span class="comment"># 这种情况下使用查询缓冲反而会影响效率，那么可以考虑不用查询缓冲。此外，在SELECT语句中加入SQL_NO_CACHE可以明确表示不使用查询缓冲</span></span><br><span class="line"><span class="comment"># 默认值1M，优点是查询缓冲可以极大的提高服务器速度, 如果你有大量的相同的查询并且很少修改表。</span></span><br><span class="line"><span class="comment"># 缺点：在你表经常变化的情况下或者如果你的查询原文每次都不同,查询缓冲也许引起性能下降而不是性能提升。</span></span><br><span class="line">query_cache_size = 32M  </span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定单个查询能够使用的缓冲区大小，默认1M。</span></span><br><span class="line"><span class="comment"># 只有小于此设定值的结果才会被缓冲，保护查询缓冲,防止一个极大的结果集将其他所有的查询结果都覆盖。</span></span><br><span class="line">query_cache_limit = 2M</span><br><span class="line"></span><br><span class="line"><span class="comment"># 每个被缓存的结果集要占用的最小内存,默认值4kb，一般不怎么调整。</span></span><br><span class="line"><span class="comment"># 如果Qcache_free_blocks值过大，可能是query_cache_min_res_unit值过大，应该调小些</span></span><br><span class="line"><span class="comment"># query_cache_min_res_unit的估计值：(query_cache_size - Qcache_free_memory) / Qcache_queries_in_cache</span></span><br><span class="line">query_cache_min_res_unit = 4kb</span><br><span class="line"></span><br><span class="line"><span class="comment"># 临时HEAP数据表的最大长度(默认设置是32M)，</span></span><br><span class="line"><span class="comment"># MySQL的heap（堆积）表缓冲大小。所有联合在一个DML指令内完成，并且大多数联合甚至可以不用临时表即可以完成。  </span></span><br><span class="line"><span class="comment"># 大多数临时表是基于内存的(HEAP)表。具有大的记录长度的临时表 (所有列的长度的和)或包含BLOB列的表存储在硬盘上。  </span></span><br><span class="line"><span class="comment"># 如果某个内部heap（堆积）表大小超过tmp_table_size，MySQL可以根据需要自动将内存中的heap表改为基于硬盘的MyISAM表。还可以通过设置tmp_table_size选项来增加临时表的大小。也就是说，如果调高该值，MySQL同时将增加heap表的大小，可达到提高联接查询速度的效果</span></span><br><span class="line"><span class="comment"># 内存临时表的最大值,默认16M</span></span><br><span class="line">tmp_table_size = 64M  </span><br><span class="line"></span><br><span class="line"><span class="comment"># 联合查询操作所能使用的缓冲区大小，和sort_buffer_size一样，该参数对应的分配内存也是每连接独享</span></span><br><span class="line"><span class="comment"># 此缓冲被使用来优化全联合(full JOINs 不带索引的联合)</span></span><br><span class="line"><span class="comment"># 类似的联合在极大多数情况下有非常糟糕的性能表现,但是将此值设大能够减轻性能影响.</span></span><br><span class="line"><span class="comment"># 通过 “Select_full_join” 状态变量查看全联合的数量</span></span><br><span class="line"><span class="comment"># 注意，该缓冲区是每个连接独占的，所以总缓冲区大小为 1M*连接数；极端情况1M*maxconnectiosns，会超级大。所以要考虑日常平均连接数。</span></span><br><span class="line"><span class="comment"># 默认值256kb;建议值：16G内存，设置8M.</span></span><br><span class="line">join_buffer_size = 64M</span><br><span class="line"></span><br><span class="line"><span class="comment"># 该值一般建议设定cpu的个数*2</span></span><br><span class="line">thread_concurrency = 4</span><br><span class="line"></span><br><span class="line"><span class="comment"># 分词词汇最小长度，默认值为4  </span></span><br><span class="line">ft_min_word_len = 4</span><br><span class="line"></span><br><span class="line"><span class="comment"># 是否显示默认时间戳，true是显示</span></span><br><span class="line"><span class="comment"># 默认值为off,timestamp列会自动更新为当前时间，设置为on|1，timestamp列的值就要显式更新</span></span><br><span class="line">explicit_defaults_for_timestamp = true</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开启该选项后就不能远程访问MySQL</span></span><br><span class="line"><span class="comment"># 为安全考虑希望指定的IP访问MySQL，可以在配置文件中增加bind-address=IP，前提是关闭skip-networking</span></span><br><span class="line"><span class="comment"># skip-networking</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 表示监听IPV4地址</span></span><br><span class="line">bind-address=192.168.1.146</span><br><span class="line"></span><br><span class="line"><span class="comment"># 该参数是用来设定mysql的最大连接数，默认为100，一般设置为512-1000即可。太多的连接会导致内存的使用量过高并且会锁住你的MySQL服务器。一般小型网站需要100-200的连接数，而较大可能需要500-800甚至更多。这里的值很大程度上取决于你 MySQL/MariaDB 的使用情况。</span></span><br><span class="line"><span class="comment"># 如果服务器的并发连接请求量比较大，建议调高此值，以增加并行连接数量，当然这建立在机器能支撑的情况下，因为如果连接数越多，介于MySQL会为每个连接提供连接缓冲区，就会开销越多的内存，所以要适当调整该值，不能盲目提高设值。可以过&#x27;conn%&#x27;通配符查看当前状态的连接数量，以定夺该值的大小。</span></span><br><span class="line"><span class="comment"># 最大连接数，可设最大值16384，一般考虑根据同时在线人数设置一个比较综合的数字，鉴于该数值增大并不太消耗系统资源，建议直接设10000</span></span><br><span class="line"><span class="comment"># 如果在访问时经常出现Too Many Connections的错误提示，则需要增大该参数值</span></span><br><span class="line">max_connections = 1000</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果有时网络异常或者应用配置错误，或者其他原因导致客户端短时间内不断的尝试连接，超出该参数值个数的中断错误连接。该主机将被禁止连接，可能会被列入黑名单。然后将无法连接，直到再次刷新主机缓存。如需对该主机进行解禁需执行FLUSH HOST。这个选项默认值太小了，可以考虑设的足够大（如果你的服务器配置够强大的话)。</span></span><br><span class="line"><span class="comment"># 默认值100，最大错误连接数，如果有超出该参数值个数的中断错误连接，则该主机将被禁止连接。如需对该主机进行解禁，执行：FLUSH HOST</span></span><br><span class="line"><span class="comment"># 考虑高并发场景下的容错，建议加大。</span></span><br><span class="line">max_connect_errors = 1000</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设定mysql打开最大文件数，MySQL打开的文件描述符限制，默认最小1024，当open_files_limit没有被配置的时候，比较max_connections*5和ulimit -n的值，哪个大用哪个。</span></span><br><span class="line"><span class="comment"># 注意：仍然可能出现报错信息Can&#x27;t create a new thread；此时观察系统cat /proc/mysql进程号/limits，观察进程ulimit限制情况</span></span><br><span class="line"><span class="comment"># 过小的话，考虑修改系统配置表，/etc/security/limits.conf和/etc/security/limits.d/90-nproc.conf </span></span><br><span class="line">open_files_limit = 65535</span><br><span class="line"></span><br><span class="line"><span class="comment"># 事务隔离级别，默认为可重复读（REPEATABLE-READ）。（此级别下可能参数很多间隙锁，影响性能，但是修改又影响主从复制及灾难恢复，建议还是修改代码逻辑吧）</span></span><br><span class="line"><span class="comment"># 隔离级别可选项目：READ-UNCOMMITTED  READ-COMMITTED  REPEATABLE-READ  SERIALIZABLE</span></span><br><span class="line"><span class="comment"># 如没有指定，MySQL默认采用的是REPEATABLE-READ，ORACLE默认的是READ-COMMITTED</span></span><br><span class="line"><span class="comment"># transaction_isolation = READ-COMMITTED</span></span><br><span class="line">transaction_isolation = REPEATABLE-READ</span><br><span class="line"></span><br><span class="line"><span class="comment"># MySQL的二进制日志可以说是MySQL最重要的日志了，它记录了所有的DDL和DML(除了数据查询语句)语句，以事件形式记录，还包含语句所执行的消耗的时间，MySQL的二进制日志是事务安全型的。</span></span><br><span class="line"><span class="comment"># 一般来说开启二进制日志大概会有1%的性能损耗(参见MySQL官方中文手册 5.1.24版)。二进制有两个最重要的使用场景: </span></span><br><span class="line"><span class="comment"># 其一：MySQL Replication在Master端开启binlog，Mster把它的二进制日志传递给slaves来达到master-slave数据一致的目的。 </span></span><br><span class="line"><span class="comment"># 其二：自然就是数据恢复了，通过使用mysqlbinlog工具来使恢复数据。</span></span><br><span class="line"><span class="comment"># 查看方式:binlog events in &#x27;mysql-bin.000256&#x27;;</span></span><br><span class="line">log-bin=mysql-bin</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定日志格式为mixed</span></span><br><span class="line">binlog_format=mixed</span><br><span class="line"></span><br><span class="line"><span class="comment"># 一个事务在没有提交的时候产生的日志会记录到Cache中；等到事务提交需要提交的时候，则把日志持久化到磁盘。该值默认大小32K，可以自行设定。</span></span><br><span class="line"><span class="comment"># 在一个事务中binlog为了记录SQL状态所持有的cache大小</span></span><br><span class="line"><span class="comment"># 如果你经常使用大的,多声明的事务,你可以增加此值来获取更大的性能.</span></span><br><span class="line"><span class="comment"># 所有从事务来的状态都将被缓冲在binlog缓冲中然后在提交后一次性写入到binlog中</span></span><br><span class="line"><span class="comment"># 如果事务比此值大, 会使用磁盘上的临时文件来替代.</span></span><br><span class="line"><span class="comment"># 此缓冲在每个连接的事务第一次更新状态时被创建</span></span><br><span class="line">binlog_cache_size = 64M</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义了用户可以创建的内存表(memory table)的大小。这个值用来计算内存表的最大行数值。这个变量支持动态改变</span></span><br><span class="line"><span class="comment"># 用户创建的内存表的大小，默认16M，往往和tmp_table_size一起设置，限制用户临师表大小。</span></span><br><span class="line"><span class="comment"># 超限的话，MySQL就会自动地把它转化为基于磁盘的MyISAM表，存储在指定的tmpdir目录下，增大IO压力，建议内存大，增大该数值。</span></span><br><span class="line">max_heap_table_size = 8M</span><br><span class="line"></span><br><span class="line"><span class="comment"># 表示这个mysql版本是否支持查询缓存。ps：SHOW STATUS LIKE &#x27;qcache%&#x27;，与缓存相关的状态变量。</span></span><br><span class="line"><span class="comment"># have_query_cache</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 这个系统变量控制着查询缓存工能的开启的关闭，0时表示关闭，1时表示打开，2表示只要select 中明确指定SQL_CACHE才缓存。</span></span><br><span class="line"><span class="comment"># 看业务场景决定是否使用缓存，不使用，下面就不用配置了。</span></span><br><span class="line">query_cache_type = 0 </span><br><span class="line"></span><br><span class="line"><span class="comment"># 表示是本机的序号为1,给服务器分配一个独一无二的ID编号; n的取值范围是1~2的32次方启用二进制日志功能。在复制数据同步的时候会用到，一般来讲就是master的意思</span></span><br><span class="line">server-id = 1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 数据库引擎与字符集相关设置</span></span><br><span class="line"><span class="comment"># mysql 5.1 之后，默认引擎就是InnoDB了</span></span><br><span class="line">default_storage_engine = InnoDB</span><br><span class="line"></span><br><span class="line"><span class="comment"># 内存临时表默认引擎，默认InnoDB</span></span><br><span class="line">default_tmp_storage_engine = InnoDB</span><br><span class="line"></span><br><span class="line"><span class="comment"># mysql 5.7新增特性，磁盘临时表默认引擎，默认InnoDB</span></span><br><span class="line">internal_tmp_disk_storage_engine = InnoDB</span><br><span class="line"></span><br><span class="line"><span class="comment"># 数据库默认字符集,主流字符集支持一些特殊表情符号（特殊表情符占用4个字节）</span></span><br><span class="line">character-set-server = utf8</span><br><span class="line"></span><br><span class="line"><span class="comment"># 数据库字符集对应一些排序等规则，注意要和character-set-server对应</span></span><br><span class="line">collation-server = utf8_general_ci</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置client连接mysql时的字符集,防止乱码</span></span><br><span class="line"><span class="comment"># init_connect=&#x27;SET NAMES utf8&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 是否对sql语句大小写敏感，默认值为0，1表示不敏感</span></span><br><span class="line">lower_case_table_names = 1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 服务器关闭交互式连接前等待活动的秒数。交互式客户端定义为在mysql_real_connect()中使用CLIENT_INTERACTIVE选项的客户端。默认值：28800秒（8小时）</span></span><br><span class="line"><span class="comment"># MySQL默认的wait_timeout  值为8个小时, interactive_timeout参数需要同时配置才能生效</span></span><br><span class="line"><span class="comment"># MySQL连接闲置超过一定时间后(单位：秒，此处为1800秒)将会被强行关闭</span></span><br><span class="line">interactive_timeout = 28800</span><br><span class="line"></span><br><span class="line"><span class="comment"># 服务器关闭非交互连接之前等待活动的秒数。在线程启动时，根据全局wait_timeout值或全局interactive_timeout值初始化会话wait_timeout值，  </span></span><br><span class="line"><span class="comment"># 取决于客户端类型(由mysql_real_connect()的连接选项CLIENT_INTERACTIVE定义)。参数默认值：28800秒（8小时）  </span></span><br><span class="line"><span class="comment"># MySQL服务器所支持的最大连接数是有上限的，因为每个连接的建立都会消耗内存，因此我们希望客户端在连接到MySQL Server处理完相应的操作后，  </span></span><br><span class="line"><span class="comment"># 应该断开连接并释放占用的内存。如果你的MySQL Server有大量的闲置连接，他们不仅会白白消耗内存，而且如果连接一直在累加而不断开，  </span></span><br><span class="line"><span class="comment"># 最终肯定会达到MySQL Server的连接上限数，这会报&#x27;too many connections&#x27;的错误。对于wait_timeout的值设定，应该根据系统的运行情况来判断 </span></span><br><span class="line"><span class="comment"># 在系统运行一段时间后，可以通过show processlist命令查看当前系统的连接状态，如果发现有大量的sleep状态的连接进程，则说明该参数设置的过大，  </span></span><br><span class="line"><span class="comment"># 可以进行适当的调整小些。要同时设置interactive_timeout和wait_timeout才会生效。</span></span><br><span class="line">wait_timeout = 28800</span><br><span class="line"></span><br><span class="line"><span class="comment"># 处理主键冲突</span></span><br><span class="line"><span class="comment"># mysql的服务器变量auto_increment_increment【增长值】和auto_increment_offset【偏移量】可以协调多主服务器复制和AUTO_INCREMENT列。</span></span><br><span class="line"><span class="comment"># 并且每个变量有一个默认的(并且是最小的)值1，有一个最大值65,535。把这些变量设置为非冲突的值，例如在同 一个表插入新行时，</span></span><br><span class="line"><span class="comment"># 多主服务器配置主的服务器就不会发生AUTO_INCREMENT值冲突，这里就可以解决这个问题</span></span><br><span class="line">auto-increment-increment = 2</span><br><span class="line">auto-increment-offset = 2</span><br><span class="line"></span><br><span class="line"><span class="comment"># slave_skip_errors跳过复制错误选项有四个可用值，分别为：off，all，ErorCode，ddl_exist_errors。</span></span><br><span class="line"><span class="comment"># 默认情况下该参数值是off，我们可以列出具体的error code，也可以选择all，mysql5.6及MySQL Cluster NDB 7.3以及后续版本增加了参数ddl_exist_errors，该参数包含一系列error code（1007,1008,1050,1051,1054,1060,1061,1068,1094,1146）</span></span><br><span class="line"><span class="comment"># 一些error code代表的错误如下：</span></span><br><span class="line">    1007：数据库已存在，创建数据库失败</span><br><span class="line">    1008：数据库不存在，删除数据库失败</span><br><span class="line">    1050：数据表已存在，创建数据表失败</span><br><span class="line">    1051：数据表不存在，删除数据表失败</span><br><span class="line">    1054：字段不存在，或程序文件跟数据库有冲突</span><br><span class="line">    1060：字段重复，导致无法插入</span><br><span class="line">    1061：重复键名</span><br><span class="line">    1068：定义了多个主键</span><br><span class="line">    1094：位置线程ID</span><br><span class="line">    1146：数据表缺失，请恢复数据库</span><br><span class="line">    1053：复制过程中主服务器宕机</span><br><span class="line">    1062：主键冲突 Duplicate entry &#x27;%s&#x27; for key %d</span><br><span class="line">slave_skip_errors=all</span><br><span class="line"></span><br><span class="line">sql_mode=&#x27;ONLY_FULL_GROUP_BY,NO_AUTO_VALUE_ON_ZERO,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,</span><br><span class="line">ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,PIPES_AS_CONCAT,ANSI_QUOTES&#x27;</span><br><span class="line">MySQL的sql_mode模式说明及设置</span><br><span class="line">MySQL的sql_mode合理设置</span><br><span class="line">sql_mode是个很容易被忽视的变量,默认值是空值,在这种设置下是可以允许一些非法操作的,比如允许一些非法数据的插入。在生产环境必须将这个值设置为严格模式,所以开发、测试环境的数据库也必须要设置,这样在开发测试阶段就可以发现问题.</span><br><span class="line">sql model 常用来解决下面几类问题</span><br><span class="line">(1) 通过设置sql mode, 可以完成不同严格程度的数据校验，有效地保障数据准备性。</span><br><span class="line">(2) 通过设置sql model 为宽松模式，来保证大多数sql符合标准的sql语法，这样应用在不同数据库之间进行迁移时，则不需要对业务sql 进行较大的修改。</span><br><span class="line">(3) 在不同数据库之间进行数据迁移之前，通过设置SQL Mode 可以使MySQL 上的数据更方便地迁移到目标数据库中。</span><br><span class="line"></span><br><span class="line"><span class="section">sql_mode常用值如下: </span></span><br><span class="line"><span class="section">ONLY_FULL_GROUP_BY:</span></span><br><span class="line">对于GROUP BY聚合操作,如果在SELECT中的列,没有在GROUP BY中出现,那么这个SQL是不合法的,因为列不在GROUP BY从句中</span><br><span class="line"></span><br><span class="line"><span class="section">NO_AUTO_VALUE_ON_ZERO:</span></span><br><span class="line">该值影响自增长列的插入。默认设置下,插入0或NULL代表生成下一个自增长值。如果用户 希望插入的值为0,而该列又是自增长的,那么这个选项就有用了。</span><br><span class="line"></span><br><span class="line"><span class="section">STRICT_TRANS_TABLES:</span></span><br><span class="line">在该模式下,如果一个值不能插入到一个事务表中,则中断当前的操作,对非事务表不做限制</span><br><span class="line"></span><br><span class="line"><span class="section">NO_ZERO_IN_DATE:</span></span><br><span class="line">在严格模式下,不允许日期和月份为零</span><br><span class="line"></span><br><span class="line"><span class="section">NO_ZERO_DATE:</span></span><br><span class="line">设置该值,mysql数据库不允许插入零日期,插入零日期会抛出错误而不是警告。</span><br><span class="line"></span><br><span class="line"><span class="section">ERROR_FOR_DIVISION_BY_ZERO:</span></span><br><span class="line">在INSERT或UPDATE过程中,如果数据被零除,则产生错误而非警告。如 果未给出该模式,那么数据被零除时MySQL返回NULL</span><br><span class="line"></span><br><span class="line"><span class="section">NO_AUTO_CREATE_USER:</span></span><br><span class="line">禁止GRANT创建密码为空的用户</span><br><span class="line"></span><br><span class="line"><span class="section">NO_ENGINE_SUBSTITUTION:</span></span><br><span class="line">如果需要的存储引擎被禁用或未编译,那么抛出错误。不设置此值时,用默认的存储引擎替代,并抛出一个异常</span><br><span class="line"></span><br><span class="line"><span class="section">PIPES_AS_CONCAT:</span></span><br><span class="line">将<span class="string">&quot;||&quot;</span>视为字符串的连接操作符而非或运算符,这和Oracle数据库是一样的,也和字符串的拼接函数Concat相类似</span><br><span class="line"></span><br><span class="line"><span class="section">ANSI_QUOTES:</span></span><br><span class="line">启用ANSI_QUOTES后,不能用双引号来引用字符串,因为它被解释为识别符</span><br><span class="line"><span class="section">ORACLE的sql_mode设置等同:PIPES_AS_CONCAT, ANSI_QUOTES, IGNORE_SPACE, NO_KEY_OPTIONS, NO_TABLE_OPTIONS, NO_FIELD_OPTIONS, NO_AUTO_CREATE_USER.</span></span><br><span class="line"><span class="section">如果使用mysql,为了继续保留大家使用oracle的习惯,可以对mysql的sql_mode设置如下:</span></span><br><span class="line"></span><br><span class="line">注意：MySQL5.6和MySQL5.7默认的sql_mode模式参数是不一样的,5.6的mode是NO_ENGINE_SUBSTITUTION，其实表示的是一个空值，相当于没有什么模式设置，可以理解为宽松模式。5.7的mode是STRICT_TRANS_TABLES，也就是严格模式。</span><br><span class="line">如果设置的是宽松模式，那么我们在插入数据的时候，即便是给了一个错误的数据，也可能会被接受，并且不报错，例如：我在创建一个表时，该表中有一个字段为name，给name设置的字段类型时char(10)，如果我在插入数据的时候，其中name这个字段对应的有一条数据的长度超过了10，例如&#x27;1234567890abc&#x27;，超过了设定的字段长度10，那么不会报错，并且取前十个字符存上，也就是说你这个数据被存为了&#x27;1234567890&#x27;,而&#x27;abc&#x27;就没有了，但是我们知道，我们给的这条数据是错误的，因为超过了字段长度，但是并没有报错，并且mysql自行处理并接受了，这就是宽松模式的效果，其实在开发、测试、生产等环境中，我们应该采用的是严格模式，出现这种错误，应该报错才对，所以MySQL5.7版本就将sql_mode默认值改为了严格模式，并且我们即便是用的MySQL5.6，也应该自行将其改为严格模式，而你记着，MySQL等等的这些数据库，都是想把关于数据的所有操作都自己包揽下来，包括数据的校验，其实好多时候，我们应该在自己开发的项目程序级别将这些校验给做了，虽然写项目的时候麻烦了一些步骤，但是这样做之后，我们在进行数据库迁移或者在项目的迁移时，就会方便很多，这个看你们自行来衡量。mysql除了数据校验之外，你慢慢的学习过程中会发现，它能够做的事情还有很多很多，将你程序中做的好多事情都包揽了。</span><br><span class="line"></span><br><span class="line">改为严格模式后可能会存在的问题：</span><br><span class="line">若设置模式中包含了NO_ZERO_DATE，那么MySQL数据库不允许插入零日期，插入零日期会抛出错误而不是警告。例如表中含字段TIMESTAMP列（如果未声明为NULL或显示DEFAULT子句）将自动分配DEFAULT &#x27;0000-00-00 00:00:00&#x27;（零时间戳），也或者是本测试的表day列默认允许插入零日期 &#x27;0000-00-00&#x27; COMMENT &#x27;日期&#x27;；这些显然是不满足sql_mode中的NO_ZERO_DATE而报错。</span><br><span class="line"></span><br><span class="line">模式设置和修改(以解决上述问题为例)：</span><br><span class="line">方式一：先执行select @@sql_mode,复制查询出来的值并将其中的NO_ZERO_IN_DATE,NO_ZERO_DATE删除，然后执行set sql_mode = &#x27;修改后的值&#x27;或者set session sql_mode=&#x27;修改后的值&#x27;;，例如：set session sql_mode=&#x27;STRICT_TRANS_TABLES&#x27;;改为严格模式</span><br><span class="line">此方法只在当前会话中生效，关闭当前会话就不生效了。</span><br><span class="line">方式二：先执行select @@global.sql_mode,复制查询出来的值并将其中的NO_ZERO_IN_DATE,NO_ZERO_DATE删除，然后执行set global sql_mode = &#x27;修改后的值&#x27;。</span><br><span class="line">此方法在当前服务中生效，重新MySQL服务后失效</span><br><span class="line">方法三：在mysql的安装目录下，或my.cnf文件(windows系统是my.ini文件)，新增 sql_mode = ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION，</span><br><span class="line">添加my.cnf如下：</span><br><span class="line">[mysqld]</span><br><span class="line">sql_mode=ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER</span><br><span class="line">然后重启mysql。</span><br><span class="line">此方法永久生效.当然生产环境上是禁止重启MySQL服务的，所以采用方式二加方式三来解决线上的问题，那么即便是有一天真的重启了MySQL服务，也会永久生效了。</span><br><span class="line"></span><br><span class="line">[mysqldump]</span><br><span class="line"><span class="comment"># quick选项强制 mysqldump 从服务器查询取得记录直接输出而不是取得所有记录后将它们缓存到内存中</span></span><br><span class="line">quick</span><br><span class="line">quick</span><br><span class="line"><span class="comment"># 该参数限制服务器端，接受的数据包大小，如果有BLOB子段，建议增大此值，避免写入或者更新出错。有BLOB子段，建议改为1024M</span></span><br><span class="line"><span class="comment"># 服务器发送和接受的最大包长度</span></span><br><span class="line">max_allowed_packet = 16M</span><br><span class="line"></span><br><span class="line">[mysql]</span><br><span class="line">auto-rehash是自动补全的意思，就像我们在linux命令行里输入命令的时候，使用tab键的功能是一样的。</span><br><span class="line">no-auto-rehash</span><br><span class="line"></span><br><span class="line">[myisamchk]</span><br><span class="line"><span class="comment"># *** MyISAM 相关选项</span></span><br><span class="line"><span class="comment"># 指定索引缓冲区的大小, 为MYISAM数据表开启供线程共享的索引缓存,对INNODB引擎无效。相当影响MyISAM的性能。</span></span><br><span class="line"><span class="comment"># 不要将其设置大于你可用内存的30%,因为一部分内存同样被OS用来缓冲行数据</span></span><br><span class="line"><span class="comment"># 甚至在你并不使用MyISAM 表的情况下, 你也需要仍旧设置起 8-64M 内存由于它同样会被内部临时磁盘表使用.</span></span><br><span class="line"><span class="comment"># 默认值 8M，建议值：对于内存在4GB左右的服务器该参数可设置为256M或384M。注意：该参数值设置的过大反而会是服务器整体效率降低！</span></span><br><span class="line">key_buffer_size = 384M</span><br><span class="line"></span><br><span class="line"><span class="comment"># order by或group by时用到 </span></span><br><span class="line"><span class="comment"># 支持所有引擎，innodb和myisam有自己的innodb_sort_buffer_size和myisam_sort_buffer_size设置</span></span><br><span class="line"><span class="comment"># 默认值256kb；建议值：得参考连接数，16G内存，有人推荐8M.</span></span><br><span class="line"><span class="comment"># 注意，该缓冲区是每个连接独占的，所以总缓冲区大小为 1M*连接数；极端情况1M*maxconnectiosns，会超级大。所以要考虑日常平均连接数。</span></span><br><span class="line">sort_buffer_size = 256M</span><br><span class="line"></span><br><span class="line"><span class="comment"># 为每个扫描MyISAM的线程分配参数设置的内存大小缓冲区。 </span></span><br><span class="line"><span class="comment"># 默认值128kb，建议值：16G内存建议1M，4G：128kb或者256kb吧</span></span><br><span class="line"><span class="comment"># 注意，该缓冲区是每个连接独占的，所以总缓冲区大小为 128kb*连接数；极端情况128kb*maxconnectiosns，会超级大，所以要考虑日常平均连接数。</span></span><br><span class="line"><span class="comment"># 一般不需要太关心该数值，稍微增大就可以了</span></span><br><span class="line">read_buffer = 128M</span><br><span class="line">write_buffer = 128M</span><br><span class="line"></span><br><span class="line"><span class="comment"># mysql命令行工具不使用自动补全功能，建议还是改为</span></span><br><span class="line"><span class="comment"># no-auto-rehash</span></span><br><span class="line">auto-rehash</span><br><span class="line">[mysqlhotcopy]</span><br><span class="line"><span class="comment"># 服务器关闭交互式连接前等待活动的秒数。交互式客户端定义为在mysql_real_connect()中使用CLIENT_INTERACTIVE选项的客户端。默认值：28800秒（8小时）</span></span><br><span class="line">interactive-timeout</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 日志文件相关设置，一般只开启三种日志，错误日志，慢查询日志，二进制日志。普通查询日志不开启。</span></span><br><span class="line"><span class="comment"># 普通查询日志，默认值off，不开启</span></span><br><span class="line">general_log = 0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 普通查询日志存放地址</span></span><br><span class="line">general_log_file = /usr/local/mysql-5.7.21/log/mysql-general.log</span><br><span class="line"></span><br><span class="line"><span class="comment"># 全局动态变量，默认3，范围：1～3</span></span><br><span class="line"><span class="comment"># 表示错误日志记录的信息，1：只记录error信息；2：记录error和warnings信息；3：记录error、warnings和普通的notes信息。</span></span><br><span class="line">log_error_verbosity = 2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 错误日志文件地址</span></span><br><span class="line">log_error = /usr/local/mysql-5.7.21/log/mysql-error.log</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开启慢查询</span></span><br><span class="line">slow_query_log = 1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开启慢查询时间，此处为1秒，达到此值才记录数据</span></span><br><span class="line">long_query_time = 3</span><br><span class="line"></span><br><span class="line"><span class="comment"># 慢查询日志文件地址</span></span><br><span class="line">slow_query_log_file = /usr/local/mysql/log/mysql-slow.log</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检索行数达到此数值，才记录慢查询日志中</span></span><br><span class="line">min_examined_row_limit = 100</span><br><span class="line"></span><br><span class="line"><span class="comment"># mysql 5.6.5新增，用来表示每分钟允许记录到slow log的且未使用索引的SQL语句次数，默认值为0，不限制。</span></span><br><span class="line">log_throttle_queries_not_using_indexes = 0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开启记录没有使用索引查询语句</span></span><br><span class="line">log-queries-not-using-indexes = 1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置此参数表示启用binlog功能，并指定路径名称</span></span><br><span class="line">log_bin=/usr/local/mysql/log/mysql-bin.log</span><br><span class="line"></span><br><span class="line">设置此参数是指定二进制索引文件的路径与名称</span><br><span class="line">log_bin_index</span><br><span class="line"></span><br><span class="line">此参数表示只记录指定数据库的二进制日志</span><br><span class="line">binlog_do_db</span><br><span class="line"></span><br><span class="line">此参数表示不记录指定的数据库的二进制日志</span><br><span class="line">binlog_ignore_db</span><br><span class="line"></span><br><span class="line">此参数表示binlog使用的内存最大的尺寸</span><br><span class="line">max_binlog_cache_size</span><br><span class="line"></span><br><span class="line">此参数表示binlog使用的内存大小，可以通过状态变量binlog_cache_use和binlog_cache_disk_use来帮助测试。</span><br><span class="line">binlog_cache_size</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用二进制日志缓存的事务数量</span></span><br><span class="line">binlog_cache_use</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用二进制日志缓存但超过binlog_cache_size值并使用临时文件来保存事务中的语句的事务数量</span></span><br><span class="line">binlog_cache_disk_use</span><br><span class="line"></span><br><span class="line"><span class="comment"># Binlog最大值，最大和默认值是1GB，该设置并不能严格控制Binlog的大小，尤其是Binlog比较靠近最大值而又遇到一个比较大事务时，为了保证事务的完整性，不可能做切换日志的动作，只能将该事务的所有SQL都记录进当前日志，直到事务结束</span></span><br><span class="line"><span class="comment"># 如果二进制日志写入的内容超出给定值，日志就会发生滚动。你不能将该变量设置为大于1GB或小于4096字节。 默认值是1GB。</span></span><br><span class="line">max_binlog_size</span><br><span class="line"></span><br><span class="line">sync_binlog”：这个参数是对于MySQL系统来说是至关重要的，他不仅影响到Binlog对MySQL所带来的性能损耗，而且还影响到MySQL中数据的完整性。对于“sync_binlog”参数的各种设置的说明如下：</span><br><span class="line">sync_binlog=0，当事务提交之后，MySQL不做fsync之类的磁盘同步指令刷新binlog_cache中的信息到磁盘，而让Filesystem自行决定什么时候来做同步，或者cache满了之后才同步到磁盘。</span><br><span class="line">sync_binlog=n，当每进行n次事务提交之后，MySQL将进行一次fsync之类的磁盘同步指令来将binlog_cache中的数据强制写入磁盘。</span><br><span class="line">在MySQL中系统默认的设置是sync_binlog=0，也就是不做任何强制性的磁盘刷新指令，这时候的性能是最好的，但是风险也是最大的。因为一旦系统Crash，在binlog_cache中的所有binlog信息都会被丢失。而当设置为“1”的时候，是最安全但是性能损耗最大的设置。因为当设置为1的时候，即使系统Crash，也最多丢失binlog_cache中未完成的一个事务，对实际数据没有任何实质性影响。</span><br><span class="line">从以往经验和相关测试来看，对于高并发事务的系统来说，“sync_binlog”设置为0和设置为1的系统写入性能差距可能高达5倍甚至更多。</span><br><span class="line">sync_binlog=1</span><br><span class="line">show variables like <span class="string">&#x27;sync_binlog&#x27;</span>;</span><br><span class="line"><span class="built_in">set</span> global sync_binlog=0;</span><br><span class="line"></span><br><span class="line"><span class="comment"># relay log很多方面都跟binary log差不多。</span></span><br><span class="line"><span class="comment"># 区别是：从服务器I/O线程将主服务器的二进制日志读取过来记录到从服务器本地文件，然后SQL线程会读取relay-log日志的内容并应用到从服务器，从而使从服务器和主服务器的数据保持一致</span></span><br><span class="line"><span class="comment"># 查看方式：show replylog events in &#x27;mysql-reply-bin.000256&#x27;;</span></span><br><span class="line">relay_log = /data/mysql/mysql-relay-bin</span><br><span class="line"></span><br><span class="line">relay <span class="built_in">log</span>的相关参数：</span><br><span class="line">通过语句：show variables like <span class="string">&#x27;%relay%&#x27;</span>，查看先骨干的relay的所有相关参数</span><br><span class="line">mysql&gt; show variables like <span class="string">&#x27;%relay%&#x27;</span>;</span><br><span class="line">+-----------------------+----------------+</span><br><span class="line">| Variable_name | Value |</span><br><span class="line">+-----------------------+----------------+</span><br><span class="line">| max_relay_log_size | 0 |</span><br><span class="line">| relay_log | |</span><br><span class="line">| relay_log_index | |</span><br><span class="line">| relay_log_info_file | relay-log.info |</span><br><span class="line">| relay_log_purge | ON |</span><br><span class="line">| relay_log_recovery | OFF |</span><br><span class="line">| relay_log_space_limit | 0 |</span><br><span class="line">| sync_relay_log | 0 |</span><br><span class="line">| sync_relay_log_info | 0 |</span><br><span class="line">+-----------------------+----------------+</span><br><span class="line">9 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.08 sec)</span><br><span class="line">2.1 max_relay_log_size：标记relay <span class="built_in">log</span> 允许的最大值，如果该值为0，则默认值为max_binlog_size(1G)；如果不为0，则max_relay_log_size则为最大的relay_log文件大小；</span><br><span class="line">2.2 relay_log：定义relay_log的位置和名称，如果值为空，则默认位置在数据文件的目录，文件名为host_name-relay-bin.nnnnnn（By default, relay <span class="built_in">log</span> file names have the form host_name-relay-bin.nnnnnn <span class="keyword">in</span> the data directory）；</span><br><span class="line">2.3relay_log_index：同relay_log，定义relay_log的位置和名称；</span><br><span class="line">2.4relay_log_info_file：设置relay-log.info的位置和名称（relay-log.info记录MASTER的binary_log的恢复位置和relay_log的位置）</span><br><span class="line">2.5relay_log_purge：是否自动清空不再需要中继日志时。默认值为1(启用)。</span><br><span class="line">2.6relay_log_recovery：当slave从库宕机后，假如relay-log损坏了，导致一部分中继日志没有处理，则自动放弃所有未执行的relay-log，并且重新从master上获取日志，这样就保证了relay-log的完整性。默认情况下该功能是关闭的，将relay_log_recovery的值设置为 1时，可在slave从库上开启该功能，建议开启。</span><br><span class="line">2.7relay_log_space_limit：防止中继日志写满磁盘，这里设置中继日志最大限额。但此设置存在主库崩溃，从库中继日志不全的情况，不到万不得已，不推荐使用；</span><br><span class="line">2.8sync_relay_log：这个参数和sync_binlog是一样的，当设置为1时，slave的I/O线程每次接收到master发送过来的binlog日志都要写入系统缓冲区，然后刷入relay <span class="built_in">log</span>中继日志里，这样是最安全的，因为在崩溃的时候，你最多会丢失一个事务，但会造成磁盘的大量I/O。当设置为0时，并不是马上就刷入中继日志里，而是由操作系统决定何时来写入，虽然安全性降低了，但减少了大量的磁盘I/O操作。这个值默认是0，可动态修改，建议采用默认值。</span><br><span class="line">2.9sync_relay_log_info：这个参数和sync_relay_log参数一样，当设置为1时，slave的I/O线程每次接收到master发送过来的binlog日志都要写入系统缓冲区，然后刷入relay-log.info里，这样是最安全的，因为在崩溃的时候，你最多会丢失一个事务，但会造成磁盘的大量I/O。当设置为0时，并不是马上就刷入relay-log.info里，而是由操作系统决定何时来写入，虽然安全性降低了，但减少了大量的磁盘I/O操作。这个值默认是0，可动态修改，建议采用默认值。</span><br><span class="line">关于binlog和relay <span class="built_in">log</span>的删除方法：</span><br><span class="line">binlog 太多的 解决方法如下：</span><br><span class="line">PURGE MASTER LOGS手动删除用法及示例,MASTER和BINARY是同义词</span><br><span class="line">&gt; PURGE &#123;MASTER | BINARY&#125; LOGS TO <span class="string">&#x27;log_name&#x27;</span></span><br><span class="line">&gt; PURGE &#123;MASTER | BINARY&#125; LOGS BEFORE <span class="string">&#x27;date&#x27;</span></span><br><span class="line">实例：</span><br><span class="line">&gt; PURGE MASTER LOGS TO <span class="string">&#x27;MySQL-bin.010&#x27;</span>; //清除MySQL-bin.010日志</span><br><span class="line">&gt; PURGE MASTER LOGS BEFORE <span class="string">&#x27;2008-06-22 13:00:00&#x27;</span>; //清除2008-06-22 13:00:00前binlog日志 &gt; PURGE MASTER LOGS BEFORE DATE_SUB( NOW( ), INTERVAL 3 DAY); //清除3天前binlog日志BEFORE，变量的<span class="built_in">date</span>自变量可以为<span class="string">&#x27;YYYY-MM-DD hh:mm:ss&#x27;</span>格式。</span><br><span class="line">或者直接：</span><br><span class="line">进入数据库，查看一下当前使用的binlog日志是哪个，除了这个以外的，其它都可以使用<span class="built_in">rm</span> -rf 删除！</span><br><span class="line">relay <span class="built_in">log</span> 可以通过修改一个参数自动删除，前面已经介绍过参数：relay_log_purge=on 即可，自动清空不再需要中继日志。</span><br><span class="line">总结：</span><br><span class="line">mysql数据库的binlog和relay <span class="built_in">log</span>日志有着举足轻重的作用，并且relay <span class="built_in">log</span>仅仅存在于mysql 的slave库，它的作用就是记录slave库中的io进程接收的从主库传过来的binlog,然后等待slave库的sql进程去读取和应用，保证主从同步，但是binlog主库和从库（slave）都可以存在，记录对数据发生或潜在发生更改的SQL语句，并以二进制的形式保存在磁盘，所以可以通过binlog来实时备份和恢复数据库。</span><br><span class="line">参数主要在多主多从的集群架构中开启，否则会导致各从实例无法完整同步集群的全量数据的问题。</span><br><span class="line">多从一从</span><br><span class="line">在多主一从模式下，logs-slave-updates就没那么必须了，各主实例只需维护好自身的 bin-log，从实例则分别读取各主实例的bin-log汇总集群的全量数据，还可以一定层度上提高集群性能。</span><br><span class="line">但为了保证容灾恢复，还是要尽可能的保证logs-slave-updates的开启，否则每台主实例都只有自身数据更新的bin-log，都只能恢复集群数据的一部分，虽然也可以只恢复各自的bin-log再全量同步其他主实例的数据，但相对麻烦些。</span><br><span class="line">logs-slave-updates=1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 表示超过30天的binlog删除,启用二进制日志后保留日志的天数。服务器会自动清理指定天数前的日志文件，如果不设置则会导致服务器空间耗尽。一般设置为7～30天。</span></span><br><span class="line">expire_logs_days = 30</span><br><span class="line"></span><br><span class="line"><span class="comment"># binlog详解</span></span><br><span class="line">一、binlog复制方式</span><br><span class="line">mysql复制主要有三种方式：基于SQL语句的复制(statement-based replication, SBR)，基于行的复制(row-based replication, RBR)，混合模式复制(mixed-based replication, MBR)。对应的，binlog的格式也有三种：STATEMENT，ROW，MIXED。</span><br><span class="line">① STATEMENT模式（SBR）</span><br><span class="line">每一条会修改数据的sql语句会记录到binlog中，slave在复制的时候sql进程会解析成master端执行过的相同的sql在slave库上再次执行。</span><br><span class="line">优点：statement level下的优点首先就是解决了row level下的缺点，不需要每一条sql语句和记录每一行的变化，较少binlog日志量，节约IO，提高性能。因为它只需要记录在master上所执行的语句的细节，以及执行语句时候的上下文信息。</span><br><span class="line">缺点：由于它是记录执行语句，所以，为了让这些语句在slave端也能正确执行，那么它还必须记录每条语句在执行的时候的一些相关信息，也就是上下文信息，来保证所有语句在slave端能够得到和在master端相同的执行结果。由于mysql更新较快，使mysql的赋值遇到了不小的挑战，自然赋值的时候就会涉及到越复杂的内容，bug也就容易出现。在statement level下，目前就已经发现了不少情况会造成mysql的复制出现问题，主要是修改数据的时候使用了某些特定的函数或者功能的时候会出现。比如：<span class="built_in">sleep</span>（）函数在有些版本中就不能正确赋值，在存储过程中使用了last_insert_id（）函数，以及user-defined <span class="built_in">functions</span>(udf)等，可能会使slave和master上得到不一致的<span class="built_in">id</span>等等。由于row level是基于每一行记录的裱花，所以不会出现类似的问题。</span><br><span class="line">总结：</span><br><span class="line">Statement level优点：</span><br><span class="line">1、解决了row level的缺点，不需要记录每一行的变化。</span><br><span class="line">2、日志量少，节约IO，从库应用日志块。</span><br><span class="line">Statement level缺点：一些新功能同步可能会有障碍,比如函数、触发器等。</span><br><span class="line"></span><br><span class="line">② ROW模式（RBR）</span><br><span class="line">不记录每条sql语句的上下文信息，仅需记录哪条数据被修改了，修改成什么样了。而且不会出现某些特定情况下的存储过程、或<span class="keyword">function</span>、或trigger的调用和触发无法被正确复制的问题。缺点是会产生大量的日志，尤其是alter table的时候会让日志暴涨。日志中会记录成每一行数据修改的形式，然后在slave端再对相同的数据进行修改。</span><br><span class="line">优点：在row level的模式下，binlog中可以不记录执行的sql语句的上下文信息，仅仅只需要记录哪一条记录被修改，修改成什么样。所以row level的日志内容会非常清楚的记录每一行数据修改的细节，非常容易理解。而且不会出现某些特定情况下的存储过程，或fuction，以及trigger的调用或处罚无法被正确复制的问题。</span><br><span class="line">缺点：row level模式下，所有的执行语句都会记录到日志中，同时都会以每行记录修改的来记录，这样可能会产生大量的日志内容。</span><br><span class="line">总结：</span><br><span class="line">row level的优点：</span><br><span class="line">1、记录详细</span><br><span class="line">2、解决statement level模式无法解决的复制问题。</span><br><span class="line">row level的缺点：日志量大，因为是按行来拆分。</span><br><span class="line"> </span><br><span class="line">③ MIXED模式（MBR）</span><br><span class="line">以上两种模式的混合使用，一般的复制使用STATEMENT模式保存binlog，对于STATEMENT模式无法复制的操作使用ROW模式保存binlog，MySQL会根据执行的SQL语句选择日志保存方式，也是在statement和row之间选择一种。</span><br><span class="line">新版本中的mysql中对row level模式也做了优化，并不是所有的修改都会以row level来记录，像遇到表结构变更的时候就会以statement模式来记录，如果sql语句确实就是update或者delete等修改数据的语句，那么还是会记录所有行的变更。</span><br><span class="line"> </span><br><span class="line">binlog复制配置</span><br><span class="line"></span><br><span class="line"><span class="comment"># 主从复制事件校验</span></span><br><span class="line">binlog_checksum = none </span><br><span class="line"></span><br><span class="line">在mysql的配置文件my.cnf中，可以通过一下选项配置binglog相关</span><br><span class="line">binlog_format           = MIXED                         //binlog日志格式，mysql默认采用statement，建议使用mixed</span><br><span class="line">log-bin                 = /data/mysql/mysql-bin.log    //binlog日志文件</span><br><span class="line">expire_logs_days        = 7                           //binlog过期清理时间</span><br><span class="line">max_binlog_size         = 100m                       //binlog每个日志文件大小</span><br><span class="line">binlog_cache_size       = 4m                        //binlog缓存大小</span><br><span class="line">max_binlog_cache_size   = 512m                     //最大binlog缓存大小</span><br><span class="line">对于执行的SQL语句中包含now()这样的时间函数，会在日志中产生对应的unix_timestamp()*1000的时间字符串，slave在完成同步时，取用的是sqlEvent发生的时间来保证数据的准确性。另外对于一些功能性函数slave能完成相应的数据同步，而对于上面指定的一些类似于UDF函数，导致Slave无法知晓的情况，则会采用ROW格式存储这些Binlog，以保证产生的Binlog可以供Slave完成数据同步。</span><br><span class="line"></span><br><span class="line">现在来比较以下 SBR 和 RBR 2中模式各自的优缺点：</span><br><span class="line"></span><br><span class="line">SBR 的优点：</span><br><span class="line">历史悠久，技术成熟</span><br><span class="line">binlog文件较小</span><br><span class="line">binlog中包含了所有数据库更改信息，可以据此来审核数据库的安全等情况</span><br><span class="line">binlog可以用于实时的还原，而不仅仅用于复制</span><br><span class="line">主从版本可以不一样，从服务器版本可以比主服务器版本高</span><br><span class="line"></span><br><span class="line">SBR 的缺点：</span><br><span class="line">不是所有的UPDATE语句都能被复制，尤其是包含不确定操作的时候。</span><br><span class="line">调用具有不确定因素的 UDF 时复制也可能出问题</span><br><span class="line">使用以下函数的语句也无法被复制：</span><br><span class="line">* LOAD_FILE()</span><br><span class="line">* UUID()</span><br><span class="line">* USER()</span><br><span class="line">* FOUND_ROWS()</span><br><span class="line">* SYSDATE() (除非启动时启用了 --sysdate-is-now 选项)</span><br><span class="line">INSERT ... SELECT 会产生比 RBR 更多的行级锁</span><br><span class="line">复制需要进行全表扫描(WHERE 语句中没有使用到索引)的 UPDATE 时，需要比 RBR 请求更多的行级锁</span><br><span class="line">对于有 AUTO_INCREMENT 字段的 InnoDB表而言，INSERT 语句会阻塞其他 INSERT 语句</span><br><span class="line">对于一些复杂的语句，在从服务器上的耗资源情况会更严重，而 RBR 模式下，只会对那个发生变化的记录产生影响</span><br><span class="line">存储函数(不是存储过程)在被调用的同时也会执行一次 NOW() 函数，这个可以说是坏事也可能是好事</span><br><span class="line">确定了的 UDF 也需要在从服务器上执行</span><br><span class="line">数据表必须几乎和主服务器保持一致才行，否则可能会导致复制出错</span><br><span class="line">执行复杂语句如果出错的话，会消耗更多资源</span><br><span class="line"></span><br><span class="line">RBR 的优点：</span><br><span class="line">任何情况都可以被复制，这对复制来说是最安全可靠的</span><br><span class="line">和其他大多数数据库系统的复制技术一样</span><br><span class="line">多数情况下，从服务器上的表如果有主键的话，复制就会快了很多</span><br><span class="line">复制以下几种语句时的行锁更少：</span><br><span class="line">* INSERT ... SELECT</span><br><span class="line">* 包含 AUTO_INCREMENT 字段的 INSERT</span><br><span class="line">* 没有附带条件或者并没有修改很多记录的 UPDATE 或 DELETE 语句</span><br><span class="line">执行 INSERT，UPDATE，DELETE 语句时锁更少</span><br><span class="line">从服务器上采用多线程来执行复制成为可能</span><br><span class="line"></span><br><span class="line">RBR 的缺点：</span><br><span class="line">binlog 大了很多</span><br><span class="line">复杂的回滚时 binlog 中会包含大量的数据</span><br><span class="line">主服务器上执行 UPDATE 语句时，所有发生变化的记录都会写到 binlog 中，而 SBR 只会写一次，这会导致频繁发生 binlog 的并发写问题</span><br><span class="line">UDF 产生的大 BLOB 值会导致复制变慢</span><br><span class="line">无法从 binlog 中看到都复制了写什么语句</span><br><span class="line">当在非事务表上执行一段堆积的SQL语句时，最好采用 SBR 模式，否则很容易导致主从服务器的数据不一致情况发生</span><br><span class="line"></span><br><span class="line">另外，针对系统库 mysql 里面的表发生变化时的处理规则如下：</span><br><span class="line">如果是采用 INSERT，UPDATE，DELETE 直接操作表的情况，则日志格式根据 binlog_format 的设定而记录</span><br><span class="line">如果是采用 GRANT，REVOKE，SET PASSWORD 等管理语句来做的话，那么无论如何都采用 SBR 模式记录</span><br><span class="line">注：采用 RBR 模式后，能解决很多原先出现的主键重复问题。</span><br></pre></td></tr></table></figure><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># innodb选项</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 说明：该参数可以提升扩展性和刷脏页性能。</span></span><br><span class="line"><span class="comment"># 默认值1，建议值：4-8；并且必须小于innodb_buffer_pool_instances</span></span><br><span class="line">innodb_page_cleaners = 4</span><br><span class="line"></span><br><span class="line"><span class="comment"># 说明:只有当设置 innodb_buffer_pool_size 值大于1G时才有意义，小于1G，instances默认为1，大于1G，instances默认为8</span></span><br><span class="line"><span class="comment"># 但是网络上有评价，最佳性能，每个实例至少1G大小。</span></span><br><span class="line"><span class="comment"># 默认值：1或8，建议值：innodb_buffer_pool_size/innodb_buffer_pool_instances &gt;= 1G</span></span><br><span class="line">innodb_buffer_pool_instances = 1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 说明：mysql 5.7 新特性，defines the chunk size for online InnoDB buffer pool resizing operations.</span></span><br><span class="line"><span class="comment"># 实际缓冲区大小必须为innodb_buffer_pool_chunk_size*innodb_buffer_pool_instances*倍数，取略大于innodb_buffer_pool_size</span></span><br><span class="line"><span class="comment"># 默认值128M，建议值：默认值就好，乱改反而容易出问题，它会影响实际buffer pool大小。</span></span><br><span class="line">innodb_buffer_pool_chunk_size = 128M </span><br><span class="line"></span><br><span class="line"><span class="comment"># 在启动时把热数据加载到内存。默认值为on，不修改</span></span><br><span class="line">innodb_buffer_pool_load_at_startup = 1</span><br><span class="line"><span class="comment"># 在关闭时把热数据dump到本地磁盘。默认值为on，不修改</span></span><br><span class="line">innodb_buffer_pool_dump_at_shutdown = 1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 说明：影响Innodb缓冲区的刷新算法，建议从小到大配置，直到zero free pages；innodb_lru_scan_depth * innodb_buffer_pool_instances defines the amount of work performed by the page cleaner thread each second.</span></span><br><span class="line"><span class="comment"># 默认值1024，建议值: 未知</span></span><br><span class="line">innodb_lru_scan_depth = 1024</span><br><span class="line"></span><br><span class="line"><span class="comment"># 说明：一般8k和16k中选择，8k的话，cpu消耗小些，selcet效率高一点，一般不用改</span></span><br><span class="line"><span class="comment"># 默认值：16k；建议值：不改，</span></span><br><span class="line">innodb_page_size = 16384</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新数据表的默认存储引擎(默认设置是MyISAM)。这项设置还可以通过–default-table-type选项来设置。</span></span><br><span class="line"><span class="comment"># InnoDB为独立表空间模式，每个数据库的每个表都会生成一个数据空间。当删除或截断一个数据库表时，你也可以回收未使用的空间。这样配置的另一个好处是你可以将某些数据库表放在一个单独的存储设备。这可以大大提升你磁盘的I/O负载。</span></span><br><span class="line"><span class="comment"># 独立表空间优点：  </span></span><br><span class="line"><span class="comment"># 1．每个表都有自已独立的表空间。  </span></span><br><span class="line"><span class="comment"># 2．每个表的数据和索引都会存在自已的表空间中。  </span></span><br><span class="line"><span class="comment"># 3．可以实现单表在不同的数据库中移动。  </span></span><br><span class="line"><span class="comment"># 4．空间可以回收（除drop table操作处，表空不能自已回收）  </span></span><br><span class="line"><span class="comment"># 缺点：  </span></span><br><span class="line"><span class="comment"># 单表增加过大，如超过100G  </span></span><br><span class="line"><span class="comment"># 结论：  </span></span><br><span class="line"><span class="comment"># 共享表空间在Insert操作上少有优势。其它都没独立表空间表现好。当启用独立表空间时，请合理调整：innodb_open_files</span></span><br><span class="line">innodb_file_per_table = 1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 说明：限制Innodb能打开的表的数据，如果库里的表特别多的情况，请增加这个。</span></span><br><span class="line"><span class="comment"># 值默认是2000，建议值：参考数据库表总数再进行调整，一般够用不用调整。</span></span><br><span class="line">innodb_open_files = 8192</span><br><span class="line"></span><br><span class="line"><span class="comment"># 说明：The path where InnoDB creates undo tablespaces.通常等于undo log文件的存放目录。</span></span><br><span class="line"><span class="comment"># 默认值./;自行设置</span></span><br><span class="line">innodb_undo_directory = /usr/local/mysql-5.7.21/log  </span><br><span class="line"></span><br><span class="line"><span class="comment"># 说明：The number of undo tablespaces used by InnoDB.等于undo log文件数量。5.7.21后开始弃用</span></span><br><span class="line"><span class="comment"># 默认值为0，建议默认值就好，不用调整了。</span></span><br><span class="line">innodb_undo_tablespaces = 0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 说明：定义undo使用的回滚段数量。5.7.19后弃用</span></span><br><span class="line"><span class="comment"># 默认值128，建议不动，以后弃用了。</span></span><br><span class="line">innodb_undo_logs = 128</span><br><span class="line"></span><br><span class="line"><span class="comment"># 说明：5.7.5后开始使用，在线收缩undo log使用的空间。</span></span><br><span class="line"><span class="comment"># 默认值：关闭，建议值：开启</span></span><br><span class="line">innodb_undo_log_truncate = 1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 说明：结合innodb_undo_log_truncate，实现undo空间收缩功能</span></span><br><span class="line"><span class="comment"># 默认值：1G，建议值，不改。</span></span><br><span class="line">innodb_max_undo_log_size = 1G</span><br><span class="line"></span><br><span class="line"><span class="comment"># InnoDB主目录，所有与InnoDB数据表有关的目录或文件路径都相对于这个路径。在默认的情况下，这个主目录就是MySQL的数据目录。</span></span><br><span class="line">innodb_data_home_dir = /apps/mysql/data</span><br><span class="line"></span><br><span class="line"><span class="comment"># 用来容纳InnoDB为数据表的表空间: 可能涉及一个以上的文件; 每一个表空间文件的最大长度都必须以字节(B)、兆字节(MB)或千兆字节(GB)为单位给出; 表空间文件的名字必须以分号隔开; 最后一个表空间文件还可以带一个autoextend属性和一个最大长度(max:n)。</span></span><br><span class="line">innodb_data_file_path = ibdata1:10M:autoextend</span><br><span class="line"></span><br><span class="line"><span class="comment"># 说明:设置了InnoDB存储引擎用来存放数据字典信息以及一些内部数据结构的内存空间大小,除非你的数据对象及其多，否则一般默认不改。</span></span><br><span class="line"><span class="comment"># innodb_additional_mem_pool_size = 16M</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 用来存放InnoDB日志文件的目录路径(如ib_logfile0、ib_logfile1等)。在默认的情况下，InnoDB驱动程序将使用 MySQL数据目录作为自己保存日志文件的位置。</span></span><br><span class="line">innodb_log_group_home_dir = /apps/mysql/logs</span><br><span class="line"></span><br><span class="line"><span class="comment"># 这个参数是InnoDB存储引擎的核心参数，默认为128KB</span></span><br><span class="line"><span class="comment"># InnoDB使用一个缓冲池来保存索引和原始数据, 不像MyISAM.  </span></span><br><span class="line"><span class="comment"># 这里你设置越大,你在存取表里面数据时所需要的磁盘I/O越少.  </span></span><br><span class="line"><span class="comment"># 在一个独立使用的数据库服务器上,你可以设置这个变量到服务器物理内存大小的60-80%  </span></span><br><span class="line"><span class="comment"># 不要设置过大,否则,由于物理内存的竞争可能导致操作系统的换页颠簸.  </span></span><br><span class="line"><span class="comment"># 注意在32位系统上你每个进程可能被限制在 2-3.5G 用户层面内存限制,  </span></span><br><span class="line"><span class="comment"># 所以不要设置的太高.  </span></span><br><span class="line">innodb_buffer_pool_size = 4G</span><br><span class="line"></span><br><span class="line"><span class="comment"># Innodb使用后台线程处理数据页上的读写 I/O(输入输出)请求,根据你的 CPU 核数来更改,默认是4  </span></span><br><span class="line"><span class="comment"># 注:这两个参数不支持动态改变,需要把该参数加入到my.cnf里，修改完后重启MySQL服务,允许值的范围从1-64</span></span><br><span class="line"><span class="comment"># 建议值：与逻辑cpu数量的一半保持一致。</span></span><br><span class="line">innodb_write_io_threads = 4</span><br><span class="line">innodb_read_io_threads = 4  </span><br><span class="line"></span><br><span class="line"><span class="comment"># 默认设置为0,表示不限制并发数，这里推荐设置为0，更好去发挥CPU多核处理能力，提高并发量</span></span><br><span class="line">innodb_thread_concurrency = 0  </span><br><span class="line"></span><br><span class="line"><span class="comment"># InnoDB中的清除操作是一类定期回收无用数据的操作。在之前的几个版本中，清除操作是主线程的一部分，这意味着运行时它可能会堵塞其它的数据库操作。  </span></span><br><span class="line"><span class="comment"># 从MySQL5.5.X版本开始，该操作运行于独立的线程中,并支持更多的并发数。</span></span><br><span class="line"><span class="comment"># 用户可通过设置innodb_purge_threads配置参数来选择清除操作是否使用单独线程,默认情况下参数设置为0(不使用单独线程),</span></span><br><span class="line"><span class="comment"># 设置为 1 时表示使用单独的清除线程。建议为1</span></span><br><span class="line"><span class="comment"># mysql 5.5之后，支持多线程清除操作。</span></span><br><span class="line">innodb_purge_threads = 1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 说明：mysql缓冲区分为new blocks和old blocks；此参数表示old blocks占比；</span></span><br><span class="line"><span class="comment"># 默认值：37，建议值，一般不动</span></span><br><span class="line">innodb_old_blocks_pct = 37</span><br><span class="line"></span><br><span class="line"><span class="comment"># 说明：新数据被载入缓冲池，进入old pages链区，当1秒后再次访问，则提升进入new pages链区。</span></span><br><span class="line"><span class="comment"># 默认值：1000</span></span><br><span class="line">innodb_old_blocks_time=1000</span><br><span class="line"></span><br><span class="line"><span class="comment"># 说明：开启异步io，可以提高并发性，默认开启。</span></span><br><span class="line"><span class="comment"># 默认值为1，建议不动</span></span><br><span class="line">innodb_use_native_aio = 1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 事务日志文件写操作缓存区的最大长度(默认设置是1MB)。更大的设置可以提高性能，但也会增加恢复故障数据库所需的时间</span></span><br><span class="line">innodb_log_file_size = 1G  </span><br><span class="line"></span><br><span class="line"><span class="comment"># 为提高性能，MySQL可以以循环方式将日志文件写到多个文件。默认值2，推荐设置为3</span></span><br><span class="line">innodb_log_files_in_group = 3 </span><br><span class="line"></span><br><span class="line"><span class="comment"># innodb主线程刷新缓存池中的数据，使脏数据比例小于90%</span></span><br><span class="line">innodb_max_dirty_pages_pct = 90 </span><br><span class="line"></span><br><span class="line"><span class="comment"># 从MySQL5.5.X版本开始，你可以开启InnoDB严格检查模式，尤其采用了页数据压缩功能后，最好是开启该功能。开启此功能后，当创建表（CREATE TABLE）、更改表（ALTER TABLE）和创建索引（CREATE INDEX）语句时，如果写法有错误，不会有警告信息，而是直接抛出错误，这样就可直接将问题扼杀在摇篮里。</span></span><br><span class="line"><span class="comment"># 开启InnoDB严格检查模式涉及的参数是innodb_strict_mode，默认为OFF，支持动态开启</span></span><br><span class="line">innodb_strict_mode = 0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 此参数确定些日志文件所用的内存大小，以M为单位。缓冲区更大能提高性能，但意外的故障将会丢失数据。事务日志所使用的缓存区。InnoDB在写事务日志的时候为了提高性能，先将信息写入Innodb Log Buffer中，当满足innodb_flush_log_trx_commit参数所设置的相应条件（或者日志缓冲区写满）时，再将日志写到文件（或者同步到磁盘）中。可以通过innodb_log_buffer_size参数设置其可以使用的最大内存空间。默认是8MB，一般为16～64MB即可。</span></span><br><span class="line">innodb_log_buffer_size = 64M</span><br><span class="line"></span><br><span class="line"><span class="comment"># 说明：可以控制log从系统buffer刷入磁盘文件的刷新频率，增大可减轻系统负荷</span></span><br><span class="line"><span class="comment"># 默认值是1；建议值不改。系统性能一般够用。</span></span><br><span class="line">innodb_flush_log_at_timeout = 1</span><br><span class="line"></span><br><span class="line"><span class="comment"># 这个选项决定着什么时候把日志信息写入日志文件以及什么时候把这些文件物理地写(术语称为”同步”)到硬盘上。</span></span><br><span class="line"><span class="comment"># 0: 如果innodb_flush_log_at_trx_commit的值为0,log buffer每秒就会被刷写日志文件到磁盘，提交事务的时候不做任何操作（执行是由mysql的master thread线程来执行的。  </span></span><br><span class="line"><span class="comment"># 主线程中每秒会将重做日志缓冲写入磁盘的重做日志文件(REDO LOG)中。不论事务是否已经提交）默认的日志文件是ib_logfile0,ib_logfile1  </span></span><br><span class="line"><span class="comment"># 1: 当设为默认值1的时候，每次提交事务的时候，都会将log buffer刷写到日志。  </span></span><br><span class="line"><span class="comment"># 2: 如果设为2,每次提交事务都会写日志，但并不会执行刷的操作。每秒定时会刷到日志文件。要注意的是，并不能保证100%每秒一定都会刷到磁盘，这要取决于进程的调度。  </span></span><br><span class="line"><span class="comment"># 每次事务提交的时候将数据写入事务日志，而这里的写入仅是调用了文件系统的写入操作，而文件系统是有 缓存的，所以这个写入并不能保证数据已经写入到物理磁盘</span></span><br><span class="line"><span class="comment"># 默认值1是为了保证完整的ACID。当然，你可以将这个配置项设为1以外的值来换取更高的性能，但是在系统崩溃的时候，你将会丢失1秒的数据。  </span></span><br><span class="line"><span class="comment"># 设为0的话，mysqld进程崩溃的时候，就会丢失最后1秒的事务。设为2,只有在操作系统崩溃或者断电的时候才会丢失最后1秒的数据。InnoDB在做恢复的时候会忽略这个值。  </span></span><br><span class="line"><span class="comment"># 总结 </span></span><br><span class="line"><span class="comment"># 设为1当然是最安全的，但性能页是最差的（相对其他两个参数而言，但不是不能接受）。如果对数据一致性和完整性要求不高，完全可以设为2，如果只最求性能，例如高并发写的日志服务器，设为0来获得更高性能</span></span><br><span class="line">innodb_flush_log_at_trx_commit = 1  </span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果某个事务在等待n秒(s)后还没有获得所需要的资源，就使用ROLLBACK命令放弃这个事务。这项设置对于发现和处理未能被InnoDB数据表驱动 程序识别出来的死锁条件有着重要的意义。</span></span><br><span class="line"><span class="comment"># InnoDB事务在被回滚之前可以等待一个锁定的超时秒数。InnoDB在它自己的锁定表中自动检测事务死锁并且回滚事务。InnoDB用LOCK TABLES语句注意到锁定设置。默认值是50秒</span></span><br><span class="line">innodb_lock_wait_timeout = 50</span><br><span class="line"></span><br><span class="line"><span class="comment"># 说明：设置了Mysql后台任务（例如页刷新和merge dadta from buffer pool）每秒io操作的上限。</span></span><br><span class="line"><span class="comment"># 默认值：200，建议值：方法一，单盘sata设100，sas10，raid10设200，ssd设2000，fushion-io设50000；方法二，通过测试工具获得磁盘io性能后，设置IOPS数值/2。</span></span><br><span class="line">innodb_io_capacity = 2000</span><br><span class="line"></span><br><span class="line"><span class="comment"># 说明：该参数是所有缓冲区线程io操作的总上限。</span></span><br><span class="line"><span class="comment"># 默认值：innodb_io_capacity的两倍。建议值：例如用iometer测试后的iops数值就好</span></span><br><span class="line">innodb_io_capacity_max = 4000</span><br><span class="line"></span><br><span class="line"><span class="comment"># 说明：控制着innodb数据文件及redo log的打开、刷写模式，三种模式：fdatasync(默认)，O_DSYNC，O_DIRECT</span></span><br><span class="line"><span class="comment"># fdatasync：数据文件，buffer pool-&gt;os buffer-&gt;磁盘；日志文件，buffer pool-&gt;os buffer-&gt;磁盘；</span></span><br><span class="line"><span class="comment"># O_DSYNC：  数据文件，buffer pool-&gt;os buffer-&gt;磁盘；日志文件，buffer pool-&gt;磁盘；</span></span><br><span class="line"><span class="comment"># O_DIRECT： 数据文件，buffer pool-&gt;磁盘；           日志文件，buffer pool-&gt;os buffer-&gt;磁盘；</span></span><br><span class="line"><span class="comment"># 默认值为空，建议值：使用SAN或者raid，建议用O_DIRECT，不懂测试的话，默认生产上使用O_DIRECT</span></span><br><span class="line">innodb_flush_method = O_DIRECT</span><br><span class="line"></span><br><span class="line">innodb_force_recovery = 1</span><br><span class="line">为了验证数据库页面是否损坏，可以使用SELECT ... INTO OUTFILE从数据库导出数据表。一般情况下以这种方式获得的数据大多数是完整的。但如果是损坏严重的数据可能导致SELECT * FROM tbl_name语句或InnoDB后台操作崩溃或断言，甚至导致InnoDB回滚恢复崩溃。在这种情况下，可以使用innodb_force_recovery选项让InnoDB存储引擎强制启动，同时防止后台操作运行，这样可以转储表了。</span><br><span class="line">注意</span><br><span class="line">在进行这个操作之前，务必备份数据库。</span><br><span class="line">在紧急情况下，为了可以启动InnoDB并转储表，必须将innodb_force_recovery设置为大于0的值。</span><br><span class="line">4或更高的值可能会永久损坏数据文件。在测试数据库的单独物理副本上操作成功后，才能在生产服务器使用4或更高版本的innodb_force_recovery设置。当InnoDB强制恢复时，应该始终以innodb_force_recovery = 1开始，并根据需要逐渐增加值。为什么从1开始呢，因为1是最保险的，可以看后面对不同值的解释</span><br><span class="line">innodb_force_recovery默认为0（正常启动）。 innodb_force_recovery的非零值是从1到6。较大的值包括较小值的功能。例如，3包括1和2的所有功能。</span><br><span class="line">innodb_force_recovery值为3或更小时，只有损坏的单个页面上的某些数据丢失。 4或更高的值是危险的，因为数据文件可能永久损坏。6不建议使用，因为数据库页面处于过时状态，这陆续可能在B树和其他数据库结构中引入更多的损坏。</span><br><span class="line">为了安全起见，InnoDB在innodb_force_recovery大于0时会阻止INSERT，UPDATE或DELETE操作。</span><br><span class="line">    【Mysql 5.7】</span><br><span class="line">    在innodb只读模式下innodb_force_recovery可以设置为4或更大值</span><br><span class="line">1 (SRV_FORCE_IGNORE_CORRUPT)</span><br><span class="line">当检测到损坏的页面时继续让服务器运行。 导出表时尝试SELECT * FROM tbl_name跳过损坏的索引记录和页面。</span><br><span class="line"></span><br><span class="line">2 (SRV_FORCE_NO_BACKGROUND)</span><br><span class="line">阻止主线程和任何废止线程运行。 设置为2可以在废止操作期间阻止崩溃。</span><br><span class="line"></span><br><span class="line">3 (SRV_FORCE_NO_TRX_UNDO)</span><br><span class="line">崩溃后恢复时不执行事务回滚</span><br><span class="line"></span><br><span class="line">4 (SRV_FORCE_NO_IBUF_MERGE)</span><br><span class="line">阻止写入缓冲区合并操作。 如果会造成事故，不做写入，不计算表统计。 此类型可能会永久损坏数据文件。 需要删除并重新创建所有辅助索引。innoDB设置为只读模式【Mysql 5.7】</span><br><span class="line"></span><br><span class="line">5 (SRV_FORCE_NO_UNDO_LOG_SCAN)</span><br><span class="line">启动数据库时不查看undo日志：InnoDB会将不完整的事务视为已提交。 设置为此值可能会永久损坏数据文件。innoDB设置为只读模式【Mysql 5.7】</span><br><span class="line"></span><br><span class="line">6 (SRV_FORCE_NO_LOG_REDO)</span><br><span class="line">无法将与恢复相关联的重做日志恢复。设置此值可能会永久损坏数据文件。让数据库页面处于过时状态，从而可能会在B树和其他数据库结构中引入更多的损坏。innoDB设置为只读模式【Mysql 5.7】</span><br><span class="line">即使开启了innodb_force_recovery设置也可以使用SELECT from tables导出表数据或者删除、创建表。如果知道在回滚时会引起崩溃，可以直接删除这个表。</span><br><span class="line"></span><br><span class="line">    【Mysql 5.7】</span><br><span class="line">    可以使用 SELECT from tables来导出表数据。innodb_force_recovery设置为3及以下时可以创建和删除表。当然如果mysql版本低于5.7.18，innodb_force_recovery设置为3以上也是可以删除表的，从5.7.18起被禁止了。</span><br><span class="line"></span><br><span class="line">您还可以使用它来停止由大量导入失败导致的失控回滚或ALTER TABLE操作：</span><br><span class="line">杀掉mysql进程并将innodb_force_recovery设置为3，让数据库升级而不进行回滚，然后删除导致失控回滚的表。</span><br><span class="line">如果表数据中的损坏而导出不了，可以使用ORDER BY primary_key DESC子句的查询将损坏部分后的数据导出来。</span><br><span class="line">如果innodb_force_recovery必须要设置很大的值才能启动innodb，这可能会导致复杂查询（包含WHERE，ORDER BY或其他子句的查询）失败。这时候只能运行基本的SELECT * FROM t查询。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置文件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql_server</title>
      <link href="/posts/b97760d.html"/>
      <url>/posts/b97760d.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/sh</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Copyright Abandoned 1996 TCX DataKonsult AB &amp; Monty Program KB &amp; Detron HB</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">This file is public domain and comes with NO WARRANTY of any kind</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">MySQL daemon start/stop script.</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Usually this is put <span class="keyword">in</span> /etc/init.d (at least on machines SYSV R4 based</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">systems) and linked to /etc/rc3.d/S99mysql and /etc/rc0.d/K01mysql.</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">When this is <span class="keyword">done</span> the mysql server will be started when the machine is</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">started and shut down when the systems goes down.</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Comments to support chkconfig on RedHat Linux</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">chkconfig: 2345 64 36</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">description: A very fast and reliable SQL database engine.</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Comments to support LSB init script conventions</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">## BEGIN INIT INFO</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Provides: mysql</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Required-Start: <span class="variable">$local_fs</span> <span class="variable">$network</span> <span class="variable">$remote_fs</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Should-Start: ypbind nscd ldap ntpd xntpd</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Required-Stop: <span class="variable">$local_fs</span> <span class="variable">$network</span> <span class="variable">$remote_fs</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Default-Start:  2 3 4 5</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Default-Stop: 0 1 6</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Short-Description: start and stop MySQL</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Description: MySQL is a very fast and reliable SQL database engine.</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">## END INIT INFO</span></span></span><br><span class="line"><span class="meta prompt_"> </span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">If you install MySQL on some other places than /usr/local/webserver/mysql, <span class="keyword">then</span> you</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">have to <span class="keyword">do</span> one of the following things <span class="keyword">for</span> this script to work:</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment"># - Run this script from within the MySQL installation directory</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">- Create a /etc/my.cnf file with the following information:</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">  [mysqld]</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">  basedir=&lt;path-to-mysql-installation-directory&gt;</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">- Add the above to any other configuration file (<span class="keyword">for</span> example ~/.my.ini)</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">  and copy my_print_defaults to /usr/bin</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">- Add the path to the mysql-installation-directory to the basedir variable</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">  below.</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment"># If you want to affect other MySQL variables, you should make your changes</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="keyword">in</span> the /etc/my.cnf, ~/.my.cnf or other MySQL configuration files.</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">If you change base <span class="built_in">dir</span>, you must also change datadir. These may get</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">overwritten by settings <span class="keyword">in</span> the MySQL configuration files.</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">mysql根目录</span></span><br><span class="line">basedir=</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">数据根目录</span></span><br><span class="line">datadir=</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Default value, <span class="keyword">in</span> seconds, afterwhich the script should <span class="built_in">timeout</span> waiting</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="keyword">for</span> server start.</span> </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Value here is overriden by value <span class="keyword">in</span> my.cnf.</span> </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">0 means don<span class="string">&#x27;t wait at all</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">Negative numbers mean to wait indefinitely</span></span></span><br><span class="line">service_startup_timeout=900</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">Lock directory for RedHat / SuSE.</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">lock所在保存目录</span></span></span><br><span class="line">lockdir=&#x27;/var/lock/subsys&#x27;</span><br><span class="line">lock_file_path=&quot;$lockdir/mysql&quot;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">The following variables are only set for letting mysql.server find things.</span></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">Set some defaults</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">pid所在路径</span></span></span><br><span class="line">mysqld_pid_file_path=/var/run/mysql.pid</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">如果没有设置根目录，根目录修改为默认目录</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">根目录为空</span></span></span><br><span class="line">if test -z &quot;$basedir&quot;</span><br><span class="line">then</span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash"><span class="string">设置根目录和bin目录</span></span></span><br><span class="line">  basedir=/usr/local/webserver/mysql</span><br><span class="line">  bindir=/usr/local/webserver/mysql/bin</span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash"><span class="string">数据目录为空</span></span></span><br><span class="line">  if test -z &quot;$datadir&quot;</span><br><span class="line">  then</span><br><span class="line">    # 设置数据目录</span><br><span class="line">    datadir=/data/mysqlData</span><br><span class="line">  fi</span><br><span class="line">  sbindir=/usr/local/webserver/mysql/bin</span><br><span class="line">  libexecdir=/usr/local/webserver/mysql/bin</span><br><span class="line">else</span><br><span class="line">  bindir=&quot;$basedir/bin&quot;</span><br><span class="line">  if test -z &quot;$datadir&quot;</span><br><span class="line">  then</span><br><span class="line">    datadir=&quot;$basedir/data&quot;</span><br><span class="line">  fi</span><br><span class="line">  sbindir=&quot;$basedir/sbin&quot;</span><br><span class="line">  libexecdir=&quot;$basedir/libexec&quot;</span><br><span class="line">fi</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">datadir_set is used to determine if datadir was set (and so should be</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">*not* set inside of the --basedir= handler.)</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">用于判断datadir是否配置</span></span></span><br><span class="line">datadir_set=</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="string"></span></span></span><br><span class="line"><span class="string"><span class="language-bash"># Use LSB init script functions for printing messages, if possible</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">默认使用系统日志函数，否则使用mysql的日志函数</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="string"></span></span></span><br><span class="line"><span class="string"><span class="language-bash">lsb_functions=&quot;/lib/lsb/init-functions&quot;</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">如果存在文件</span></span></span><br><span class="line">if test -f $lsb_functions ; then</span><br><span class="line">  . $lsb_functions</span><br><span class="line">else</span><br><span class="line">  log_success_msg()</span><br><span class="line">  &#123;</span><br><span class="line">    echo &quot; SUCCESS! $@&quot;</span><br><span class="line">  &#125;</span><br><span class="line">  log_failure_msg()</span><br><span class="line">  &#123;</span><br><span class="line">    echo &quot; ERROR! $@&quot;</span><br><span class="line">  &#125;</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">PATH=&quot;/sbin:/usr/sbin:/bin:/usr/bin:$basedir/bin&quot;</span><br><span class="line">export PATH</span><br><span class="line"></span><br><span class="line">mode=$1    # start or stop</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">如果参数个数 &gt;= 1, 删除$1</span></span></span><br><span class="line">[ $# -ge 1 ] &amp;&amp; shift</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">将第一个参数后的其他参数赋予other_args变量</span></span></span><br><span class="line">other_args=&quot;$*&quot;   # uncommon, but needed when called from an RPM upgrade action</span><br><span class="line">           # Expected: &quot;--skip-networking --skip-grant-tables&quot;</span><br><span class="line">           # They are not checked here, intentionally, as it is the resposibility</span><br><span class="line">           # of the &quot;spec&quot; file author to give correct arguments only.</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">系统对echo c 和 echo -n 的结果</span></span></span><br><span class="line">case `echo &quot;testing\c&quot;`,`echo -n testing` in</span><br><span class="line">    *c*,-n*) echo_n=   echo_c=     ;;</span><br><span class="line">    *c*,*)   echo_n=-n echo_c=     ;;</span><br><span class="line">    *)       echo_n=   echo_c=&#x27;\c&#x27; ;;</span><br><span class="line">esac</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">该函数将my_print_defaults 命令分析出得参数赋值给相应的变量</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">--basedir=xxx 解析为basedir=xxx</span></span></span><br><span class="line">parse_server_arguments() &#123;</span><br><span class="line">  for arg do</span><br><span class="line">    case &quot;$arg&quot; in</span><br><span class="line">      --basedir=*)  basedir=`echo &quot;$arg&quot; | sed -e &#x27;s/^[^=]*=//&#x27;`</span><br><span class="line">                    bindir=&quot;$basedir/bin&quot;</span><br><span class="line">    if test -z &quot;$datadir_set&quot;; then</span><br><span class="line">      datadir=&quot;$basedir/data&quot;</span><br><span class="line">    fi</span><br><span class="line">    sbindir=&quot;$basedir/sbin&quot;</span><br><span class="line">    libexecdir=&quot;$basedir/libexec&quot;</span><br><span class="line">        ;;</span><br><span class="line">      --datadir=*)  datadir=`echo &quot;$arg&quot; | sed -e &#x27;s/^[^=]*=//&#x27;`</span><br><span class="line">    datadir_set=1</span><br><span class="line">;;</span><br><span class="line">      --pid-file=*) mysqld_pid_file_path=`echo &quot;$arg&quot; | sed -e &#x27;s/^[^=]*=//&#x27;` ;;</span><br><span class="line">      --service-startup-timeout=*) service_startup_timeout=`echo &quot;$arg&quot; | sed -e &#x27;s/^[^=]*=//&#x27;` ;;</span><br><span class="line">    esac</span><br><span class="line">  done</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">该函数在启动和停止mysql服务时用于等待pid的生成</span></span></span><br><span class="line">wait_for_pid () &#123;</span><br><span class="line">  verb=&quot;$1&quot;           # created | removed</span><br><span class="line">  pid=&quot;$2&quot;            # process ID of the program operating on the pid-file</span><br><span class="line">  pid_file_path=&quot;$3&quot; # path to the PID file.</span><br><span class="line"></span><br><span class="line">  i=0</span><br><span class="line">  avoid_race_condition=&quot;by checking again&quot;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash"><span class="string">$i != 等待时间</span></span></span><br><span class="line">  while test $i -ne $service_startup_timeout ; do</span><br><span class="line"></span><br><span class="line">    case &quot;$verb&quot; in</span><br><span class="line">      &#x27;created&#x27;)</span><br><span class="line">        # wait for a PID-file to pop into existence.</span><br><span class="line">        # 已存在pid跳出</span><br><span class="line">        test -s &quot;$pid_file_path&quot; &amp;&amp; i=&#x27;&#x27; &amp;&amp; break</span><br><span class="line">        ;;</span><br><span class="line">      &#x27;removed&#x27;)</span><br><span class="line">        # wait for this PID-file to disappear</span><br><span class="line">        # pid不存在跳出</span><br><span class="line">        test ! -s &quot;$pid_file_path&quot; &amp;&amp; i=&#x27;&#x27; &amp;&amp; break</span><br><span class="line">        ;;</span><br><span class="line">      *)</span><br><span class="line">        echo &quot;wait_for_pid () usage: wait_for_pid created|removed pid pid_file_path&quot;</span><br><span class="line">        exit 1</span><br><span class="line">        ;;</span><br><span class="line">    esac</span><br><span class="line"></span><br><span class="line">    # if server isn&#x27;t running, then pid-file will never be updated</span><br><span class="line">    # pid存在</span><br><span class="line">    if test -n &quot;$pid&quot;; then</span><br><span class="line"></span><br><span class="line">      # 检查是否有权限删除 0-没有权限 1-有权限</span><br><span class="line">      if kill -0 &quot;$pid&quot; 2&gt;/dev/null; then</span><br><span class="line">        :  # the server still runs</span><br><span class="line">      else</span><br><span class="line">        # The server may have exited between the last pid-file check and now.  </span><br><span class="line">        if test -n &quot;$avoid_race_condition&quot;; then</span><br><span class="line">          avoid_race_condition=&quot;&quot;</span><br><span class="line">          continue  # Check again.</span><br><span class="line">        fi</span><br><span class="line"></span><br><span class="line">        # there&#x27;s nothing that will affect the file.</span><br><span class="line">        log_failure_msg &quot;The server quit without updating PID file ($pid_file_path).&quot;</span><br><span class="line">        return 1  # not waiting any more.</span><br><span class="line">      fi</span><br><span class="line">    fi</span><br><span class="line"></span><br><span class="line">    echo $echo_n &quot;.$echo_c&quot;</span><br><span class="line">    i=`expr $i + 1`</span><br><span class="line">    sleep 1</span><br><span class="line"></span><br><span class="line">  done</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash"><span class="string">$i空</span></span></span><br><span class="line">  if test -z &quot;$i&quot; ; then</span><br><span class="line">    log_success_msg</span><br><span class="line">    return 0</span><br><span class="line">  else</span><br><span class="line">    log_failure_msg</span><br><span class="line">    return 1</span><br><span class="line">  fi</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">Get arguments from the my.cnf file,</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">the only group, which is read from now on is [mysqld]</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">得到有执行权限的my_print_defaults程序（这个程序是将my.cnf中的参数打印出来，</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">其读取my.cnf的顺序是/etc/my.cnf /etc/mysql/my.cnf /usr/local/mysql/etc/my.cnf ~/.my.cnf，后面的参数会覆盖掉前面的参数）</span></span></span><br><span class="line">if test -x &quot;$bindir/my_print_defaults&quot;;  then</span><br><span class="line">  print_defaults=&quot;$bindir/my_print_defaults&quot;</span><br><span class="line">else</span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash"><span class="string">Try to find basedir in /etc/my.cnf</span></span></span><br><span class="line">  conf=/etc/my.cnf</span><br><span class="line">  print_defaults=</span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash"><span class="string">文件可读</span></span></span><br><span class="line">  if test -r $conf</span><br><span class="line">  then</span><br><span class="line">    subpat=&#x27;^[^=]*basedir[^=]*=\(.*\)$&#x27;</span><br><span class="line">    dirs=`sed -e &quot;/$subpat/!d&quot; -e &#x27;s//\1/&#x27; $conf`</span><br><span class="line">    for d in $dirs</span><br><span class="line">    do</span><br><span class="line">      d=`echo $d | sed -e &#x27;s/[ ]//g&#x27;`</span><br><span class="line">      # 文件可执行</span><br><span class="line">      if test -x &quot;$d/bin/my_print_defaults&quot;</span><br><span class="line">      then</span><br><span class="line">        print_defaults=&quot;$d/bin/my_print_defaults&quot;</span><br><span class="line">        break</span><br><span class="line">      fi</span><br><span class="line">    done</span><br><span class="line">  fi</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash"><span class="string">Hope it&#x27;</span>s <span class="keyword">in</span> the PATH ... but I doubt it</span></span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash">如果<span class="variable">$print_defaults</span>未配置则设置<span class="variable">$print_defaults</span>为默认值</span></span><br><span class="line">  test -z &quot;$print_defaults&quot; &amp;&amp; print_defaults=&quot;my_print_defaults&quot;</span><br><span class="line">fi</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment"># Read defaults file from &#x27;basedir&#x27;.   If there is no defaults file there</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">check <span class="keyword">if</span> it<span class="string">&#x27;s in the old (depricated) place (datadir) and read it from there</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">获取附加的my.cnf。这个里的参数值会覆盖其他的参数设置。</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">注意，如果basedir下有my.cnf就不会再去读取datadir下的my.cnf。如果basedir下面没有my.cnf则会继续读取datadir下的my.cnf。</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="string"></span></span></span><br><span class="line"><span class="string"><span class="language-bash"></span></span></span><br><span class="line">extra_args=&quot;&quot;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">mysql/my.cnf可读</span></span></span><br><span class="line">if test -r &quot;$basedir/my.cnf&quot;</span><br><span class="line">then</span><br><span class="line"><span class="meta prompt_">  # </span><span class="language-bash"><span class="string">文件存在</span></span></span><br><span class="line">  extra_args=&quot;-e $basedir/my.cnf&quot;</span><br><span class="line">fi</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">将my_print_defaults程序打印出来的Mysql参数用parse_server_arguments进行解析，解析后的值会是这个脚本环境中的变量值。</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">这个命令主要用来分析my.cnf的参数 使用方法 my_print_defaults   -e  my.cnf   mysqld (指的配置文件中[mysqld]下的内容)</span></span></span><br><span class="line">parse_server_arguments `$print_defaults $extra_args mysqld server mysql_server mysql.server`</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="string"></span></span></span><br><span class="line"><span class="string"><span class="language-bash"># Set pid file if not given</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">设置mysqld_pid_file_path变量（其代表pid 文件的位置），如果没有设置这个值或者不是绝对路径，则默认会在$datadir下面</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="string"></span></span></span><br><span class="line"><span class="string"><span class="language-bash">if test -z &quot;$mysqld_pid_file_path&quot;</span></span></span><br><span class="line">then</span><br><span class="line">  mysqld_pid_file_path=$datadir/`hostname`.pid</span><br><span class="line">else</span><br><span class="line">  case &quot;$mysqld_pid_file_path&quot; in</span><br><span class="line">    /* ) ;;</span><br><span class="line">    * )  mysqld_pid_file_path=&quot;$datadir/$mysqld_pid_file_path&quot; ;;</span><br><span class="line">  esac</span><br><span class="line">fi</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">启动和停止mysql server 的主体程序</span></span></span><br><span class="line">case &quot;$mode&quot; in</span><br><span class="line">  &#x27;start&#x27;)</span><br><span class="line">    # Start daemon</span><br><span class="line"></span><br><span class="line">    # Safeguard (relative paths, core dumps..)</span><br><span class="line">    cd $basedir</span><br><span class="line"></span><br><span class="line">    echo $echo_n &quot;Starting MySQL&quot;</span><br><span class="line">    # 如果可执行</span><br><span class="line">    if test -x $bindir/mysqld_safe</span><br><span class="line">    then</span><br><span class="line">      # Give extra arguments to mysqld with the my.cnf file. This script</span><br><span class="line">      # may be overwritten at next upgrade.</span><br><span class="line">      # 启动mysql服务</span><br><span class="line">      $bindir/mysqld_safe --datadir=&quot;$datadir&quot; --pid-file=&quot;$mysqld_pid_file_path&quot; $other_args &gt;/dev/null &amp;</span><br><span class="line">      # 等待启动</span><br><span class="line">      wait_for_pid created &quot;$!&quot; &quot;$mysqld_pid_file_path&quot;; return_value=$?</span><br><span class="line"></span><br><span class="line">      # Make lock for RedHat / SuSE</span><br><span class="line">      # 判断是否可写，然后创建系统服务锁</span><br><span class="line">      if test -w &quot;$lockdir&quot;</span><br><span class="line">      then</span><br><span class="line">        touch &quot;$lock_file_path&quot;</span><br><span class="line">      fi</span><br><span class="line"></span><br><span class="line">      exit $return_value</span><br><span class="line">    else</span><br><span class="line">      log_failure_msg &quot;Couldn&#x27;t find MySQL server ($bindir/mysqld_safe)&quot;</span><br><span class="line">    fi</span><br><span class="line">    ;;</span><br><span class="line"></span><br><span class="line">  &#x27;stop&#x27;)</span><br><span class="line">    # Stop daemon. We use a signal here to avoid having to know the</span><br><span class="line">    # root password.</span><br><span class="line"></span><br><span class="line">    # 存在pid</span><br><span class="line">    if test -s &quot;$mysqld_pid_file_path&quot;</span><br><span class="line">    then</span><br><span class="line">      # signal mysqld_safe that it needs to stop</span><br><span class="line">      touch &quot;$mysqld_pid_file_path.shutdown&quot;</span><br><span class="line"></span><br><span class="line">      mysqld_pid=`cat &quot;$mysqld_pid_file_path&quot;`</span><br><span class="line"></span><br><span class="line">      # 如果有删除pid权限则删除</span><br><span class="line">      if (kill -0 $mysqld_pid 2&gt;/dev/null)</span><br><span class="line">      then</span><br><span class="line">        echo $echo_n &quot;Shutting down MySQL&quot;</span><br><span class="line">        kill $mysqld_pid</span><br><span class="line">        # mysqld should remove the pid file when it exits, so wait for it.</span><br><span class="line">        wait_for_pid removed &quot;$mysqld_pid&quot; &quot;$mysqld_pid_file_path&quot;; return_value=$?</span><br><span class="line">      else</span><br><span class="line">        log_failure_msg &quot;MySQL server process #$mysqld_pid is not running!&quot;</span><br><span class="line">        rm &quot;$mysqld_pid_file_path&quot;</span><br><span class="line">      fi</span><br><span class="line"></span><br><span class="line">      # Delete lock for RedHat / SuSE</span><br><span class="line">      # 如果有锁，则删除锁</span><br><span class="line">      if test -f &quot;$lock_file_path&quot;</span><br><span class="line">      then</span><br><span class="line">        rm -f &quot;$lock_file_path&quot;</span><br><span class="line">      fi</span><br><span class="line">      exit $return_value</span><br><span class="line">    else</span><br><span class="line">      log_failure_msg &quot;MySQL server PID file could not be found!&quot;</span><br><span class="line">    fi</span><br><span class="line">    ;;</span><br><span class="line"></span><br><span class="line">  &#x27;restart&#x27;)</span><br><span class="line">    # Stop the service and regardless of whether it was</span><br><span class="line">    # running or not, start it again.</span><br><span class="line">    if $0 stop  $other_args; then</span><br><span class="line">      $0 start $other_args</span><br><span class="line">    else</span><br><span class="line">      log_failure_msg &quot;Failed to stop running server, so refusing to try to start.&quot;</span><br><span class="line">      exit 1</span><br><span class="line">    fi</span><br><span class="line">    ;;</span><br><span class="line"></span><br><span class="line">  &#x27;reload&#x27;|&#x27;force-reload&#x27;)</span><br><span class="line">    if test -s &quot;$mysqld_pid_file_path&quot; ; then</span><br><span class="line">      read mysqld_pid &lt;  &quot;$mysqld_pid_file_path&quot;</span><br><span class="line">      kill -HUP $mysqld_pid &amp;&amp; log_success_msg &quot;Reloading service MySQL&quot;</span><br><span class="line">      touch &quot;$mysqld_pid_file_path&quot;</span><br><span class="line">    else</span><br><span class="line">      log_failure_msg &quot;MySQL PID file could not be found!&quot;</span><br><span class="line">      exit 1</span><br><span class="line">    fi</span><br><span class="line">    ;;</span><br><span class="line">  &#x27;status&#x27;)</span><br><span class="line">    # First, check to see if pid file exists</span><br><span class="line">    if test -s &quot;$mysqld_pid_file_path&quot; ; then </span><br><span class="line">      read mysqld_pid &lt; &quot;$mysqld_pid_file_path&quot;</span><br><span class="line">      if kill -0 $mysqld_pid 2&gt;/dev/null ; then </span><br><span class="line">        log_success_msg &quot;MySQL running ($mysqld_pid)&quot;</span><br><span class="line">        exit 0</span><br><span class="line">      else</span><br><span class="line">        log_failure_msg &quot;MySQL is not running, but PID file exists&quot;</span><br><span class="line">        exit 1</span><br><span class="line">      fi</span><br><span class="line">    else</span><br><span class="line">      # Try to find appropriate mysqld process</span><br><span class="line">      mysqld_pid=`pidof $libexecdir/mysqld`</span><br><span class="line"></span><br><span class="line">      # test if multiple pids exist</span><br><span class="line">      pid_count=`echo $mysqld_pid | wc -w`</span><br><span class="line">      if test $pid_count -gt 1 ; then</span><br><span class="line">        log_failure_msg &quot;Multiple MySQL running but PID file could not be found ($mysqld_pid)&quot;</span><br><span class="line">        exit 5</span><br><span class="line">      elif test -z $mysqld_pid ; then</span><br><span class="line">        # pid不存在，锁还在</span><br><span class="line">        if test -f &quot;$lock_file_path&quot; ; then </span><br><span class="line">          log_failure_msg &quot;MySQL is not running, but lock file ($lock_file_path) exists&quot;</span><br><span class="line">          exit 2</span><br><span class="line">        fi </span><br><span class="line">        log_failure_msg &quot;MySQL is not running&quot;</span><br><span class="line">        exit 3</span><br><span class="line">      else</span><br><span class="line">        log_failure_msg &quot;MySQL is running but PID file could not be found&quot;</span><br><span class="line">        exit 4</span><br><span class="line">      fi</span><br><span class="line">    fi</span><br><span class="line">    ;;</span><br><span class="line">    *)</span><br><span class="line">      # usage</span><br><span class="line">      basename=`basename &quot;$0&quot;`</span><br><span class="line">      echo &quot;Usage: $basename  &#123;start|stop|restart|reload|force-reload|status&#125;  [ MySQL server options ]&quot;</span><br><span class="line">      exit 1</span><br><span class="line">    ;;</span><br><span class="line">esac</span><br><span class="line"></span><br><span class="line">exit 0</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 脚本 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nginx安装文档</title>
      <link href="/posts/13dbaea.html"/>
      <url>/posts/13dbaea.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="环境预安装"><a href="#环境预安装" class="headerlink" title="环境预安装"></a>环境预安装</h1><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum <span class="keyword">install</span> pcre pcre-devel -y</span><br><span class="line">yum <span class="keyword">install</span> openssl openssl-devel -y</span><br></pre></td></tr></table></figure><h1 id="创建nginx用户"><a href="#创建nginx用户" class="headerlink" title="创建nginx用户"></a>创建nginx用户</h1><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">groupadd -<span class="attribute">r</span> nginx &amp;&amp; useradd -<span class="attribute">r</span> -<span class="selector-tag">g</span> nginx -s /bin/false -M nginx</span><br></pre></td></tr></table></figure><h1 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h1><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">./configure \</span><br><span class="line"><span class="attribute">--user</span>=nginx \</span><br><span class="line"><span class="attribute">--group</span>=nginx \</span><br><span class="line"><span class="attribute">--prefix</span>=/usr/local/webserver/nginx \</span><br><span class="line"><span class="attribute">--conf-path</span>=/usr/local/webserver/nginx/conf/nginx.conf \</span><br><span class="line"><span class="attribute">--pid-path</span>=/var/run/nginx/nginx.pid \</span><br><span class="line"><span class="attribute">--lock-path</span>=/var/lock/nginx.lock \</span><br><span class="line"><span class="attribute">--error-log-path</span>=/var/log/nginx/error.log \</span><br><span class="line"><span class="attribute">--http-log-path</span>=/var/log/nginx/access.log \</span><br><span class="line">--with-http_gzip_static_module \</span><br><span class="line"><span class="attribute">--http-client-body-temp-path</span>=/var/temp/nginx/client \</span><br><span class="line"><span class="attribute">--http-proxy-temp-path</span>=/var/temp/nginx/proxy \</span><br><span class="line"><span class="attribute">--http-fastcgi-temp-path</span>=/var/temp/nginx/fastcgi \</span><br><span class="line"><span class="attribute">--http-uwsgi-temp-path</span>=/var/temp/nginx/uwsgi \</span><br><span class="line"><span class="attribute">--http-scgi-temp-path</span>=/var/temp/nginx/scgi</span><br></pre></td></tr></table></figure><h1 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h1><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">/usr/</span>local<span class="regexp">/webserver/</span>nginx<span class="regexp">/sbin/</span>nginx</span><br></pre></td></tr></table></figure><h1 id="重启"><a href="#重启" class="headerlink" title="重启"></a>重启</h1><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">/sbin/</span>nginx -s reload</span><br><span class="line">kill -HUP `cat <span class="regexp">/usr/</span>local<span class="regexp">/webserver/</span>nginx<span class="regexp">/logs/</span>nginx.pid`</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="关闭"><a href="#关闭" class="headerlink" title="关闭"></a>关闭</h1><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/sbin/nginx -s stop</span><br></pre></td></tr></table></figure><h1 id="nginx支持php"><a href="#nginx支持php" class="headerlink" title="nginx支持php"></a>nginx支持php</h1><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">location</span> <span class="regexp">~ \.php$</span> &#123;</span><br><span class="line">            <span class="attribute">root</span>           /data/html;</span><br><span class="line">            <span class="attribute">fastcgi_pass</span>   <span class="number">127.0.0.1:9000</span>;</span><br><span class="line">            <span class="attribute">fastcgi_index</span>  index.php;</span><br><span class="line">            <span class="attribute">fastcgi_param</span>  SCRIPT_FILENAME  <span class="variable">$document_root</span><span class="variable">$fastcgi_script_name</span>;</span><br><span class="line">            <span class="attribute">include</span>        fastcgi_params;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安装文档 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sphinx笔记</title>
      <link href="/posts/2e95148b.html"/>
      <url>/posts/2e95148b.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="sphinx笔记"><a href="#sphinx笔记" class="headerlink" title="sphinx笔记"></a>sphinx笔记</h1><h2 id="一、索引重建"><a href="#一、索引重建" class="headerlink" title="一、索引重建"></a>一、索引重建</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">目录：ls <span class="regexp">/dev/</span>shm<span class="regexp">/sphinx/</span></span><br><span class="line"><span class="comment"># sphinx存在文件名带有new的执行</span></span><br><span class="line">vi <span class="regexp">/etc/</span>rc.local 和 vi <span class="regexp">/var/</span>spool<span class="regexp">/cron/</span>root下的索引重建</span><br><span class="line"><span class="regexp">/usr/</span>local<span class="regexp">/webserver/</span>coreseek<span class="regexp">/bin/i</span>ndexer --config <span class="regexp">/sphinx_conf/</span>xxx.conf xxx_delta</span><br><span class="line"><span class="regexp">/usr/</span>local<span class="regexp">/webserver/</span>coreseek<span class="regexp">/bin/i</span>ndexer --config <span class="regexp">/sphinx_conf/</span>xxx.conf xxx_delta --rotate</span><br><span class="line"></span><br><span class="line"><span class="comment"># sphinx重建所有 索引</span></span><br><span class="line"><span class="regexp">/usr/</span>local<span class="regexp">/webserver/</span>coreseek<span class="regexp">/bin/i</span>ndexer --config <span class="regexp">/sphinx_conf/</span>xxx.conf --all --rotate</span><br><span class="line"><span class="comment"># sphinx重建增量索引</span></span><br><span class="line"><span class="regexp">/usr/</span>local<span class="regexp">/webserver/</span>coreseek<span class="regexp">/bin/i</span>ndexer --config <span class="regexp">/sphinx_conf/</span>xxx.conf xxx_delta --rotate</span><br></pre></td></tr></table></figure><p>二、字符串过滤<br>1.属性查询<br>sphinx 不支持字符串作为属性过滤，要使用字符串进行过滤可以使用下面的两者方法进行解决：</p><figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">SELECT</span> id, user_<span class="keyword">type</span></span><br><span class="line"><span class="type">FROM</span> users</span><br><span class="line"><span class="title">sql_field_string</span> = user_<span class="keyword">type</span></span><br></pre></td></tr></table></figure><p>在PHP语言中，这么使用：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$matches</span> = <span class="variable language_">$this</span>-&gt;sphinxClient-&gt;<span class="title function_ invoke__">Query</span>(<span class="string">&#x27;@user_type &quot;^admin$&quot;&#x27;</span>);</span><br></pre></td></tr></table></figure><p>2.全文搜索列<br>将字符串通过CRC32转为32味int类型</p><figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">SELECT</span> id, <span class="type">CRC32</span>(user_<span class="keyword">type</span>) <span class="type">AS</span> user_type</span><br><span class="line"><span class="type">FROM</span> users</span><br><span class="line"><span class="title">sql_attr_int</span>    = user_<span class="keyword">type</span></span><br></pre></td></tr></table></figure><p>在PHP语言中，这么使用：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">$this</span>-&gt;sphinxClient-&gt;<span class="title function_ invoke__">SetFilter</span>(<span class="string">&#x27;user_type&#x27;</span>, <span class="keyword">array</span>(<span class="title function_ invoke__">crc32</span>(<span class="string">&#x27;admin&#x27;</span>));</span><br></pre></td></tr></table></figure><h2 id="二、注意事项"><a href="#二、注意事项" class="headerlink" title="二、注意事项"></a>二、注意事项</h2><h3 id="1-WARNING-attribute-‘id’-not-found-IGNORING"><a href="#1-WARNING-attribute-‘id’-not-found-IGNORING" class="headerlink" title="1. WARNING: attribute ‘id’ not found-IGNORING"></a>1. WARNING: attribute ‘id’ not found-IGNORING</h3><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 此问题可能出现sphinx error，例如bad size情况</span></span><br><span class="line">不能在sql_attr中使用主键字段</span><br><span class="line">处理方案：</span><br><span class="line"><span class="number">1.</span> 移除sql_attr_uint = <span class="built_in">id</span></span><br><span class="line"><span class="number">2.</span> sql中<span class="built_in">id</span> <span class="keyword">as</span> aid, sql_attr_uint = aid</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> sphinx </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>nginx日志切割</title>
      <link href="/posts/3610db45.html"/>
      <url>/posts/3610db45.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/usr/bin/env bash</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment"># This script run at 00:00</span></span><br><span class="line"><span class="comment"># The Nginx logs path</span></span><br><span class="line"></span><br><span class="line">logs_path=<span class="string">&quot;/data/logs/&quot;</span></span><br><span class="line"><span class="built_in">mkdir</span> -p <span class="variable">$&#123;logs_path&#125;</span>$(<span class="built_in">date</span> -d <span class="string">&quot;yesterday&quot;</span> +<span class="string">&quot;%Y&quot;</span>)/$(<span class="built_in">date</span> -d <span class="string">&quot;yesterday&quot;</span> +<span class="string">&quot;%m&quot;</span>)/</span><br><span class="line"><span class="built_in">mv</span> <span class="variable">$&#123;logs_path&#125;</span>access.log <span class="variable">$&#123;logs_path&#125;</span>$(<span class="built_in">date</span> -d <span class="string">&quot;yesterday&quot;</span> +<span class="string">&quot;%Y&quot;</span>)/$(<span class="built_in">date</span> -d <span class="string">&quot;yesterday&quot;</span> +<span class="string">&quot;%m&quot;</span>)/access_$(<span class="built_in">date</span> -d <span class="string">&quot;yesterday&quot;</span> +<span class="string">&quot;%Y%m%d&quot;</span>).<span class="built_in">log</span></span><br><span class="line"><span class="built_in">kill</span> -HUP `<span class="built_in">cat</span> /usr/local/webserver/nginx/logs/nginx.pid`</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 脚本 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>coreseek安装文档</title>
      <link href="/posts/2799a02a.html"/>
      <url>/posts/2799a02a.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h1><p>在安装coreseek之前确保在系统安装了LNMP&#x2F;LAMP环境。</p><h1 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h1><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install gcc make gcc-c++ libtool <span class="built_in">auto</span>conf <span class="built_in">auto</span>make imake mysql-devel libxml2-devel expat-devel、</span><br></pre></td></tr></table></figure><p>将下载好的安装包上传到Linux，执行解压命令，解压完成后进入目录</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">tar</span> xzvf coreseek-<span class="number">3</span>.<span class="number">2</span>.<span class="number">14</span>.tar.gz</span><br><span class="line"><span class="attribute">cd</span> coreseek-<span class="number">3</span>.<span class="number">2</span>.<span class="number">14</span></span><br></pre></td></tr></table></figure><p>将会看到3个目录分别是csft-3.2.14、mmseg-3.2.14、testpack，其中csft实际就是sphinx安装包，mmseg为中文分词安装包，testpack是安装完coreseek后测试用的。首先安装中文分词</p><p>如果出现如下错误<br>config.status: error: cannot find input file: src&#x2F;Makefile.in<br>请执行</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">aclocal</span><br><span class="line">libtoolize --force</span><br><span class="line"><span class="built_in">auto</span>make --add-missing</span><br><span class="line"><span class="built_in">auto</span>conf</span><br><span class="line"><span class="built_in">auto</span>header</span><br><span class="line">make clean</span><br></pre></td></tr></table></figure><p>执行编译并安装mmseg</p><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">make</span> &amp;&amp; <span class="built_in">make</span> install</span><br></pre></td></tr></table></figure><p>到这里mmseg安装完毕，可以测试下中文分词</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo <span class="string">&#x27;测试&#x27;</span>&gt;<span class="number">1</span>.txt</span><br><span class="line"><span class="regexp">/usr/</span>local<span class="regexp">/mmseg/</span>bin<span class="regexp">/mmseg -d /u</span>sr<span class="regexp">/local/mm</span>seg/etc <span class="number">1</span>.txt</span><br></pre></td></tr></table></figure><p>安装coreseek</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">cd ../csft-<span class="number">3.2</span>.<span class="number">14</span></span><br><span class="line">sh buildconf.sh <span class="comment">#生成configure可执行文件，如果当前目录已存在configure文件会发出警告：已存在其它版本autoconf，但不能保证能正常工作，如果出现任何问题，建议重新生成</span></span><br><span class="line"><span class="comment"># 可能会提示：automake: warnings are treated as errors 错误</span></span><br><span class="line">将 configure.ac 文件中的</span><br><span class="line">AM_INIT_AUTOMAKE([-Wall -Werror foreign])</span><br><span class="line">修改为</span><br><span class="line">AM_INIT_AUTOMAKE([-Wall foreign])</span><br><span class="line"></span><br><span class="line">./configure --prefix=<span class="regexp">/usr/local</span><span class="regexp">/webserver/coreseek</span> \</span><br><span class="line">--without-unixodbc \</span><br><span class="line">--<span class="keyword">with</span>-mmseg=<span class="regexp">/usr/local</span><span class="regexp">/webserver/mmseg</span>3 \</span><br><span class="line">--<span class="keyword">with</span>-mmseg-includes=<span class="regexp">/usr/local</span><span class="regexp">/webserver/mmseg</span>3/<span class="keyword">include</span>/mmseg/ \</span><br><span class="line">--<span class="keyword">with</span>-mmseg-libs=<span class="regexp">/usr/local</span><span class="regexp">/webserver/mmseg</span>3/<span class="class"><span class="keyword">lib</span>/ \</span></span><br><span class="line">--<span class="keyword">with</span>-mysql (需要将mysql命令加入环境变量中)</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><p>编译可能由于gcc版本过高导致失败</p><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">错误提示</span></span><br><span class="line">&#x27;ExprEval&#x27; was not declared in this scope, and no declarations were found by argument-dependent lookup at the point of instantiation [-fpermissive]</span><br><span class="line">   T val = ExprEval ( this-&gt;m_pArg, tMatch ); // &#x27;this&#x27; fixes gcc braindamage</span><br><span class="line"></span><br><span class="line">修改csft-3.2.14/src/sphinxexpr.cpp</span><br><span class="line">将提示位置的ExprEval修改为this-&gt;ExprEval </span><br></pre></td></tr></table></figure><p>到此coreseek就全部安装完成了，测试一下coreseek</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入安装包提供的测试目录</span></span><br><span class="line">cd ../testpack</span><br><span class="line"><span class="comment"># 创建索引</span></span><br><span class="line"><span class="regexp">/usr/</span>local<span class="regexp">/webserver/</span>coreseek<span class="regexp">/bin/i</span>ndexer -c etc/csft.conf --all</span><br><span class="line"><span class="regexp">/usr/</span>local<span class="regexp">/webserver/</span>coreseek<span class="regexp">/bin/</span>search -c etc/csft.conf <span class="string">&#x27;测试&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行顺序</span></span><br><span class="line"><span class="regexp">/usr/</span>local<span class="regexp">/webserver/</span>coreseek<span class="regexp">/bin/i</span>ndexer -c sphinx.conf sphinx_delta</span><br><span class="line"><span class="regexp">/usr/</span>local<span class="regexp">/webserver/</span>coreseek<span class="regexp">/bin/</span>searchd -c sphinx.conf --pidfile</span><br></pre></td></tr></table></figure><p>创建索引时可能会出现以下错误</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 1./usr/<span class="keyword">local</span>/coreseek/bin/indexer: <span class="keyword">error</span> <span class="keyword">while</span> loading shared libraries: libmysqlclient.<span class="keyword">so</span>.18: cannot <span class="keyword">open</span> shared object <span class="keyword">file</span>: <span class="keyword">No</span> such <span class="keyword">file</span> or directory</span><br><span class="line"># 解决办法</span><br><span class="line">echo &#x27;/usr/<span class="keyword">local</span>/mysql/lib&#x27;&gt;&gt;/etc/ld.<span class="keyword">so</span>.<span class="keyword">conf</span></span><br><span class="line">ldconfig  </span><br><span class="line"># 2.Unigram dictionary load <span class="keyword">Error</span> Segmentation fault</span><br><span class="line">#解决办法</span><br><span class="line">vim etc/csft.<span class="keyword">conf</span> 将mmseg3 charset_dictpath路径修改为自己的路径</span><br></pre></td></tr></table></figure><p>安装sphinx扩展for php</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># sphinx扩展依赖于libsphinxclient，先安装libsphinxclient</span></span><br><span class="line"><span class="built_in">cd</span> api/libsphinxclient</span><br><span class="line">./configure</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"><span class="comment"># 下载并安装sphinx扩展</span></span><br><span class="line">wget http://pecl.php.net/get/sphinx-1.3.2.tgz</span><br><span class="line">tar zxvf sphinx-1.3.2.tgz</span><br><span class="line"><span class="built_in">cd</span> sphinx-1.3.2</span><br><span class="line">/usr/local/php/bin/phpize</span><br><span class="line">./configure --with-php-config=/usr/local/php/bin/php-config</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><p>安装libsphinxclient时如果报如下错误<br>sphinxclient.c:1216: error: static declaration of ‘sock_close’ follows non-static declaration sphinxclient.c:280: note: previous declaration of ‘sock_close’ was here<br>请执行</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">sed</span> -ie <span class="string">&#x27;280s/^/static /&#x27;</span> sphinxclient.c</span><br></pre></td></tr></table></figure><p>修改php.ini<br>添加sphinx扩展<br>extension&#x3D;sphinx.so<br>重启php</p>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> sphinx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安装文档 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>tcp</title>
      <link href="/posts/bb0d3e20.html"/>
      <url>/posts/bb0d3e20.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="URI和URL"><a href="#URI和URL" class="headerlink" title="URI和URL"></a>URI和URL</h1><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">URI:统一资源标识符,是一个语法结构，一个规则，一个结果集 FTP://</span><br><span class="line"><span class="built_in">URL</span>:统一资源定位符,是URI的子集，子类。</span><br><span class="line"></span><br><span class="line">换句话说，一个 URI 实例和一个支持语法意义上的、依赖于方案的比较、规范化、解析和相对化计算的结构化字符串差不多。</span><br><span class="line">作为对照，<span class="built_in">URL</span> 类的实例代表了 <span class="built_in">URL</span> 的语法组成部分以及访问它描述的资源所需的信息。<span class="built_in">URL</span> 必须是绝对的，即它必须始终指定一个方案。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> tcp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tcp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux文件转移脚本</title>
      <link href="/posts/c0b6fb27.html"/>
      <url>/posts/c0b6fb27.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment">#文件转移</span></span><br><span class="line">filename=<span class="string">&quot;/data/logs/upyunImgList.log&quot;</span></span><br><span class="line">picDir=<span class="string">&quot;/data/http/upYunPicBack&quot;</span></span><br><span class="line">newpicDir=<span class="string">&quot;/data/upyunbak&quot;</span></span><br><span class="line"><span class="keyword">while</span> <span class="built_in">read</span> -r line</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"> picurl=$picDir<span class="variable">$line</span></span><br><span class="line"> <span class="built_in">echo</span> <span class="variable">$picurl</span></span><br><span class="line"> <span class="comment"># 如果要转移的文件不存在</span></span><br><span class="line"> <span class="keyword">if</span> [ -f <span class="variable">$picurl</span> ]; <span class="keyword">then</span></span><br><span class="line">   <span class="built_in">dir</span>=$(<span class="built_in">echo</span> <span class="variable">$line</span> |  awk -F <span class="string">&#x27;/&#x27;</span> <span class="string">&#x27;&#123;print &quot;/&quot;$2&quot;/&quot;$3&quot;/&quot;$4&#125;&#x27;</span>)</span><br><span class="line">   <span class="built_in">dir</span>=$newpicDir<span class="variable">$dir</span>/</span><br><span class="line">   <span class="built_in">echo</span> <span class="variable">$dir</span></span><br><span class="line">   <span class="comment"># 转移目标目录不存在则新建</span></span><br><span class="line">   <span class="keyword">if</span> [ ! -d <span class="variable">$dir</span> ]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">mkdir</span> -p <span class="string">&quot;<span class="variable">$dir</span>&quot;</span></span><br><span class="line">   <span class="keyword">fi</span></span><br><span class="line">   <span class="comment"># 判断是否已存在该文件</span></span><br><span class="line">   <span class="keyword">if</span> [ ! -f $<span class="built_in">dir</span>$<span class="variable">$line</span> ]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">cp</span> <span class="variable">$picurl</span> <span class="variable">$dir</span></span><br><span class="line">   <span class="keyword">fi</span></span><br><span class="line"> <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span> &lt; <span class="variable">$filename</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> linux </category>
          
          <category> shell </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 脚本 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vim</title>
      <link href="/posts/280100fb.html"/>
      <url>/posts/280100fb.html</url>
      
        <content type="html"><![CDATA[<figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;</span> Source your .vimrc</span><br><span class="line"><span class="comment">&quot;source ~/.vimrc</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;</span> -- Suggested <span class="keyword">options</span> --</span><br><span class="line"><span class="comment">&quot; Show a few lines of context around the cursor. Note that this makes the</span></span><br><span class="line"><span class="comment">&quot; text scroll if you mouse-click near the start or end of the window.</span></span><br><span class="line"><span class="keyword">set</span> scrolloff=<span class="number">5</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; Do incremental searching.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; 配置</span></span><br><span class="line"><span class="keyword">syntax</span> <span class="keyword">on</span> <span class="comment">&quot; 自动语法高亮</span></span><br><span class="line"><span class="keyword">set</span> <span class="keyword">number</span> <span class="comment">&quot; 显示行号</span></span><br><span class="line"><span class="keyword">set</span> cursorline <span class="comment">&quot; 突显当前行/</span></span><br><span class="line"><span class="keyword">set</span> ruler <span class="comment">&quot; 打开状态栏标尺</span></span><br><span class="line"><span class="keyword">set</span> <span class="built_in">shiftwidth</span>=<span class="number">4</span> <span class="comment">&quot; 设定 &lt;&lt; 和 &gt;&gt; 命令移动时的宽度为 4</span></span><br><span class="line"><span class="keyword">set</span> autochdir <span class="comment">&quot; 自动切换当前目录为当前文件所在的目录</span></span><br><span class="line"><span class="string">&quot; set ignorecase smartcase &quot;</span> 搜索时忽略大小写，但在有一个或以上大写字母时仍保持对大小写敏感</span><br><span class="line"><span class="keyword">set</span> ignorecase <span class="comment">&quot; 搜索时忽略大小写，但在有一个或以上大写字母时仍保持对大小写敏感</span></span><br><span class="line"><span class="keyword">set</span> incsearch <span class="comment">&quot; 输入搜索内容时就显示搜索结果</span></span><br><span class="line"><span class="keyword">set</span> insertmode <span class="comment">&quot; 默认insert模式</span></span><br><span class="line"><span class="keyword">set</span> hlsearch <span class="comment">&quot; 搜索时高亮显示被找到的文本</span></span><br><span class="line"><span class="keyword">set</span> smartindent <span class="comment">&quot; 开启新行时使用智能自动缩进</span></span><br><span class="line"><span class="keyword">set</span> showcmd <span class="comment">&quot; 标尺右侧显示未完成的命令</span></span><br><span class="line"><span class="keyword">set</span> autowrite <span class="comment">&quot; 自动保存</span></span><br><span class="line"><span class="keyword">set</span> showmatch <span class="comment">&quot; 你键入一个右括号 ) 时，如果能知道它匹配哪个左括号 ( 会很方便。</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span> noerrorbells <span class="comment">&quot; 关闭错误信息响铃</span></span><br><span class="line"><span class="keyword">set</span> novisualbell <span class="comment">&quot; 关闭使用可视响铃代替呼叫</span></span><br><span class="line"><span class="keyword">set</span> t_vb= <span class="comment">&quot; 置空错误铃声的终端代码</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; 和系统剪切板相关联</span></span><br><span class="line"><span class="keyword">set</span> clipboard=unnamed</span><br><span class="line"><span class="keyword">set</span> clipboard=unnamedplus</span><br><span class="line"></span><br><span class="line">sethandler <span class="symbol">&lt;C-A&gt;</span> <span class="variable">a:vim</span></span><br><span class="line">sethandler <span class="symbol">&lt;C-B&gt;</span> <span class="variable">a:vim</span></span><br><span class="line">sethandler <span class="symbol">&lt;C-C&gt;</span> <span class="variable">a:vim</span></span><br><span class="line">sethandler <span class="symbol">&lt;C-D&gt;</span> <span class="variable">a:vim</span></span><br><span class="line">sethandler <span class="symbol">&lt;C-E&gt;</span> <span class="variable">a:ide</span></span><br><span class="line">sethandler <span class="symbol">&lt;C-F&gt;</span> <span class="variable">a:vim</span></span><br><span class="line">sethandler <span class="symbol">&lt;C-G&gt;</span> <span class="variable">a:vim</span></span><br><span class="line">sethandler <span class="symbol">&lt;C-H&gt;</span> <span class="variable">a:vim</span></span><br><span class="line">sethandler <span class="symbol">&lt;C-I&gt;</span> <span class="variable">a:vim</span></span><br><span class="line">sethandler <span class="symbol">&lt;C-J&gt;</span> <span class="variable">a:vim</span></span><br><span class="line">sethandler <span class="symbol">&lt;C-K&gt;</span> <span class="variable">a:ide</span></span><br><span class="line">sethandler <span class="symbol">&lt;C-O&gt;</span> <span class="variable">a:vim</span></span><br><span class="line">sethandler <span class="symbol">&lt;C-P&gt;</span> <span class="variable">a:vim</span></span><br><span class="line">sethandler <span class="symbol">&lt;C-Q&gt;</span> <span class="variable">a:ide</span></span><br><span class="line">sethandler <span class="symbol">&lt;C-R&gt;</span> <span class="variable">a:vim</span></span><br><span class="line">sethandler <span class="symbol">&lt;C-S&gt;</span> <span class="variable">a:vim</span></span><br><span class="line">sethandler <span class="symbol">&lt;C-T&gt;</span> <span class="variable">a:ide</span></span><br><span class="line">sethandler <span class="symbol">&lt;C-U&gt;</span> <span class="variable">a:vim</span></span><br><span class="line">sethandler <span class="symbol">&lt;C-V&gt;</span> <span class="variable">a:vim</span></span><br><span class="line">sethandler <span class="symbol">&lt;C-W&gt;</span> <span class="variable">a:vim</span></span><br><span class="line">sethandler <span class="symbol">&lt;C-Y&gt;</span> <span class="variable">a:vim</span></span><br><span class="line">sethandler &lt;C-[&gt; <span class="variable">a:vim</span></span><br><span class="line">sethandler &lt;C-]&gt; <span class="variable">a:vim</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; Don&#x27;t use Ex mode, use Q for formatting.</span></span><br><span class="line"><span class="keyword">map</span> Q gq</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;</span> -- Map IDE actions <span class="keyword">to</span> IdeaVim -- https://jb.gg/abva4t</span><br><span class="line"><span class="string">&quot;&quot;</span> Map \r <span class="keyword">to</span> the Reformat Code action</span><br><span class="line"><span class="comment">&quot;map \r &lt;Action&gt;(ReformatCode)</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;</span> Map <span class="symbol">&lt;leader&gt;</span>d <span class="keyword">to</span> start <span class="keyword">debug</span></span><br><span class="line"><span class="comment">&quot;map &lt;leader&gt;d &lt;Action&gt;(Debug)</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;</span> Map \<span class="keyword">b</span> <span class="keyword">to</span> toggle the breakpoint <span class="keyword">on</span> the current <span class="built_in">line</span></span><br><span class="line"><span class="comment">&quot;map \b &lt;Action&gt;(ToggleLineBreakpoint)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; Find more examples here: https://jb.gg/share-ideavimrc</span></span><br><span class="line"><span class="string">&quot;&quot;</span> 寄存器</span><br><span class="line"><span class="string">&quot;&quot;</span></span><br><span class="line"><span class="string">&quot;&quot;</span>     :<span class="keyword">reg</span>[isters] - 显示寄存器内容</span><br><span class="line"><span class="string">&quot;&quot;</span>     <span class="comment">&quot;xy - 复制内容到寄存器 x</span></span><br><span class="line"><span class="string">&quot;&quot;</span>     <span class="comment">&quot;xp - 粘贴寄存器 x 中的内容</span></span><br><span class="line"><span class="string">&quot;&quot;</span>     <span class="comment">&quot;+y - 复制内容到系统剪贴板寄存器</span></span><br><span class="line"><span class="string">&quot;&quot;</span>     <span class="comment">&quot;+p - 粘贴系统剪贴板寄存器的内容</span></span><br><span class="line"><span class="string">&quot;&quot;</span></span><br><span class="line"><span class="string">&quot;&quot;</span> Tip 寄存器被存储在 ~/.viminfo 中, 在下次重启<span class="keyword">vim</span>时仍会加载</span><br><span class="line"><span class="string">&quot;&quot;</span> Tip 特殊寄存器：</span><br><span class="line"><span class="string">&quot;&quot;</span></span><br><span class="line"><span class="string">&quot;&quot;</span> <span class="number">0</span> - 上次复制</span><br><span class="line"><span class="string">&quot;&quot;</span> <span class="comment">&quot; - 未命名寄存器，上次复制或删除</span></span><br><span class="line"><span class="string">&quot;&quot;</span> % - 当前文件名</span><br><span class="line"><span class="string">&quot;&quot;</span> # - 轮换文件名</span><br><span class="line"><span class="string">&quot;&quot;</span> * - 剪贴板内容 (X11 primary)</span><br><span class="line"><span class="string">&quot;&quot;</span> + - 剪贴板内容 (X11 clipboard)</span><br><span class="line"><span class="string">&quot;&quot;</span> / - 上次搜索的pattern</span><br><span class="line"><span class="string">&quot;&quot;</span> : - 上次执行的命令</span><br><span class="line"><span class="string">&quot;&quot;</span> . - 上次插入的文本</span><br><span class="line"><span class="string">&quot;&quot;</span> - - 上次剪切的短于一行的文本</span><br><span class="line"><span class="string">&quot;&quot;</span> = - 表达式寄存器</span><br><span class="line"><span class="string">&quot;&quot;</span> _ - 黑洞寄存器</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;</span> 删除不进入粘贴板</span><br><span class="line"><span class="string">&quot;&quot;</span> 存入寄存器<span class="keyword">p</span>中</span><br><span class="line"><span class="keyword">nnoremap</span> <span class="keyword">x</span> <span class="comment">&quot;px</span></span><br><span class="line"><span class="keyword">nnoremap</span> <span class="keyword">X</span> <span class="comment">&quot;pX</span></span><br><span class="line"><span class="keyword">nnoremap</span> <span class="keyword">c</span> <span class="comment">&quot;pc</span></span><br><span class="line"><span class="keyword">nnoremap</span> <span class="keyword">cc</span> <span class="comment">&quot;pc</span></span><br><span class="line"><span class="keyword">nnoremap</span> C <span class="comment">&quot;pC</span></span><br><span class="line"><span class="keyword">nnoremap</span> d <span class="comment">&quot;pd</span></span><br><span class="line"><span class="keyword">nnoremap</span> D <span class="comment">&quot;pD</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">vnoremap</span> <span class="keyword">x</span> <span class="comment">&quot;px</span></span><br><span class="line"><span class="keyword">vnoremap</span> <span class="keyword">X</span> <span class="comment">&quot;pX</span></span><br><span class="line"><span class="keyword">vnoremap</span> <span class="keyword">c</span> <span class="comment">&quot;pc</span></span><br><span class="line"><span class="keyword">vnoremap</span> <span class="keyword">cc</span> <span class="comment">&quot;pc</span></span><br><span class="line"><span class="keyword">vnoremap</span> C <span class="comment">&quot;pC</span></span><br><span class="line"><span class="keyword">vnoremap</span> d <span class="comment">&quot;pd</span></span><br><span class="line"><span class="keyword">vnoremap</span> D <span class="comment">&quot;pD</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">nnoremap</span> <span class="symbol">&lt;leader&gt;</span><span class="keyword">x</span> <span class="comment">&quot;px</span></span><br><span class="line"><span class="keyword">nnoremap</span> <span class="symbol">&lt;leader&gt;</span><span class="keyword">X</span> <span class="comment">&quot;pX</span></span><br><span class="line"><span class="keyword">nnoremap</span> <span class="symbol">&lt;leader&gt;</span><span class="keyword">c</span> <span class="comment">&quot;pc</span></span><br><span class="line"><span class="keyword">nnoremap</span> <span class="symbol">&lt;leader&gt;</span>d <span class="comment">&quot;pd</span></span><br><span class="line"><span class="keyword">nnoremap</span> <span class="symbol">&lt;leader&gt;</span>D <span class="comment">&quot;pD</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> linux </category>
          
          <category> vim </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>vim记录</title>
      <link href="/posts/280100fb.html"/>
      <url>/posts/280100fb.html</url>
      
        <content type="html"><![CDATA[<h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><h2 id="set命令"><a href="#set命令" class="headerlink" title="set命令"></a>set命令</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">:<span class="built_in">set</span> number <span class="string">&quot; 显示行号</span></span><br><span class="line"><span class="string">:set cursorline &quot;</span> 突显当前行</span><br><span class="line">:<span class="built_in">set</span> ruler <span class="string">&quot; 打开状态栏标尺</span></span><br><span class="line"><span class="string">:set shiftwidth=4 &quot;</span> 设定 &lt;&lt; 和 &gt;&gt; 命令移动时的宽度为 4</span><br><span class="line">:<span class="built_in">set</span> autochdir <span class="string">&quot; 自动切换当前目录为当前文件所在的目录</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;</span> :<span class="built_in">set</span> ignorecase smartcase <span class="string">&quot; 搜索时忽略大小写，但在有一个或以上大写字母时仍保持对大小写敏感</span></span><br><span class="line"><span class="string">:set ic(ignorecase) &quot;</span> 搜索时忽略大小写</span><br><span class="line">:<span class="built_in">set</span> noic(noignorecase) <span class="string">&quot; 搜索大小写严格</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">:set is(incsearch) &quot;</span> 输入搜索内容时就显示搜索结果</span><br><span class="line">:<span class="built_in">set</span> nois(incsearch)</span><br><span class="line"></span><br><span class="line">:<span class="built_in">set</span> hsl(lsearch) <span class="string">&quot; 搜索时高亮显示被找到的文本</span></span><br><span class="line"><span class="string">:set nohsl(hlsearch)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">:set si(smartindent) &quot;</span> 开启新行时使用智能自动缩进</span><br><span class="line">:<span class="built_in">set</span> nosi(smartindent)</span><br><span class="line"></span><br><span class="line">:<span class="built_in">set</span> paste <span class="string">&quot; 粘贴取消格式</span></span><br><span class="line"><span class="string">:set nopaste &quot;</span> 粘贴使用格式</span><br><span class="line">:<span class="built_in">set</span> pastetoggler <span class="string">&quot; 切换格式使用情况</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">:set showcmd &quot;</span> 标尺右侧显示未完成的命令</span><br><span class="line">:<span class="built_in">set</span> noshowcmd</span><br><span class="line"></span><br><span class="line">:<span class="built_in">set</span> autowrite <span class="string">&quot; 自动保存</span></span><br><span class="line"><span class="string">:set noautowrite</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">:set insertmode &quot;</span> 默认insert模式</span><br><span class="line">:<span class="built_in">set</span> <span class="attribute">fileformat</span>=unix <span class="string">&quot; 设置文件格式</span></span><br><span class="line"><span class="string">:set display=truncate &quot;</span> 如果末行被截短，显示 @@@ 而不是隐藏整行</span><br><span class="line">:<span class="built_in">set</span> <span class="attribute">nrformats-</span>=octal <span class="string">&quot; 不把零开头的数值识别为八进制数。</span></span><br><span class="line"><span class="string">:set backup &quot;</span> 设置备份文件</span><br><span class="line">:<span class="built_in">set</span> <span class="attribute">textwidth</span>=72 <span class="string">&quot; 每行72字符，自动换行</span></span><br><span class="line"><span class="string">你键入一个右括号 ) 时，如果能知道它匹配哪个左括号 ( 会很方便。要让 Vim 做到这</span></span><br><span class="line"><span class="string">点，用下面这个命令: </span></span><br><span class="line"><span class="string">:set showmatch</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;</span> 显 示 TAB 键</span><br><span class="line"><span class="string">&quot; 文件中有 TAB 键的时候，你是看不见的。要把它显示出来:</span></span><br><span class="line"><span class="string">:set list</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;</span> 现在 TAB 键显示为 ^I，而 $显示在每行的结尾，以便你能找到可能会被你忽略的空白字符在哪里。</span><br><span class="line"><span class="string">&quot; 这样做的一个缺点是在有很多 TAB 的时候看起来很丑。如果你使用一个有颜色的终端，</span></span><br><span class="line"><span class="string">&quot;</span> 或者使用 GUI 模式，Vim 可以用高亮显示空格和 TAB。使用 <span class="string">&#x27;listchars&#x27;</span> 选项:</span><br><span class="line">:<span class="built_in">set</span> <span class="attribute">listchars</span>=tab:&gt;-,trail:-</span><br><span class="line"><span class="string">&quot; TAB 会被显示成 &quot;</span>&gt;---<span class="string">&quot; (&quot;</span>-<span class="string">&quot; 的个数不定) 而行尾多余的空白字符显示成 &quot;</span>-<span class="string">&quot;。</span></span><br></pre></td></tr></table></figure><h2 id="特殊命令"><a href="#特殊命令" class="headerlink" title="特殊命令"></a>特殊命令</h2><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 批量注释(批量替换)</span></span><br><span class="line"><span class="number">1</span>,<span class="number">10</span> s/^/<span class="comment">#/g (1-10行前面加#号)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 范围搜索</span></span><br><span class="line"><span class="comment"># 在10-20行内，搜索关键词key</span></span><br><span class="line">/\%&gt;<span class="number">10</span>l\%&lt;<span class="number">20</span>lkey</span><br><span class="line"></span><br><span class="line"><span class="comment"># 可视范围</span></span><br><span class="line"><span class="symbol">:<span class="string">&#x27;&lt;,&#x27;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 行反转</span></span><br><span class="line"><span class="symbol">:g/^/m</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 文件总字数</span></span><br><span class="line">gCTRL-G</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示命令行窗口</span></span><br><span class="line"><span class="symbol">q:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看编辑过的文件</span></span><br><span class="line"><span class="symbol">:oldfiles</span></span><br><span class="line"><span class="comment"># 回到要编辑的文件</span></span><br><span class="line"><span class="symbol">:e</span> <span class="comment">#&lt;2</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看编辑过的文件，输入编号编辑文件</span></span><br><span class="line"><span class="symbol">:browse</span> oldfiles</span><br></pre></td></tr></table></figure><h1 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h1><h2 id="全局"><a href="#全局" class="headerlink" title="全局"></a>全局</h2><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">:<span class="keyword">h</span>[elp] 关键字 - 打开关键字帮助</span><br><span class="line">:<span class="keyword">sav</span>[eas] 文件名 - 另存为</span><br><span class="line">:<span class="keyword">file</span> 文件名 - 另存为，需要write</span><br><span class="line">:<span class="keyword">clo</span>[<span class="keyword">se</span>] - 关闭当前窗口</span><br><span class="line">:ter[minal] - 打开一个<span class="keyword">shell</span>窗口</span><br><span class="line">K - 打开光标所在单词的<span class="keyword">man</span>页面</span><br></pre></td></tr></table></figure><h2 id="移动光标"><a href="#移动光标" class="headerlink" title="移动光标"></a>移动光标</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">h - 左移光标</span><br><span class="line">j - 下移光标</span><br><span class="line">k - 上移光标</span><br><span class="line">l - 右移光标</span><br><span class="line">gj - 下移光标(折行文本)</span><br><span class="line">gk - 下移光标(折行文本)</span><br><span class="line">H - 移动到当前页面顶部</span><br><span class="line">M - 移动到当前页面中间</span><br><span class="line">L - 移动到当前页面底部</span><br><span class="line">w - 移动到下个单词开头</span><br><span class="line">W - 移动到下个单词开头(单词含标点)</span><br><span class="line">e - 移动到下个单词结尾</span><br><span class="line">E - 移动到下个单词结尾(单词含标点)</span><br><span class="line"><span class="selector-tag">b</span> - 移动到上个单词开头</span><br><span class="line"><span class="selector-tag">B</span> - 移动到上个单词开头(单词含标点)</span><br><span class="line">ge - 移动到上个单词结尾</span><br><span class="line">gE - 移动到上个单词结尾(单词含标点)</span><br><span class="line">% - 跳转到配对的符号(默认支持的配对符号组:: <span class="string">&#x27;()&#x27;</span>, <span class="string">&#x27;&#123;&#125;&#x27;</span>, <span class="string">&#x27;[]&#x27;</span> - 在vim中使用 :h matchpairs 获得更多信息)</span><br><span class="line"><span class="number">0</span> - 移动到行首</span><br><span class="line">^ - 移动到行首的非空白符</span><br><span class="line">$ - 移动到行尾</span><br><span class="line">g_ - 移动到行内最后一个非空白符</span><br><span class="line">gg - 移动到文件第一行</span><br><span class="line">G - 移动到文件最后一行</span><br><span class="line"><span class="number">5</span>gg or <span class="number">5</span>G - 移动到第五行</span><br><span class="line">gd - 跳转到局部定义</span><br><span class="line">gD - 跳转到全局定义</span><br><span class="line">[m - 上一个变量、函数</span><br><span class="line">]m - 下一个变量、函数</span><br><span class="line">fx - 移动到字符 x 下次出现的位置</span><br><span class="line">tx - 移动到字符 x 下次出现的位置的前一个字符</span><br><span class="line">Fx - 移动到字符 x 上次出现的位置</span><br><span class="line">Tx - 移动到字符 x 上次出现的位置的后一个字符</span><br><span class="line">; - 重复之前的f、t、F、T操作</span><br><span class="line">, - 反向重复之前的f、t、F、T操作</span><br><span class="line">&#125; - 移动到下一个段落 (当编辑代码时则为函数／代码块)</span><br><span class="line">&#123; - 移动到上一个段落 (当编辑代码时则为函数／代码块)</span><br><span class="line">zz - 移动屏幕使光标居中</span><br><span class="line">Ctrl + e - 向下移动屏幕一行(保持光标不动)</span><br><span class="line">Ctrl + <span class="attribute">y</span> - 向上移动屏幕一行(保持光标不动)</span><br><span class="line">Ctrl + <span class="selector-tag">b</span> - 向上滚动一屏</span><br><span class="line">Ctrl + f - 向下滚动一屏</span><br><span class="line">Ctrl + d - 向下滚动半屏</span><br><span class="line">Ctrl + u - 向上滚动半屏</span><br></pre></td></tr></table></figure><h2 id="插入模式-插入-追加文本"><a href="#插入模式-插入-追加文本" class="headerlink" title="插入模式 - 插入&#x2F;追加文本"></a>插入模式 - 插入&#x2F;追加文本</h2><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">i - 从光标前开始插入字符</span><br><span class="line">I - 从行首开始插入字符</span><br><span class="line">a - 从光标后开始插入字符</span><br><span class="line">A - 从行尾开始插入字符</span><br><span class="line">o - 在当前行之下另起一行, 开始插入字符</span><br><span class="line">O - 在当前行之上另起一行, 开始插入字符</span><br><span class="line">ea - 从当前单词末尾开始插入</span><br><span class="line">Ctrl + h - 在插入模式下，删除光标前的字符</span><br><span class="line">Ctrl + w - 在插入模式下，删除光标前的单词</span><br><span class="line">Ctrl + j - 在插入模式下，另起一行</span><br><span class="line">Ctrl + t - 在插入模式下，向右缩进，宽度由 shiftwidth 控制</span><br><span class="line">Ctrl + d - 在插入模式下，向左缩进，宽度由 shiftwidth 控制</span><br><span class="line">Ctrl + n - 在插入模式下，在光标之前插入自动补全的下一个匹配项</span><br><span class="line">Ctrl + p - 在插入模式下，在光标之前插入自动补全的上一个匹配项</span><br><span class="line"><span class="built_in">CTRL</span>-X <span class="built_in">CTRL</span>-F - 在插入模式下，补全类型文本：文件名</span><br><span class="line"><span class="built_in">CTRL</span>-X <span class="built_in">CTRL</span>-L - 在插入模式下，补全类型文本：整行</span><br><span class="line"><span class="built_in">CTRL</span>-X <span class="built_in">CTRL</span>-D - 在插入模式下，补全类型文本：宏定义 (包括包含文件里的)</span><br><span class="line"><span class="built_in">CTRL</span>-X <span class="built_in">CTRL</span>-I - 在插入模式下，补全类型文本：当前文件以及所包含的文件</span><br><span class="line"><span class="built_in">CTRL</span>-X <span class="built_in">CTRL</span>-K - 在插入模式下，补全类型文本：字典文件内的单词</span><br><span class="line"><span class="built_in">CTRL</span>-X <span class="built_in">CTRL</span>-T - 在插入模式下，补全类型文本：同义词词典文件内的单词</span><br><span class="line"><span class="built_in">CTRL</span>-X <span class="built_in">CTRL</span>-] - 在插入模式下，补全类型文本：标签</span><br><span class="line"><span class="built_in">CTRL</span>-X <span class="built_in">CTRL</span>-V - 在插入模式下，补全类型文本：Vim 命令行</span><br><span class="line">Ctrl + rx - 插入寄存器 x 的内容</span><br><span class="line">Ctrl + ox - 暂时进入正常模式以发出一个正常模式命令 x。</span><br><span class="line">Ctrl + o - 暂时进入正常模式</span><br><span class="line">Esc - 退出插入模式</span><br><span class="line">Ctrl + [ - 退出插入模式</span><br></pre></td></tr></table></figure><h2 id="编辑文本"><a href="#编辑文本" class="headerlink" title="编辑文本"></a>编辑文本</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">r</span> - 替换当前字符</span><br><span class="line"><span class="built_in">R</span> - 在 ESC 按下之前，替换多个字符(退格键可以撤销修改)</span><br><span class="line">J - 将下一行合并到当前行, 并在两部分文本之间插入一个空格</span><br><span class="line">gJ - 将下一行合并到当前行, 两部分文本之间不含空格</span><br><span class="line">gwip - 重新调整段落</span><br><span class="line">g~ - 大小写转换操作修饰符</span><br><span class="line"><span class="built_in">gu</span> - 小写操作修饰符</span><br><span class="line"><span class="built_in">gU</span> - 大写操作修饰符</span><br><span class="line">cc - 将光标所在的行删除, 然后进入插入模式</span><br><span class="line">c<span class="variable">$</span> or C - 将光标处到行尾删除, 然后进入插入模式</span><br><span class="line">ciw - 将光标所在的单词删除, 然后进入插入模式</span><br><span class="line">cw or ce - 从光标位置开始, 修改单词</span><br><span class="line">s - 删除当前字符, 然后进入插入模式</span><br><span class="line">S - 清空当前行, 然后进入插入模式 (同cc)</span><br><span class="line">xp - 当前字符后移</span><br><span class="line">u - 撤销</span><br><span class="line">U - 撤销上一次的改动行的操作</span><br><span class="line">Ctrl + <span class="built_in">r</span> - 重做（取消撤销）</span><br><span class="line">. - 再次执行上个命令</span><br></pre></td></tr></table></figure><h2 id="选择文本（可视化模式）"><a href="#选择文本（可视化模式）" class="headerlink" title="选择文本（可视化模式）"></a>选择文本（可视化模式）</h2><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml">v - 进入可视化模式, 移动光标高亮选择, 然后可以对选择的文本执行命令(比 y - 复制)</span></span><br><span class="line"><span class="language-xml">V - 进入可视化模式(行粒度选择)</span></span><br><span class="line"><span class="language-xml">o - 切换光标到选择区开头/结尾</span></span><br><span class="line"><span class="language-xml">Ctrl + v - 进入可视化模式(矩阵选择)</span></span><br><span class="line"><span class="language-xml">O - 切换光标到选择区的角</span></span><br><span class="line"><span class="language-xml">aw - 选择当前单词</span></span><br><span class="line"><span class="language-xml">ab - 选择被 () 包裹的区域(含括号)</span></span><br><span class="line"><span class="language-xml">aB - 选择被 </span><span class="template-variable">&#123;&#125;</span><span class="language-xml"> 包裹的区域(含花括号)</span></span><br><span class="line"><span class="language-xml">at - 选择被 <span class="tag">&lt;&gt;</span> 标签包裹的区域(含<span class="tag">&lt;&gt;</span>标签)</span></span><br><span class="line"><span class="language-xml">ib - 选择被 () 包裹的区域(不含括号)</span></span><br><span class="line"><span class="language-xml">iB - 选择被 </span><span class="template-variable">&#123;&#125;</span><span class="language-xml"> 包裹的区域(不含花括号)</span></span><br><span class="line"><span class="language-xml">it - 选择被 <span class="tag">&lt;&gt;</span> 标签包裹的区域(不含<span class="tag">&lt;&gt;</span>标签)</span></span><br><span class="line"><span class="language-xml">gv - 再次选中之前选择的文本</span></span><br><span class="line"><span class="language-xml">Esc - 退出可视化模式</span></span><br><span class="line"><span class="language-xml"> Tip 也可以使用 ( 和 </span><span class="template-variable">&#123; 分别代替 b 和 B </span></span><br></pre></td></tr></table></figure><h2 id="可视化模式命令"><a href="#可视化模式命令" class="headerlink" title="可视化模式命令"></a>可视化模式命令</h2><figure class="highlight node-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">&gt;</span> <span class="language-javascript">- 向右缩进</span></span><br><span class="line">&lt; - 向左缩进</span><br><span class="line">y - 复制</span><br><span class="line">d - 剪切</span><br><span class="line">~ - 大小写切换</span><br><span class="line">u - 将选中文本转换为小写</span><br><span class="line">U - 将选中文本转换为大写</span><br></pre></td></tr></table></figure><h2 id="寄存器"><a href="#寄存器" class="headerlink" title="寄存器"></a>寄存器</h2><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">:<span class="keyword">reg</span>[isters] - 显示寄存器内容</span><br><span class="line"><span class="comment">&quot;xy - 复制内容到寄存器 x</span></span><br><span class="line"><span class="comment">&quot;xp - 粘贴寄存器 x 中的内容</span></span><br><span class="line"><span class="comment">&quot;+y - 复制内容到系统剪贴板寄存器</span></span><br><span class="line"><span class="comment">&quot;+p - 粘贴系统剪贴板寄存器的内容</span></span><br><span class="line"></span><br><span class="line">Tip 寄存器被存储在 ~/.viminfo 中, 在下次重启<span class="keyword">vim</span>时仍会加载</span><br><span class="line">Tip 特殊寄存器：</span><br><span class="line"></span><br><span class="line"> <span class="number">0</span> - 上次复制</span><br><span class="line"> <span class="comment">&quot; - 未命名寄存器，上次复制或删除</span></span><br><span class="line"> % - 当前文件名</span><br><span class="line"> # - 轮换文件名</span><br><span class="line"> * - 剪贴板内容 (X11 primary)</span><br><span class="line"> + - 剪贴板内容 (X11 clipboard)</span><br><span class="line"> / - 上次搜索的pattern</span><br><span class="line"> : - 上次执行的命令</span><br><span class="line"> . - 上次插入的文本</span><br><span class="line"> - - 上次剪切的短于一行的文本</span><br><span class="line"> = - 表达式寄存器</span><br><span class="line"> _ - 黑洞寄存器</span><br></pre></td></tr></table></figure><h2 id="标记"><a href="#标记" class="headerlink" title="标记"></a>标记</h2><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">:marks - 标记列表</span><br><span class="line">ma - 设置当前位置为标记 a</span><br><span class="line">`a - 跳转到标记 a 的位置</span><br><span class="line">y`a - 复制当前位置到标记 a 的内容</span><br><span class="line">`0 - 跳转到上次 Vim 退出时的位置</span><br><span class="line">`&quot; - 跳转到上次编辑该文件时的位置</span><br><span class="line">`. - 跳转到上次修改的位置</span><br><span class="line">`` - 跳转回上次跳转前的位置</span><br><span class="line">:ju[mps] - 列出跳转历史记录</span><br><span class="line">Ctrl + i - 跳转至跳转历史中较晚的位置</span><br><span class="line">Ctrl + o - 跳转回跳转历史中较早的位置</span><br><span class="line">:changes - 列出修改历史记录</span><br><span class="line"><span class="built_in">g,</span> - 跳转至修改历史中较晚修改的位置</span><br><span class="line">g<span class="comment">; - 跳转至修改历史中较早修改的位置</span></span><br><span class="line">Ctrl + ] - 跳转到当前光标位置对应的 tag</span><br><span class="line">Tip 可以使用反引号(`)或单引号(&#x27;)跳转至标记位置。使用单引号会跳转至该标记所在行行首(首个非空白字符)。</span><br></pre></td></tr></table></figure><h2 id="宏"><a href="#宏" class="headerlink" title="宏"></a>宏</h2><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">qa - 录制宏 <span class="keyword">a</span></span><br><span class="line">q - 停止录制宏</span><br><span class="line">@<span class="keyword">a</span> - 执行宏 <span class="keyword">a</span></span><br><span class="line">@@ - 重新执行上次执行的宏</span><br><span class="line">qA/<span class="built_in">word</span>&lt;Enter&gt;q - 对宏 <span class="keyword">a</span> 追加搜索<span class="built_in">word</span>命令</span><br></pre></td></tr></table></figure><h2 id="剪切-复制-粘贴"><a href="#剪切-复制-粘贴" class="headerlink" title="剪切, 复制, 粘贴"></a>剪切, 复制, 粘贴</h2><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">yy - 复制当前行</span><br><span class="line"><span class="number">2</span>yy - 复制 <span class="number">2</span> 行</span><br><span class="line">yw - 复制当前单词</span><br><span class="line">yiw - 复制光标处的单词</span><br><span class="line">yaw - 复制光标处的单词及其前后的空格</span><br><span class="line">yas - 复制光标处的所在行的段落</span><br><span class="line">y$ <span class="keyword">or </span>Y - 复制, 从光标位置到行末</span><br><span class="line">p - 在光标后粘贴</span><br><span class="line">P - 在光标前粘贴</span><br><span class="line"><span class="built_in">gp</span> - 在光标后粘贴并把光标定位于粘贴的文本之后</span><br><span class="line"><span class="built_in">gP</span> - 在光标前粘贴并把光标定位于粘贴的文本之后</span><br><span class="line">:pu - 新建一行并且粘贴</span><br><span class="line">dd - 剪切当前行</span><br><span class="line"><span class="number">2</span>dd - 剪切 <span class="number">2</span> 行</span><br><span class="line">dw - 剪切当前单词</span><br><span class="line"><span class="keyword">diw </span>- 删除光标处的单词</span><br><span class="line">daw - 删除光标处的单词及其前后的空格</span><br><span class="line">das - 删除光标处的所在行的段落</span><br><span class="line">d$ <span class="keyword">or </span>D - 剪切, 从光标位置到行末 (同 D )</span><br><span class="line">x - 剪切当前字符</span><br></pre></td></tr></table></figure><h2 id="文字缩进"><a href="#文字缩进" class="headerlink" title="文字缩进"></a>文字缩进</h2><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; - 将当前行向右缩进，宽度由 shiftwidth 控制</span><br><span class="line">&lt;&lt; - 将当前行向左缩进，宽度由 shiftwidth 控制</span><br><span class="line">&gt;% - 向右缩进 () 或 &#123;&#125; 内的区域 (光标需置于括号上)</span><br><span class="line">&gt;ib - 向右缩进 () 内的区域</span><br><span class="line">&gt;at - 向右缩进 &lt;&gt; 标签内的区域</span><br><span class="line"><span class="number">3</span>== - 自动缩进 <span class="number">3</span> 行</span><br><span class="line">=% - 自动缩进 () 或 &#123;&#125; 内的区域 (光标需置于括号上)</span><br><span class="line">=iB - 自动缩进 &#123;&#125; 内的区域 (光标需置于括号上)</span><br><span class="line">gg=G - 自动缩进整个缓冲区</span><br><span class="line">]p - 粘贴并调整缩进至当前行</span><br></pre></td></tr></table></figure><h2 id="退出"><a href="#退出" class="headerlink" title="退出"></a>退出</h2><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">:w - 保存</span><br><span class="line">:w !sudo tee % - 使用 sudo 保存当前文件</span><br><span class="line"><span class="meta">:wq or :x</span> or ZZ - 保存并退出</span><br><span class="line">:q - 退出(修改未保存时警告)</span><br><span class="line">:q! or ZQ - 不保存强制退出</span><br><span class="line">:wqa - 保存所有标签页并全部退出</span><br></pre></td></tr></table></figure><h2 id="查找-替换"><a href="#查找-替换" class="headerlink" title="查找&#x2F;替换"></a>查找&#x2F;替换</h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">/pattern - 查找 pattern</span><br><span class="line"><span class="string">?p</span>attern - 向上查找 pattern</span><br><span class="line">\vpattern - pattern 中的非字母数字字符被视为正则表达式特殊字符 (不需转义字符)</span><br><span class="line">n - 查找下一个</span><br><span class="line">N - 查找上一个</span><br><span class="line"></span><br><span class="line">\&lt; 指定匹配单词开头</span><br><span class="line">\&gt; 指定匹配单词结尾</span><br><span class="line"><span class="symbol">:%s/old/new/g</span> - 替换全部，可用加号代替正斜杠</span><br><span class="line"><span class="symbol">:%s/old/new/gc</span> - (逐个)替换</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">这有点像 <span class="string">&quot;:substitute&quot;</span> 命令。只是它不替换文本，而是执行 &#123;command&#125; 指定的命令。</span><br><span class="line"><span class="symbol">:</span>[range]global/&#123;pattern&#125;/&#123;command&#125;</span><br><span class="line">这个命令用 <span class="string">&quot;:g&quot;</span> 开头，这是 <span class="string">&quot;:global&quot;</span> 的缩写形式，就像 <span class="string">&quot;:s&quot;</span> 是 <span class="string">&quot;:substitute&quot;</span> 的</span><br><span class="line">缩写形式一样。然后是一个匹配模式，由于模式中包括正斜杠，我们用加号作分隔符，后</span><br><span class="line">面是一个把 <span class="string">&quot;foobar&quot;</span> 替换成 <span class="string">&quot;barfoo&quot;</span> 的替换命令。</span><br><span class="line">全局命令的默认范围是整个文件，所以这个例子中没有指定范围。这一点与</span><br><span class="line"><span class="string">&quot;:substitute&quot;</span> 是不同的。后者只作用于一行。</span><br><span class="line"><span class="symbol">:g+//+s/foobar/barfoo/g</span></span><br><span class="line"></span><br><span class="line"><span class="symbol">:noh</span>[lsearch] - 移除搜索结果的高亮显示</span><br></pre></td></tr></table></figure><h2 id="多文件搜索"><a href="#多文件搜索" class="headerlink" title="多文件搜索"></a>多文件搜索</h2><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">:<span class="keyword">vim</span>[<span class="keyword">grep</span>] /pattern/ &#123;`&#123;<span class="keyword">file</span>&#125;`&#125; - 在多个文件中搜索 pattern</span><br><span class="line"></span><br><span class="line"><span class="keyword">e</span>.g. :<span class="keyword">vim</span>[<span class="keyword">grep</span>] /foo/ **/*</span><br><span class="line"></span><br><span class="line">:<span class="keyword">cn</span>[ext] - 移动至下一个</span><br><span class="line">:<span class="keyword">cp</span>[revious] - 移动至上一个</span><br><span class="line">:<span class="keyword">cope</span>[n] - 打开搜索结果列表</span><br><span class="line">:<span class="keyword">ccl</span>[ose] - 关闭 quickfix 窗口</span><br></pre></td></tr></table></figure><h2 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h2><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">:tabnew or :tabnew</span> &#123;page.words.file&#125; - 在新标签中打开文件</span><br><span class="line">Ctrl + wT - 将窗口变成标签</span><br><span class="line">gt or :tabn[ext] - 切换到下一个标签</span><br><span class="line">gT or :tabp[revious] - 切换到上一个标签</span><br><span class="line">#gt - 切换到第 # 个标签</span><br><span class="line">:tabm[ove] # - 移动标签到第 # 位(下标从 0 开始)</span><br><span class="line">:tabc[lose] - 关闭当前标签</span><br><span class="line">:tabo[nly] - 关闭其他标签</span><br><span class="line"><span class="meta">:tabdo command - 在所有标签中执行命令 (例如 :tabdo</span> q 关闭所有标签)</span><br></pre></td></tr></table></figure><h2 id="多文件编辑"><a href="#多文件编辑" class="headerlink" title="多文件编辑"></a>多文件编辑</h2><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">:<span class="keyword">e</span>[dit] 文件名 - 新建缓冲区打开 filename</span><br><span class="line">:<span class="keyword">bn</span>[ext] - 切换到下个缓冲区</span><br><span class="line">:<span class="keyword">bp</span>[revious] - 切换到上个缓冲区</span><br><span class="line">:<span class="keyword">bd</span>[elete] - 关闭缓冲区</span><br><span class="line">:<span class="keyword">b</span>[uffer]# - 切换到第 # 个缓冲区</span><br><span class="line">:<span class="keyword">b</span>[uffer] <span class="keyword">file</span> - 用文件名切换缓冲区</span><br><span class="line">:<span class="keyword">ls</span> <span class="built_in">or</span> :<span class="keyword">buffers</span> - 列出所有打开的缓冲区</span><br><span class="line">:<span class="keyword">sp</span>[lit] 文件名 - 新建缓冲区打开 filename 并水平分割窗口</span><br><span class="line">:<span class="keyword">vs</span>[plit] 文件名 - 新缓冲区打开 filename 并垂直分割窗口</span><br><span class="line">:<span class="keyword">vert</span>[ical] <span class="keyword">ba</span>[<span class="keyword">ll</span>] - 垂直分割窗口编辑所有缓冲区</span><br><span class="line">:<span class="keyword">tab</span> <span class="keyword">ba</span>[<span class="keyword">ll</span>] - 标签页编辑所有缓冲区</span><br><span class="line">Ctrl + <span class="keyword">ws</span> - 水平分割窗口</span><br><span class="line">Ctrl + <span class="keyword">wv</span> - 垂直分割窗口</span><br><span class="line">Ctrl + ww - 在窗口间切换</span><br><span class="line">Ctrl + <span class="keyword">wq</span> - 关闭窗口</span><br><span class="line">Ctrl + wx - 当前窗口与下一个窗口交换位置</span><br><span class="line">Ctrl + <span class="keyword">w</span>= - 令所有窗口高 &amp; 宽一致</span><br><span class="line">Ctrl + <span class="keyword">wh</span> - 切换到左侧窗口</span><br><span class="line">Ctrl + wl - 切换到右侧窗口</span><br><span class="line">Ctrl + wj - 切换到下侧窗口</span><br><span class="line">Ctrl + wk - 切换到上侧窗口</span><br><span class="line">Ctrl + wH - 使游标所在视窗全高并移至最左 (最左垂直视窗)</span><br><span class="line">Ctrl + wL - 使游标所在视窗全高并移至最右 (最右垂直视窗)</span><br><span class="line">Ctrl + wJ - 使游标所在视窗全宽并移至最下 (最下水平视窗)</span><br><span class="line">Ctrl + wK - 使游标所在视窗全宽并移至最上 (最上水平视窗)</span><br><span class="line"></span><br><span class="line">:<span class="keyword">args</span> - 查看<span class="keyword">vim</span>打开的整个文件列表</span><br><span class="line">:<span class="keyword">prev</span> - 上一个文件</span><br><span class="line">:<span class="keyword">next</span> - 下一个文件</span><br><span class="line">:<span class="keyword">last</span> - 最后一个文件</span><br></pre></td></tr></table></figure><h2 id="Diff"><a href="#Diff" class="headerlink" title="Diff"></a>Diff</h2><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">zf - 定义折叠修饰符</span><br><span class="line">zd - 删除光标位置的折叠</span><br><span class="line">za - 展开 &amp; 关闭光标位置的折叠</span><br><span class="line">zo - 展开光标位置的折叠</span><br><span class="line">zc - 关闭光标位置的折叠</span><br><span class="line">zr - 展开同级的所有折叠</span><br><span class="line">zm - 关闭同级的所有折叠</span><br><span class="line">zi - 开启 &amp; 关闭折叠功能</span><br><span class="line">]c - 光标移至下一处差异</span><br><span class="line">[c - 光标移至上一处差异</span><br><span class="line">do <span class="keyword">or </span>:<span class="keyword">diffg[et] </span>- 将另一缓冲区中的差异合并至当前缓冲区</span><br><span class="line">dp <span class="keyword">or </span>:<span class="keyword">diffpu[t] </span>- 将当前缓冲区中的差异推送至另一缓冲区</span><br><span class="line">:<span class="keyword">diffthis </span>- 令当前窗口成为 <span class="keyword">diff </span>模式的窗口之一</span><br><span class="line">:<span class="keyword">dif[fupdate] </span>- 强制刷新 <span class="keyword">diff </span>的高亮与折叠</span><br><span class="line">:<span class="keyword">diffo[ff] </span>- 令当前窗口退出 <span class="keyword">diff </span>模式</span><br><span class="line">:<span class="keyword">diffsplit </span>文件名 - 水平方式打开<span class="keyword">diff窗口</span></span><br><span class="line"><span class="keyword"></span></span><br><span class="line">Tip 折叠命令(e.g. za)只作用于当前级别。使用大写字母(e.g. zA)令命令作用于全部级别。</span><br><span class="line">Tip 可以直接在终端运行 vimdiff 查看文件间的不同。也可以将该程序设为 git <span class="keyword">difftool </span>的选项之一。</span><br></pre></td></tr></table></figure><h2 id="读写文件"><a href="#读写文件" class="headerlink" title="读写文件"></a>读写文件</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">:<span class="attribute">r</span>[ead] 文件名 - 将文件内容写入到当前行</span><br><span class="line">:<span class="number">0</span>r<span class="selector-attr">[ead]</span> 文件名 - 将文件内容写入到<span class="number">0</span>行</span><br><span class="line">:<span class="attribute">r</span>! sed -n <span class="string">&#x27;1,10p&#x27;</span> 文件名 - 将文件名指定范围内容写入到当前行，通过结合!command 实现</span><br><span class="line"></span><br><span class="line">:.,<span class="variable">$w</span><span class="selector-attr">[rite]</span> 文件名 - 将指定范围内容写入到文件，文件已存在需要使用!write，进行覆盖全文件</span><br><span class="line">:<span class="selector-class">.w</span> &gt;&gt; 文件名 - 将当前位置内容写入文件，.代表当前行，&gt;&gt;代表追加</span><br></pre></td></tr></table></figure><h2 id="使用外部程序"><a href="#使用外部程序" class="headerlink" title="使用外部程序"></a>使用外部程序</h2><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml">!</span><span class="template-variable">&#123;motion&#125;</span><span class="template-variable">&#123;program&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">用一个外部程序对一个文本块进行过滤，执行一个由 </span><span class="template-variable">&#123;program&#125;</span><span class="language-xml"> 指定的外部命令，然后用该程序的输出</span></span><br><span class="line"><span class="language-xml">替代选中的文本块。</span></span><br><span class="line"><span class="language-xml">!5Gsort<span class="tag">&lt;<span class="name">Enter</span>&gt;</span> - 当前行到5行，进行排序</span></span><br><span class="line"><span class="language-xml">!!date<span class="tag">&lt;<span class="name">Enter</span>&gt;</span> - 将当前行替换为date的结果</span></span><br></pre></td></tr></table></figure><h2 id="文件浏览器"><a href="#文件浏览器" class="headerlink" title="文件浏览器"></a><a href="https://yianwillis.github.io/vimcdoc/doc/usr_22.html#usr_22.txt">文件浏览器</a></h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">:<span class="built_in">edit</span> .</span><br><span class="line">:hide <span class="built_in">edit</span> 文件名 - 隐藏当前文件，打开文件名文件</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> linux </category>
          
          <category> vim </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>程序后台运行</title>
      <link href="/posts/f33b9558.html"/>
      <url>/posts/f33b9558.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><p>一、程序后台执行</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 后台运行(关闭ssh会断开)</span><br><span class="line">./<span class="keyword">test</span>.<span class="keyword">sh</span> &amp;</span><br><span class="line"></span><br><span class="line"># 后台运行(关闭ssh后依旧运行) 输出结果写入output.<span class="keyword">file</span></span><br><span class="line">nohup ./<span class="keyword">test</span>.<span class="keyword">sh</span> &gt; output.<span class="keyword">file</span> 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure><p>二、常用任务管理命令</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># jobs      <span class="comment">//查看任务，返回任务编号n和进程号</span></span></span><br><span class="line"><span class="meta"># bg  %n   <span class="comment">//将编号为n的任务转后台运行</span></span></span><br><span class="line"><span class="meta"># fg  %n   <span class="comment">//将编号为n的任务转前台运行</span></span></span><br><span class="line"><span class="meta"># ctrl+z    <span class="comment">//挂起当前任务</span></span></span><br><span class="line"><span class="meta"># ctrl+c    <span class="comment">//结束当前任务</span></span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>系统排查</title>
      <link href="/posts/1f64d6a1.html"/>
      <url>/posts/1f64d6a1.html</url>
      
        <content type="html"><![CDATA[<h1 id="系统排查"><a href="#系统排查" class="headerlink" title="系统排查"></a>系统排查</h1><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># 系统资源统计</span></span><br><span class="line"><span class="built_in">dstat</span> 是一个可以取代vmstat，iostat，netstat和ifstat这些命令的多功能产品</span><br><span class="line"><span class="meta"># IO监控</span></span><br><span class="line"><span class="built_in">dstat</span> -tclmnpydr --top-io</span><br><span class="line"><span class="meta"># CPU监控</span></span><br><span class="line"><span class="built_in">dstat</span> -tclmnpydr --top-cpu</span><br><span class="line"><span class="meta"># 查看硬盘速度，监控等</span></span><br><span class="line"><span class="built_in">dstat</span> -tclmnpydr --top-io --top-bio</span><br><span class="line"><span class="meta"># 查看全部内存都有谁在占用</span></span><br><span class="line"><span class="built_in">dstat</span> -g -l -m -s --top-mem</span><br><span class="line"><span class="meta"># 显示一些关于CPU资源损耗的数据</span></span><br><span class="line"><span class="built_in">dstat</span> -c -y -l --<span class="function"><span class="keyword">proc</span>-<span class="title">count</span> --<span class="title">top</span>-<span class="title">cpu</span></span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>passwd命令</title>
      <link href="/posts/fe6f45bf.html"/>
      <url>/posts/fe6f45bf.html</url>
      
        <content type="html"><![CDATA[<figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改用户密码</span></span><br><span class="line">passwd <span class="keyword">user</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>进程相关</title>
      <link href="/posts/a37e230c.html"/>
      <url>/posts/a37e230c.html</url>
      
        <content type="html"><![CDATA[<h1 id="进程"><a href="#进程" class="headerlink" title="进程"></a>进程</h1><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 删除指定名称的进程</span></span><br><span class="line">ps -ef |<span class="string"> grep xxx </span>|<span class="string"> awk &#x27;&#123;print $2&#125;&#x27; </span>|<span class="string"> xargs kill -9</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>shift命令</title>
      <link href="/posts/d82d149.html"/>
      <url>/posts/d82d149.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># shift命令用于对参数的移动(左移)，通常用于在不知道传入参数个数的情况下依次遍历每个参数然后进行相应处理（常见于Linux中各种程序的启动脚本）。</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment"># $#-参数个数 $i第i个参数  </span></span><br><span class="line"><span class="keyword">while</span> [ <span class="variable">$#</span> != 0 ];<span class="keyword">do</span>  </span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;第一个参数为：<span class="variable">$1</span>,参数个数为：<span class="variable">$#</span>&quot;</span>  </span><br><span class="line"><span class="built_in">shift</span>  </span><br><span class="line"><span class="keyword">done</span> </span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">输入如下命令运行：run.sh a b c d e f</span><br><span class="line"></span><br><span class="line">结果显示如下：</span><br><span class="line">第一个参数为：a,参数个数为：6</span><br><span class="line">第一个参数为：b,参数个数为：5</span><br><span class="line">第一个参数为：c,参数个数为：4</span><br><span class="line">第一个参数为：d,参数个数为：3</span><br><span class="line">第一个参数为：e,参数个数为：2</span><br><span class="line">第一个参数为：f,参数个数为：1</span><br><span class="line"></span><br><span class="line">从上可知 <span class="built_in">shift</span>(<span class="built_in">shift</span> 1) 命令每执行一次，变量的个数(<span class="variable">$#</span>)减一（之前的<span class="variable">$1</span>变量被销毁,之后的<span class="variable">$2</span>就变成了<span class="variable">$1</span>），而变量值提前一位。</span><br><span class="line">同理，<span class="built_in">shift</span> n后，前n位参数都会被销毁</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>sed命令</title>
      <link href="/posts/f54357bf.html"/>
      <url>/posts/f54357bf.html</url>
      
        <content type="html"><![CDATA[<h1 id="sed命令"><a href="#sed命令" class="headerlink" title="sed命令"></a>sed命令</h1><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ip指定范围内访问最多前20 （/data/logs/access.log访问记录）</span></span><br><span class="line"><span class="attribute">sed</span> -n &#x27;/<span class="number">16</span>:<span class="number">00</span>:<span class="number">00</span>/,/<span class="number">16</span>:<span class="number">26</span>:<span class="number">00</span>/&#x27;p /data/logs/access.log|awk &#x27;&#123;print $<span class="number">1</span>&#125;&#x27;|sort|uniq -c|sort -nr|head -<span class="number">20</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除包含指定内容的行(-e 只显示不修改源文件 -i不显示会修改源文件)</span></span><br><span class="line"><span class="attribute">sed</span> -e &#x27;/\<span class="string">&quot;other\&quot;\:\&quot;[0-9]\+\&quot;/d&#x27; test.log</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>sudo免密</title>
      <link href="/posts/cf4e0d77.html"/>
      <url>/posts/cf4e0d77.html</url>
      
        <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 无法使用su(xxx不在sudoers中)</span></span><br><span class="line"><span class="built_in">chmod</span> 740 /etc/sudoers</span><br><span class="line">vim /etc/sudoers</span><br><span class="line">增加(NOPASSWD使用<span class="built_in">sudo</span>免密)</span><br><span class="line">user ALL=(ALL)   NOPASSWD:ALL</span><br><span class="line"><span class="built_in">chmod</span> 440 /etc/sudoers</span><br></pre></td></tr></table></figure><h2 id="指定账户运行"><a href="#指定账户运行" class="headerlink" title="指定账户运行"></a>指定账户运行</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">su - <span class="built_in">cat</span>(账户名称) -c <span class="string">&quot;具体命令&quot;</span></span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>linux常用命令</title>
      <link href="/posts/fe4ef317.html"/>
      <url>/posts/fe4ef317.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="系统排查"><a href="#系统排查" class="headerlink" title="系统排查"></a>系统排查</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 系统资源统计</span></span><br><span class="line">dstat 是一个可以取代vmstat，iostat，netstat和ifstat这些命令的多功能产品</span><br><span class="line"><span class="comment"># IO监控</span></span><br><span class="line">dstat -tclmnpydr --top-io</span><br><span class="line"><span class="comment"># CPU监控</span></span><br><span class="line">dstat -tclmnpydr --top-cpu</span><br><span class="line"><span class="comment"># 查看硬盘速度，监控等</span></span><br><span class="line">dstat -tclmnpydr --top-io --top-bio</span><br><span class="line"><span class="comment"># 查看全部内存都有谁在占用</span></span><br><span class="line">dstat -g -l -m -s --top-mem</span><br><span class="line"><span class="comment"># 显示一些关于CPU资源损耗的数据</span></span><br><span class="line">dstat -c -y -l --proc-count --top-cpu</span><br><span class="line"><span class="comment"># CPU占用前十</span></span><br><span class="line">ps aux|<span class="built_in">head</span> -1;ps aux|grep -v PID|<span class="built_in">sort</span> -rn -k +3|<span class="built_in">head</span></span><br><span class="line"><span class="comment"># 内存占用前十</span></span><br><span class="line">ps aux|<span class="built_in">head</span> -1;ps aux|grep -v PID|<span class="built_in">sort</span> -rn -k +4|<span class="built_in">head</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># mysql cpu过大，mysql负载过大,mysql cpu占用高 </span></span><br><span class="line">show processlist</span><br><span class="line"></span><br><span class="line"><span class="comment"># 独立IP数</span></span><br><span class="line">awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span> /var/log/nginx/access.log | <span class="built_in">sort</span> | <span class="built_in">uniq</span> -c | <span class="built_in">sort</span> -nr | <span class="built_in">wc</span> -l</span><br><span class="line"></span><br><span class="line"><span class="comment"># ip指定范围内访问最多前20 （/data/logs/access.log访问记录）</span></span><br><span class="line">sed -n <span class="string">&#x27;/16:00:00/,/16:26:00/&#x27;</span>p /data/logs/access.log|awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span>|<span class="built_in">sort</span>|<span class="built_in">uniq</span> -c|<span class="built_in">sort</span> -nr|<span class="built_in">head</span> -20</span><br><span class="line"></span><br><span class="line"><span class="comment"># 时间段内ip流量总计，各ip流量总计：</span></span><br><span class="line">sed -n <span class="string">&#x27;/16:00:00/,/16:30:00/&#x27;</span>p /data/logs/access.log|awk <span class="string">&#x27;&#123;a[$1]+=$10&#125; END &#123;for(i in a)&#123;print i,a[i]&#125;&#125;&#x27;</span>|<span class="built_in">sort</span> -k 2 -nr &gt; /data/1.<span class="built_in">log</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 同一个$3 不同$10共有多少数量，例：同一个uid下不同ip量，倒叙排序</span></span><br><span class="line">awk <span class="string">&#x27;&#123;print $3,$10&#125;&#x27;</span> 20181109.<span class="built_in">log</span> |<span class="built_in">sort</span>|<span class="built_in">uniq</span>| awk <span class="string">&#x27;&#123;a[$2]+=1&#125; END &#123;for(i in a)&#123;print i,a[i]&#125;&#125;&#x27;</span>|<span class="built_in">sort</span>|<span class="built_in">uniq</span> -c|<span class="built_in">sort</span> -k3 -nr|<span class="built_in">head</span> -20</span><br><span class="line"></span><br><span class="line"><span class="comment"># 根据最后一个字段查询 awk &#x27;$(NF)&#x27;表示最后一个字段的内容 $0获取整行数据</span></span><br><span class="line">sed -n <span class="string">&#x27;/17:00:00/,/17:21:00/&#x27;</span>p /data/logs/access.log|awk <span class="string">&#x27;$(NF)&gt;3 &#123;print $0&#125;&#x27;</span> &gt; /data/logs/1.<span class="built_in">log</span></span><br><span class="line"><span class="comment"># awk获取倒数第二个域</span></span><br><span class="line">awk <span class="string">&#x27;&#123;NF - 1&#125;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取访问最多的url</span></span><br><span class="line">sed -n <span class="string">&#x27;/13:58:00/,/14:00:00/&#x27;</span>p /data/logs/nginx/access.log | grep -oE <span class="string">&quot;(GET|POST) .*&quot;</span>|awk <span class="string">&#x27;&#123;print $1,  $2&#125;&#x27;</span>|<span class="built_in">sort</span> |<span class="built_in">uniq</span> -c |<span class="built_in">sort</span> -nr |<span class="built_in">head</span> -n 50</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取访问频率最高的user-agent</span></span><br><span class="line">sed -n <span class="string">&#x27;/14:50:00/,/15:40:00/&#x27;</span>p /data/logs/nginx/access.log |awk -F <span class="string">&#x27;&quot;&#x27;</span> <span class="string">&#x27;&#123;print $4&#125;&#x27;</span>|<span class="built_in">sort</span> | <span class="built_in">uniq</span> -c | <span class="built_in">sort</span> -nr | <span class="built_in">head</span> -n 10</span><br><span class="line"></span><br><span class="line"><span class="comment"># crontab没有日志,检查rsyslog</span></span><br><span class="line">service rsyslog status</span><br><span class="line">service rsyslog restart</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示匹配规则的内容</span></span><br><span class="line">grep -o</span><br><span class="line"></span><br><span class="line"><span class="comment"># 按照指定列进行排序</span></span><br><span class="line"><span class="built_in">sort</span> -t <span class="string">&#x27;分隔符&#x27;</span> k1(下标位置)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> linux </category>
          
          <category> 排查 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 常用命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux桌面环境安装</title>
      <link href="/posts/8e1b0d90.html"/>
      <url>/posts/8e1b0d90.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><p>一、安装桌面环境<br>1.安装MATE</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ yum <span class="built_in">groups</span> install <span class="string">&quot;MATE Desktop&quot;</span></span><br><span class="line"><span class="comment"># 安装X</span></span><br><span class="line">$ yum <span class="built_in">groups</span> install <span class="string">&quot;X Window System&quot;</span></span><br><span class="line"><span class="comment">#自动进入图形界面</span></span><br><span class="line">$ systemctl set-default graphical.target</span><br><span class="line"><span class="comment"># 创建 .xinitrc文件, 可以使用startX启动图形界面</span></span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">&quot;exec /usr/bin/mate-session&quot;</span> &gt;&gt; ~/.xinitrc</span><br></pre></td></tr></table></figure><p>二、编辑器无法使用中文输入法处理方式</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> <span class="attribute">GTK_IM_MODULE</span>=fcitx</span><br><span class="line"><span class="built_in">export</span> <span class="attribute">QT_IM_MODULE</span>=fcitx</span><br><span class="line"><span class="built_in">export</span> <span class="attribute">XMODIFIERS</span>=@im=fcitx</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> linux </category>
          
          <category> 日志 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 桌面环境 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络相关命令</title>
      <link href="/posts/287e4d04.html"/>
      <url>/posts/287e4d04.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="查看正在使用的网卡"><a href="#查看正在使用的网卡" class="headerlink" title="查看正在使用的网卡"></a>查看正在使用的网卡</h1><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">watch cat /proc/net/dev/</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">显示参数详解</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">bytes: The total number of bytes of data transmitted or received by the interface.（接口发送或接收的数据的总字节数）</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">packets: The total number of packets of data transmitted or received by the interface.（接口发送或接收的数据包总数）</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">errs: The total number of transmit or receive errors detected by the device driver.（由设备驱动程序检测到的发送或接收错误的总数）</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">drop: The total number of packets dropped by the device driver.（设备驱动程序丢弃的数据包总数）</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">fifo: The number of FIFO buffer errors.（FIFO缓冲区错误的数量）</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">frame: The number of packet framing errors.（分组帧错误的数量）</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">colls: The number of collisions detected on the interface.（接口上检测到的冲突数）</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">compressed: The number of compressed packets transmitted or received by the device driver. (This appears to be unused <span class="keyword">in</span> the 2.2.15 kernel.)（设备驱动程序发送或接收的压缩数据包数）</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">carrier: The number of carrier losses detected by the device driver.（由设备驱动程序检测到的载波损耗的数量）</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">multicast: The number of multicast frames transmitted or received by the device driver.（设备驱动程序发送或接收的多播帧数）</span></span><br></pre></td></tr></table></figure><h1 id="网络情况"><a href="#网络情况" class="headerlink" title="网络情况"></a>网络情况</h1><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">iftop -i eth0</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">显示参数详解</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">TX: 从网卡发出的流量</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">RX: 网卡接受流量</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">TOTAL: 网卡发送接收总量</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">cum: iftop开始运行到当前时间点的总流量</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">peak: 网卡流量峰值</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">rates: 分别表示2s、10s、40s的平均流量</span></span><br></pre></td></tr></table></figure><h1 id="按进程实时统计网络带宽利用率"><a href="#按进程实时统计网络带宽利用率" class="headerlink" title="按进程实时统计网络带宽利用率"></a>按进程实时统计网络带宽利用率</h1><figure class="highlight shell"><figcaption><span>script</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">nethogs</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">每五秒刷新</span></span><br><span class="line">nethogs -d 5</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">指定eth0网卡和eth1</span></span><br><span class="line">nethogs eth0 eth1</span><br><span class="line"></span><br><span class="line">-d: delay for refresh rate.</span><br><span class="line">-h: display available commands usage.</span><br><span class="line">-p: sniff in promiscious mode (not recommended).</span><br><span class="line">-t: trace mode.</span><br><span class="line">-V: prints Version info.</span><br><span class="line"> </span><br><span class="line">交互模式</span><br><span class="line">在进入 nethogs 之后,可以使用如下的交互命令:</span><br><span class="line">m: 修改网速单位</span><br><span class="line">r: 按照流量排序</span><br><span class="line">s: 按照发送流量排序</span><br><span class="line">q: 退出</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> linux </category>
          
          <category> 网络 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>网络相关命令</title>
      <link href="/posts/287e4d04.html"/>
      <url>/posts/287e4d04.html</url>
      
        <content type="html"><![CDATA[<h1 id="netstat"><a href="#netstat" class="headerlink" title="netstat"></a>netstat</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 网络连接情况(tcp)</span></span><br><span class="line">netstat -n(不显示别名) -p(显示相关的程序) -t(tcp)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 网络连接数统计(tcp)</span></span><br><span class="line">netstat -nat|awk <span class="string">&#x27;&#123;print awk $NF&#125;&#x27;</span>|<span class="built_in">sort</span>|<span class="built_in">uniq</span> -c|<span class="built_in">sort</span> -n <span class="comment">#查看tcp连接数</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> linux </category>
          
          <category> 网络 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>记录</title>
      <link href="/posts/e797f254.html"/>
      <url>/posts/e797f254.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">linux登录后出现-bash-4.1$</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">首先切换到故障用户</span></span><br><span class="line"><span class="meta prompt_">$</span><span class="language-bash">su - <span class="built_in">test</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">复制对应的文件（不要用root直接复制，否则复制过去的东西属主，数组都是root的）</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cp</span> /etc/skel/.bash*  ~  <span class="comment">##(/etc/skel 新用户老家的样子，所以从这里复制)</span></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">　卸载</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">rpm -e和yum remove</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">卸载软件不卸载依赖</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">rpm -e --nodeps</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看进行运行在哪个cpu，进入top后按f后按j选中 last cpu used</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">top -p pid</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">top 根据进程名称</span> </span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">top -p `pgrep python | <span class="built_in">tr</span> <span class="string">&quot;\\n&quot;</span> <span class="string">&quot;,&quot;</span> | sed <span class="string">&#x27;s/,$//&#x27;</span>`</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">pgrep是通过程序的名字来查询进程的工具</span></span><br><span class="line">-l 列出程序名和进程ID；</span><br><span class="line">-o 进程起始的ID；</span><br><span class="line">-n 进程终止的ID；</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">xargs <span class="built_in">mv</span>合用</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">-t 打印出命令后执行</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">-p 需要确定后才执行</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">-I 将一行行赋值给&#123;&#125;</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">xargs -t -p -I &#123;&#125; <span class="built_in">mv</span> &#123;&#125; /data/logs/tmpimg/maitiansell/</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">find和xargs合用</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查找当前目录下文件名称不符合*gz规则，并且修改时间7天前，打印完整文件目录，提交给xargs进行删除 -v:显示详细步骤</span></span><br><span class="line">find . -type f -not-name &#x27;*gz&#x27; -ctime +7 -print0 | xargs -0  -I &#123;&#125; rm -v &#123;&#125;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">从每行开头开始第10个字节开始输出</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">tail</span> -c +10 x.log</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看文件最后10个字节</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">tail</span> -c 10 x.log</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查找目录下的文件并且赋值权限</span></span><br><span class="line">chomd 755 `find img/ -type d`</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查找目录下的文件</span></span><br><span class="line">find img/ -type f</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">无法显示中文处理</span></span><br><span class="line">export LANG C.UTF-8</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> linux </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>nginx配置文件</title>
      <link href="/posts/d271472.html"/>
      <url>/posts/d271472.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#作为守护进程运行 Nginx</span></span><br><span class="line"><span class="comment">#daemon on;</span></span><br><span class="line">user www www;</span><br><span class="line"><span class="comment">#工作进程数</span></span><br><span class="line">worker_processes 12;</span><br><span class="line"><span class="comment">#保存进程id号</span></span><br><span class="line">pid logs/nginx.pid;</span><br><span class="line"><span class="comment">#加大 Nginx 所能操作的文件句柄数</span></span><br><span class="line">worker_rlimit_nofile 65535;</span><br><span class="line">events &#123;</span><br><span class="line">    <span class="comment"># 一般是配置nginx连接的特性，如1个word能同时允许多少连接</span></span><br><span class="line">    <span class="comment"># 使用epoll的I/O 模型。linux建议epoll，FreeBSD建议采用kqueue，window下不指定。</span></span><br><span class="line">    use epoll;</span><br><span class="line">    <span class="comment">#每线程最多可接受的连接数，worker_processes * worker_connections</span></span><br><span class="line">    worker_connections 65535;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    include mime.types;</span><br><span class="line">    default_type application/octet-stream;</span><br><span class="line">    <span class="comment">#charset gb2312;</span></span><br><span class="line">    <span class="comment"># 开启重写日志</span></span><br><span class="line">    <span class="comment">#rewrite_log on;</span></span><br><span class="line">    <span class="comment"># 隐藏版本号,因为如果设置了该命令，服务器名称就固定了</span></span><br><span class="line">    server_tokens off;</span><br><span class="line">    <span class="comment">#系统错误日志</span></span><br><span class="line">    error_log /data/logs/nginx_error.log  crit;</span><br><span class="line">    server_names_hash_bucket_size 128;</span><br><span class="line">    <span class="comment"># 客户端请求头部的缓冲区大小。这个可以根据你的系统分页大小来设置，一般一个请求的头部大小不会超过1k，不过由于一般系统分页都要大于1k，</span></span><br><span class="line">    <span class="comment"># 所以这里设置为分页大小。分页大小可以用命令getconf PAGESIZE取得。</span></span><br><span class="line">    client_header_buffer_size 32k;</span><br><span class="line">    <span class="comment"># 客户请求头缓冲大小。nginx默认会用client_header_buffer_size这个buffer来读取header值，如果</span></span><br><span class="line">    <span class="comment"># header过大，它会使用large_client_header_buffers来读取。</span></span><br><span class="line">    large_client_header_buffers 4 32k;</span><br><span class="line">    <span class="comment"># 设定通过nginx上传文件的大小</span></span><br><span class="line">    client_max_body_size 8m;</span><br><span class="line">    <span class="comment"># sendfile: 设置为on表示启动高效传输文件的模式。</span></span><br><span class="line">    <span class="comment"># sendfile可以让Nginx在传输文件时直接在磁盘和tcp socket之间传输数据。</span></span><br><span class="line">    <span class="comment"># 如果这个参数不开启，会先在用户空间（Nginx进程空间）申请一个buffer，用read函数把数据从磁盘读到cache，再从cache读取到用户空间的buffer，</span></span><br><span class="line">    <span class="comment"># 再用write函数把数据从用户空间的buffer写入到内核的buffer，最后到tcp socket。开启这个参数后可以让数据不用经过用户buffer</span></span><br><span class="line">    sendfile on;</span><br><span class="line">    <span class="comment">#Linux 内核 tcp_nopush TCP 函数调用，关闭；</span></span><br><span class="line">    <span class="comment"># 此选项允许或禁止使用socke的TCP_CORK的选项，此选项仅在使用sendfile的时候使用</span></span><br><span class="line">    tcp_nopush on;</span><br><span class="line">    <span class="comment">#Linux &amp; FreeBSD 内核 TCP 函数调用，开启；</span></span><br><span class="line">    tcp_nodelay on;</span><br><span class="line">    <span class="comment">#每个链接保存的时长(单位：秒)</span></span><br><span class="line">    keepalive_timeout 60;</span><br><span class="line">    fastcgi_connect_timeout 300;</span><br><span class="line">    fastcgi_send_timeout 300;</span><br><span class="line">    fastcgi_read_timeout 300;</span><br><span class="line">    fastcgi_buffer_size 64k;</span><br><span class="line">    fastcgi_buffers 4 64k;</span><br><span class="line">    <span class="comment"># 默认值是fastcgi_buffer的2倍</span></span><br><span class="line">    fastcgi_busy_buffers_size 128k;</span><br><span class="line">    <span class="comment"># 写入缓存文件使用多大的数据块，默认值是fastcgi_buffer的2倍</span></span><br><span class="line">    fastcgi_temp_file_write_size 128k;</span><br><span class="line">    gzip on;</span><br><span class="line">    gzip_min_length 1k;</span><br><span class="line">    gzip_buffers 4 16k;</span><br><span class="line">    gzip_http_version 1.0;</span><br><span class="line">    gzip_comp_level 2;</span><br><span class="line">    <span class="comment">#gzip_types text/plain text/css application/xml text/javascript;#application/x-javascript;</span></span><br><span class="line">    gzip_types text/plain text/css application/json application/x-javascript application/javascript image/jpeg image/gif image/png text/xml application/xml application/xml+rss text/javascript;</span><br><span class="line"></span><br><span class="line">    gzip_vary on;</span><br><span class="line"></span><br><span class="line">    geo <span class="variable">$whiteiplist</span>  &#123;</span><br><span class="line">        default 1;</span><br><span class="line">        <span class="comment">#127.0.0.1 0;</span></span><br><span class="line">    &#125;</span><br><span class="line">    map <span class="variable">$whiteiplist</span>  <span class="variable">$limit</span> &#123;</span><br><span class="line">        <span class="comment"># 通过remote_addr这个标识来做限制，“binary_”的目的是缩写内存占用量，是限制同一客户端ip地址</span></span><br><span class="line">        1 <span class="variable">$binary_remote_addr</span>;</span><br><span class="line">        0 <span class="string">&quot;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"># zone=allips:128m表示生成一个大小为10M，名字为one的内存区域，用来存储访问的频次信息</span></span><br><span class="line">    <span class="comment"># rate=50r/s表示允许相同标识的客户端的访问频次，这里限制的是每秒50次，还可以有比如30r/m的</span></span><br><span class="line">    limit_req_zone <span class="variable">$limit</span> zone=allips:128m rate=50r/s;</span><br><span class="line">        log_format access <span class="string">&#x27;$remote_addr - $remote_user [$time_local] $request &#x27;</span></span><br><span class="line">                    <span class="string">&#x27;&quot;$status&quot; $body_bytes_sent &quot;$http_referer&quot; &#x27;</span></span><br><span class="line">                    <span class="string">&#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;</span>;</span><br><span class="line">    server&#123;</span><br><span class="line">        listen      80;</span><br><span class="line">        server_name cat.io;</span><br><span class="line">        <span class="built_in">set</span> <span class="variable">$demain</span> <span class="string">&quot;www.&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> ( <span class="variable">$http_user_agent</span> ~* <span class="string">&quot;(Mobile|Android|iPhone|Windows Phone|UC|Kindle|SAMSUNG|SonyEricsson|Opera Mini|LG|MOT|BlackBerry|HTC|Nokia|J2ME)&quot;</span> )&#123;</span><br><span class="line">                <span class="built_in">set</span> <span class="variable">$demain</span> <span class="string">&quot;m.&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        rewrite ^/(.*)$ http://<span class="variable">$&#123;demain&#125;</span>cat.io/<span class="variable">$1</span> permanent;</span><br><span class="line">        access_log off;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  localhost;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#charset koi8-r;</span></span><br><span class="line"></span><br><span class="line">        root   /data/html/public;</span><br><span class="line">        index  index.html index.htm;</span><br><span class="line">        access_log  /data/logs/hexo.access.log  access;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> ( <span class="variable">$http_user_agent</span> ~* <span class="string">&quot;(wordPress|PHP|java\/|curl|scan|bot|Go-http)&quot;</span> )&#123;</span><br><span class="line">             <span class="built_in">return</span> 404;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> ( <span class="variable">$http_user_agent</span> = <span class="string">&quot;&quot;</span> )&#123;</span><br><span class="line">             <span class="built_in">return</span> 404;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment"># 禁止GET外的请求</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$request_method</span> !~* GET)&#123;</span><br><span class="line">            <span class="built_in">return</span> 404;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment"># 禁止访问指定的后缀url</span></span><br><span class="line">        <span class="keyword">if</span> ( <span class="variable">$uri</span> ~* \.(php|java|asp|net|txt|<span class="built_in">log</span>)$)&#123;</span><br><span class="line">            <span class="built_in">return</span> 404;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment"># 禁止包含function exce sh字符串(目前应该是thinkphp漏洞注入相关)</span></span><br><span class="line">        <span class="keyword">if</span> ( <span class="variable">$uri</span> ~* \[<span class="keyword">function</span>|<span class="built_in">exec</span>|mstshash|cookie]$ )&#123;</span><br><span class="line">            <span class="built_in">return</span> 404;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> ( <span class="variable">$uri</span> ~* sh[^A-Za-z]+ )&#123;</span><br><span class="line">            <span class="built_in">return</span> 403;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        error_page  301              /404.html;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># redirect server error pages to the static page /50x.html</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        error_page   500 502 503 504  /50x.html;</span><br><span class="line">        location = /50x.html &#123;</span><br><span class="line">            root   /data/html;</span><br><span class="line">        &#125;</span><br><span class="line">        location ~ /\.php &#123;</span><br><span class="line">            deny  all;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置文件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nginx记录</title>
      <link href="/posts/e66d5b16.html"/>
      <url>/posts/e66d5b16.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h2 id="sub-m-cat-net-301重定向到-m-cat-net-sub"><a href="#sub-m-cat-net-301重定向到-m-cat-net-sub" class="headerlink" title="sub.m.cat.net 301重定向到 m.cat.net&#x2F;sub&#x2F;"></a>sub.m.cat.net 301重定向到 m.cat.net&#x2F;sub&#x2F;</h2><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ( <span class="variable">$host</span> ~* (.*)\.m\.cat\.net ) &#123;</span><br><span class="line">    set <span class="variable">$sub_domain</span> <span class="variable">$1</span>;</span><br><span class="line">    rewrite <span class="string">&quot;^(.*)$&quot;</span>  <span class="variable">$scheme</span><span class="symbol">://m</span>.cat.net/<span class="variable">$sub</span>_domain<span class="variable">$1</span> permanent;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="nginx和php分离式部署"><a href="#nginx和php分离式部署" class="headerlink" title="nginx和php分离式部署"></a>nginx和php分离式部署</h2><h3 id="1-nginx配置"><a href="#1-nginx配置" class="headerlink" title="1.nginx配置"></a>1.nginx配置</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"># 定义upsream模块，也可以直接写死fastcgi_pass</span><br><span class="line">upstream myfastcgi&#123;</span><br><span class="line">    server 192.168.1.213:9000 weight=2 max_fails=1 fail_timeout=5s;</span><br><span class="line">    server 192.168.1.211:9000 weight=1 max_fails=1 fail_timeout=5s;</span><br><span class="line">&#125;</span><br><span class="line">server&#123;</span><br><span class="line">    listen      80;</span><br><span class="line">    server_name thisofcat.cat;</span><br><span class="line">    location /  &#123;</span><br><span class="line">        fastcgi_pass   myfastcgi;</span><br><span class="line">        fastcgi_index  index.php;</span><br><span class="line">        fastcgi_param  SCRIPT_FILENAME  /data/http/cs$fastcgi_script_name;</span><br><span class="line">        include        fastcgi_params;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> nginx </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>mysqlCMark安装</title>
      <link href="/posts/de5ef85f.html"/>
      <url>/posts/de5ef85f.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><p><a href="https://www.linuxidc.com/Linux/2016-11/137645.htm">https://www.linuxidc.com/Linux/2016-11/137645.htm</a></p><h1 id="一、yum安装相关依赖"><a href="#一、yum安装相关依赖" class="headerlink" title="一、yum安装相关依赖"></a>一、yum安装相关依赖</h1><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum -y install gcc gcc-c++ gcc-g77 <span class="built_in">auto</span>conf <span class="built_in">auto</span>make zlib* fiex* libxml* ncurses-devel libmcrypt* libtool-ltdl-devel* \ </span><br><span class="line">make cmake bison git openssl openssl-devel</span><br></pre></td></tr></table></figure><h1 id="二、编译安装"><a href="#二、编译安装" class="headerlink" title="二、编译安装"></a>二、编译安装</h1><p>添加用户</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">groupadd mysql</span><br><span class="line">useradd -<span class="attribute">r</span> -<span class="selector-tag">g</span> mysql mysql</span><br></pre></td></tr></table></figure><p>2.编译安装</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">curl</span> https://cdn.mysql.com//Downloads/MySQL-<span class="number">5</span>.<span class="number">6</span>/mysql-<span class="number">5</span>.<span class="number">6</span>.<span class="number">45</span>-linux-glibc2.<span class="number">12</span>-x86_64.tar.gz</span><br><span class="line"><span class="attribute">tar</span> xf mysql-<span class="number">5</span>.<span class="number">6</span>.<span class="number">34</span>.tar.gz</span><br><span class="line"><span class="attribute">cd</span> mysql-<span class="number">5</span>.<span class="number">6</span>.<span class="number">34</span></span><br></pre></td></tr></table></figure><p> 默认情况下是安装在&#x2F;usr&#x2F;local&#x2F;webserver&#x2F;mysql<br> cmake编译参数可以自己调整</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cmake . <span class="attribute">-DCMAKE_INSTALL_PREFIX</span>=/usr/local/webserver/mysql <span class="attribute">-DMYSQL_DATADIR</span>=/data/mysqlData <span class="attribute">-DSYSCONFDIR</span>=/etc \ </span><br><span class="line"><span class="attribute">-DWITH_INNOBASE_STORAGE_ENGINE</span>=1 <span class="attribute">-DWITH_MYISAM_STORAGE_ENGINE</span>=1 <span class="attribute">-DWITH_ARCHIVE_STORAGE_ENGINE</span>=1 \</span><br><span class="line"><span class="attribute">-DWITH_PARTITION_STORAGE_ENGINE</span>=1 <span class="attribute">-DWITH_BLACKHOLE_STORAGE_ENGINE</span>=1 <span class="attribute">-DWITH_READLINE</span>=1 <span class="attribute">-DWITH_SSL</span>=system \</span><br><span class="line"><span class="attribute">-DWITH_ZLIB</span>=system <span class="attribute">-DMYSQL_UNIX_ADDR</span>=/tmp/mysql.sock <span class="attribute">-DMYSQL_TCP_PORT</span>=3306 <span class="attribute">-DENABLED_LOCAL_INFILE</span>=1 \</span><br><span class="line"><span class="attribute">-DEXTRA_CHARSETS</span>=all <span class="attribute">-DDEFAULT_CHARSET</span>=utf8 <span class="attribute">-DWITH_LIBWRAP</span>=0 <span class="attribute">-DDEFAULT_COLLATION</span>=utf8_general_ci \</span><br><span class="line"><span class="attribute">-DWITH_BOOST</span>=/home/cat/installData/mysql/mysql-8.0.11/boost (最后一句为mysql8才需要使用)</span><br></pre></td></tr></table></figure><p>cmake编译报错需要删除编译缓存，修复错误后再次重新编译</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">rm</span> <span class="operator">-f</span> CMakeCache.txt</span><br></pre></td></tr></table></figure><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">make</span> &amp;&amp; <span class="built_in">make</span> install</span><br></pre></td></tr></table></figure><p>注意事项：<br>重新编译时，需要清除旧的对象文件和缓存信息。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">make clean</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">rm</span> -f CMakeCache.txt</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">rm</span> -rf /etc/my.cnf</span></span><br></pre></td></tr></table></figure><p>4.改变数据存储目录所有者为mysql</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chown</span> -R mysql.mysql /usr/local/webserver/mysql</span><br><span class="line"><span class="built_in">chown</span> -R mysql.mysql /data/mysqlData</span><br></pre></td></tr></table></figure><p>5.启动脚本初始化数据库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/webserver/mysql</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">scripts/mysql_install_db --user=mysql --basedir=/usr/local/webserver/mysql --datadir=/data/mysqlData</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">mysql8</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">bin/mysqld --initialize --user=mysql --datadir=/data/mysqlData/</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">bin/mysql_ssl_rsa_setup</span></span><br><span class="line"></span><br><span class="line">D38j.)H_yU3J</span><br></pre></td></tr></table></figure><p>6.注册服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> support-files/mysql.server /etc/rc.d/init.d/mysqld</span><br></pre></td></tr></table></figure><p>使用默认配置文件</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cp</span> support-<span class="keyword">files</span>/my-default.<span class="keyword">cnf</span> /etc/my.<span class="keyword">cnf</span></span><br></pre></td></tr></table></figure><p>让chkconfig管理mysql服务</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chkconfig --<span class="built_in">add</span> mysqld</span><br></pre></td></tr></table></figure><p>开机启动</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">chkconfig</span> mysqld <span class="literal">on</span></span><br></pre></td></tr></table></figure><p>编辑&#x2F;etc&#x2F;my.cnf配置，加入以下内容</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">innodb_file_per_table</span> = <span class="number">1</span></span><br><span class="line"><span class="attr">datadir</span> = /data/mysqlData</span><br><span class="line"><span class="attr">log-bin</span>=/data/binlogs/mysql-bin</span><br></pre></td></tr></table></figure><p>注意：<br>经过实际测试innodb_file_per_table &#x3D; ON这条参数需要innodb_file_per_table &#x3D; 1 才能生效，具体可以通过</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show <span class="keyword">variables</span> like <span class="comment">&#x27;%per_table%&#x27;</span>;来查询</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /data/binlogs</span><br><span class="line"><span class="built_in">chown</span> -R mysql.mysql /data/binlogs</span><br></pre></td></tr></table></figure><p>8.将mysql命令加入环境变量中</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim <span class="regexp">/etc/</span>profile.d/mysql.sh</span><br><span class="line">加入</span><br><span class="line">export PATH=<span class="regexp">/usr/</span>local<span class="regexp">/webserver/my</span>sql/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure><p>默认密码为空</p><p>9修改&#x2F;etc&#x2F;security&#x2F;limits.conf，然后加入以下内容，退出再重新登陆即可(不需要重启，退出当前的连接shell即可)</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># ulimit -n 查看参数是否生效</span></span><br><span class="line"><span class="bullet">*</span> hard nofile 655350</span><br><span class="line"><span class="bullet">*</span> soft nofile 655350</span><br></pre></td></tr></table></figure><p>否则报错如下：<br>错误#23: Out of resources when opening file ‘.&#x2F;XX&#x2F;USER.MYD’ (Errcode: 24)</p><p>10修改密码</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">命令:<span class="keyword">SET</span> <span class="keyword">PASSWORD</span> <span class="keyword">FOR</span> <span class="string">&#x27;username&#x27;</span>@<span class="string">&#x27;host&#x27;</span> = <span class="keyword">PASSWORD</span>(<span class="string">&#x27;newpassword&#x27;</span>);</span><br><span class="line">如果是当前登陆用户用<span class="keyword">SET</span> <span class="keyword">PASSWORD</span> = <span class="keyword">PASSWORD</span>(&quot;newpassword&quot;); </span><br><span class="line"></span><br><span class="line"><span class="keyword">update</span> mysql.<span class="keyword">user</span> <span class="keyword">set</span> <span class="keyword">password</span>=<span class="keyword">password</span>(<span class="string">&#x27;zxc406520&#x27;</span>) <span class="keyword">where</span> <span class="keyword">User</span>=<span class="string">&#x27;root&#x27;</span> <span class="keyword">and</span> Host=<span class="string">&#x27;localhost&#x27;</span>;</span><br><span class="line">mysql8</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="keyword">WITH</span> mysql_native_password <span class="keyword">BY</span> <span class="string">&#x27;你的密码&#x27;</span>; </span><br><span class="line">flush <span class="keyword">privileges</span>;</span><br></pre></td></tr></table></figure><p>新建帐号</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">&#x27;username&#x27;</span>@<span class="string">&#x27;host&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;password&#x27;</span>; </span><br><span class="line">授权</span><br><span class="line">命令:<span class="keyword">GRANT</span> <span class="keyword">privileges</span> <span class="keyword">ON</span> databasename.tablename <span class="keyword">TO</span> <span class="string">&#x27;username&#x27;</span>@<span class="string">&#x27;host&#x27;</span></span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> <span class="keyword">ON</span> *.* <span class="keyword">TO</span> <span class="string">&#x27;cat&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span>;</span><br><span class="line">注意:用以上命令授权的用户不能给其它用户授权,如果想让该用户可以授权,用以下命令:</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">privileges</span> <span class="keyword">ON</span> databasename.tablename <span class="keyword">TO</span> <span class="string">&#x27;username&#x27;</span>@<span class="string">&#x27;host&#x27;</span> <span class="keyword">WITH</span> <span class="keyword">GRANT</span> <span class="keyword">OPTION</span>;</span><br><span class="line">撤销权限</span><br><span class="line">命令: <span class="keyword">REVOKE</span> privilege <span class="keyword">ON</span> databasename.tablename <span class="keyword">FROM</span> <span class="string">&#x27;username&#x27;</span>@<span class="string">&#x27;host&#x27;</span>;</span><br><span class="line">删除用户</span><br><span class="line">命令: <span class="keyword">DROP</span> <span class="keyword">USER</span> <span class="string">&#x27;username&#x27;</span>@<span class="string">&#x27;host&#x27;</span>;</span><br></pre></td></tr></table></figure><p>10.错误提示<br>The server requested authentication method unknown to the client [caching_sha2_password]</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql8新特性,需要在my.cnf中新增</span><br><span class="line"><span class="attribute">default_authentication_plugin</span>=mysql_native_password</span><br></pre></td></tr></table></figure><h1 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h1><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">/usr/</span>local<span class="regexp">/webserver/my</span>sql<span class="regexp">/support-files/my</span>sql.server start</span><br></pre></td></tr></table></figure><h1 id="重启"><a href="#重启" class="headerlink" title="重启"></a>重启</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">kill</span> -USR2 `<span class="built_in">cat</span> /data/mysqlData/mysql.pid`</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安装文档 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql安装文档</title>
      <link href="/posts/f3f78fd4.html"/>
      <url>/posts/f3f78fd4.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#groupadd mysql 添加用户组</span></span><br><span class="line"><span class="comment">#useradd -r -g mysql mysql 添加用户</span></span><br><span class="line"><span class="comment">#mkdir -p /usr/local/webserver/mysql 创建安装目录</span></span><br><span class="line"><span class="comment">#mkdir -p /data/mysql/data 创建数据库目录</span></span><br><span class="line"><span class="comment"># chown mysql:mysql /data/mysql/ #目录权限修改</span></span><br><span class="line"><span class="comment">#tar -zxvf mysql-5.6.10-linux-glibc2.5-x86_64.tar.gz </span></span><br><span class="line"><span class="comment">#mv mysql-5.6.10-linux-glibc2.5-x86_64/* /usr/local/webserver/mysql</span></span><br><span class="line"><span class="comment">#rm -rf ./mysql-5.6.10-linux-glibc2.5-x86_64/</span></span><br><span class="line"><span class="comment">#cd /usr/local/webserver/</span></span><br><span class="line"><span class="comment">#ln -s full-path-to-mysql-VERSION-OS mysql</span></span><br><span class="line"><span class="comment">#cd mysql</span></span><br><span class="line">chown -R mysql .</span><br><span class="line">chgrp -R mysql .</span><br><span class="line">./scripts/mysql_install_db <span class="attribute">--user</span>=mysql <span class="attribute">--basedir</span>=/usr/local/webserver/mysql <span class="attribute">--datadir</span>=/data/mysql/data # MySQL 5.7.6之前版本</span><br><span class="line"></span><br><span class="line"><span class="comment">#MySQL 5.7.6之后版本使用</span></span><br><span class="line">./bin/mysqld <span class="attribute">--defaults-file</span>=/usr/local/webserver/mysql/my.cnf <span class="attribute">--basedir</span>=/usr/local/webserver/mysql <span class="attribute">--datadir</span>=/data/mysql/data <span class="attribute">--user</span>=mysql --initialize-insecure <span class="attribute">--lower-case-table-names</span>=1</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安装文档 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>主从同步</title>
      <link href="/posts/b70d073a.html"/>
      <url>/posts/b70d073a.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="MYSQL主从同步"><a href="#MYSQL主从同步" class="headerlink" title="MYSQL主从同步"></a>MYSQL主从同步</h1><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># 主服务器 192.168.1.212 master</span></span><br><span class="line"><span class="meta"># 从服务器 192.168.1.213 slave</span></span><br></pre></td></tr></table></figure><h1 id="主服务器配置"><a href="#主服务器配置" class="headerlink" title="主服务器配置"></a>主服务器配置</h1><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">一、配置my.cnf</span><br><span class="line">vim my.cnf</span><br><span class="line"><span class="keyword">log</span>-bin=mysql-bin-master</span><br><span class="line"><span class="keyword">server</span>-id=<span class="number">212</span></span><br><span class="line"></span><br><span class="line">binlog_do_db是指定binlog日志记录那些库的二进制日志。</span><br><span class="line">replicate_do_db则在slave库中指定同步那些库的binlog日志</span><br><span class="line"></span><br><span class="line">在master上设置binlog_do_弊端：</span><br><span class="line"><span class="number">1</span>、过滤操作带来的负载都在master上</span><br><span class="line"><span class="number">2</span>、无法做基于时间点的复制（利用binlog）。</span><br><span class="line"></span><br><span class="line">二、重启mysql</span><br><span class="line">kill -USR2 `cat /data/mysqlData/<span class="number">917.</span>pid`</span><br><span class="line"></span><br><span class="line">三、授权</span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">all</span> <span class="keyword">on</span> *.* <span class="keyword">to</span> <span class="string">&#x27;slave&#x27;</span>@<span class="string">&#x27;192.168.1.213&#x27;</span> identified <span class="keyword">by</span> <span class="string">&#x27;123456&#x27;</span>;</span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">replication</span> slave <span class="keyword">on</span> *.* <span class="keyword">to</span> <span class="string">&#x27;slave&#x27;</span>@<span class="string">&#x27;192.168.1.213&#x27;</span>;</span><br><span class="line">flush <span class="keyword">privileges</span>;</span><br><span class="line"></span><br><span class="line"># mysql8</span><br><span class="line">mysql&gt; <span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">&#x27;tongbu&#x27;</span>@<span class="string">&#x27;192.168.1.213&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;123456&#x27;</span>;</span><br><span class="line">mysql&gt;<span class="keyword">GRANT</span> <span class="keyword">SELECT</span>, <span class="keyword">INSERT</span>, <span class="keyword">UPDATE</span>, <span class="keyword">DELETE</span>, <span class="keyword">CREATE</span>, RELOAD, PROCESS, <span class="keyword">REFERENCES</span>, <span class="keyword">INDEX</span>, <span class="keyword">ALTER</span>, <span class="keyword">SHOW</span> DATABASES, SUPER, <span class="keyword">CREATE</span> <span class="keyword">TEMPORARY</span> <span class="keyword">TABLES</span>, <span class="keyword">LOCK</span> <span class="keyword">TABLES</span>, <span class="keyword">EXECUTE</span>, <span class="keyword">REPLICATION</span> SLAVE, <span class="keyword">REPLICATION</span> CLIENT, <span class="keyword">CREATE</span> <span class="keyword">VIEW</span>, <span class="keyword">SHOW</span> <span class="keyword">VIEW</span>, <span class="keyword">CREATE</span> <span class="keyword">ROUTINE</span>, <span class="keyword">ALTER</span> <span class="keyword">ROUTINE</span>, <span class="keyword">CREATE</span> <span class="keyword">USER</span>, EVENT, <span class="keyword">TRIGGER</span>, <span class="keyword">CREATE</span> <span class="keyword">ROLE</span>, <span class="keyword">DROP</span> <span class="keyword">ROLE</span> <span class="keyword">ON</span> *.* <span class="keyword">TO</span> `tongbu`@`<span class="number">192.168</span><span class="number">.1</span><span class="number">.213</span>` <span class="keyword">WITH</span> <span class="keyword">GRANT</span> <span class="keyword">OPTION</span>;</span><br><span class="line">flush <span class="keyword">privileges</span>;</span><br><span class="line"></span><br><span class="line">四、查看binlog文件以及pos</span><br><span class="line"><span class="keyword">show</span> master status;</span><br><span class="line"></span><br><span class="line">五、导出数据库</span><br><span class="line">mysqldump  -uroot -p123456 cat&gt;cat.<span class="keyword">sql</span></span><br><span class="line"></span><br><span class="line">六、将数据库传到从服务器</span><br><span class="line">scp cat.<span class="keyword">sql</span>  <span class="number">192.168</span><span class="number">.1</span><span class="number">.213</span>:/data</span><br></pre></td></tr></table></figure><h1 id="从服务器配置"><a href="#从服务器配置" class="headerlink" title="从服务器配置"></a>从服务器配置</h1><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">一、配置my.cnf</span><br><span class="line">vim my.cnf</span><br><span class="line"><span class="attribute">server-id</span>=212</span><br><span class="line"><span class="attribute">replicate-do-db</span>=cat # 要处理的库</span><br><span class="line"><span class="attribute">replicate-ignore-db</span>=mysql # 要忽略的库</span><br><span class="line"></span><br><span class="line">二、重启mysql</span><br><span class="line">kill -USR2 `cat /data/mysqlData/917.pid`</span><br><span class="line"></span><br><span class="line">三、mysql命令行下配置slave</span><br><span class="line">mysql&gt;change master <span class="keyword">to</span> <span class="attribute">master_host</span>=<span class="string">&#x27;192.168.1.212&#x27;</span>,master_user=&#x27;cat&#x27;,master_password=&#x27;cat123456&#x27;,</span><br><span class="line"><span class="attribute">master_log_file</span>=<span class="string">&#x27;mysql-bin.000103&#x27;</span>,master_log_pos=220;</span><br><span class="line">mysql&gt;start slave;</span><br><span class="line">mysql&gt;show slave status \G;</span><br><span class="line"></span><br><span class="line">四、到主服务器查看状态</span><br><span class="line">mysql&gt;show processlist \G;</span><br></pre></td></tr></table></figure><h1 id="跳过错误有两种方式："><a href="#跳过错误有两种方式：" class="headerlink" title="跳过错误有两种方式："></a>跳过错误有两种方式：</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">一、跳过指定数量的事务：</span><br><span class="line"><span class="meta prompt_">mysql&gt;</span><span class="language-bash">slave stop;</span></span><br><span class="line"><span class="meta prompt_">mysql&gt;</span><span class="language-bash">SET GLOBAL SQL_SLAVE_SKIP_COUNTER = 1        <span class="comment">#跳过一个事务</span></span></span><br><span class="line"><span class="meta prompt_">mysql&gt;</span><span class="language-bash">slave start;</span></span><br><span class="line"></span><br><span class="line">二、修改mysql的配置文件，通过slave_skip_errors参数来跳所有错误或指定类型的错误</span><br><span class="line">vi /etc/my.cnf</span><br><span class="line">[mysqld]</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">slave-skip-errors=1062,1053,1146 <span class="comment">#跳过指定error no类型的错误</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">slave-skip-errors=all <span class="comment">#跳过所有错误</span></span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> mysql </category>
          
          <category> 主从同步 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>mysql记录</title>
      <link href="/posts/490cdff9.html"/>
      <url>/posts/490cdff9.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="字段转类型"><a href="#字段转类型" class="headerlink" title="字段转类型"></a>字段转类型</h1><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">方法一：<span class="keyword">SELECT</span> CAST(<span class="string">&#x27;123&#x27;</span> <span class="keyword">AS</span> SIGNED);</span><br><span class="line">方法二：<span class="keyword">SELECT</span> CONVERT(<span class="string">&#x27;123&#x27;</span>,SIGNED);</span><br><span class="line">方法三：<span class="keyword">SELECT</span> <span class="string">&#x27;123&#x27;</span>+<span class="number">0</span>;</span><br></pre></td></tr></table></figure><h1 id="删除表中重复数据保留最早的一条"><a href="#删除表中重复数据保留最早的一条" class="headerlink" title="删除表中重复数据保留最早的一条"></a>删除表中重复数据保留最早的一条</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">DELETE FROM TABLE WHERE ID IN &#123;</span><br><span class="line">    SELECT A.ID FROM (</span><br><span class="line">        SELECT ID FROM TABLE </span><br><span class="line">        WHERE</span><br><span class="line">        FIELD IN (SELECT FIELD FROM TABLE GROUP BY FIELD HAVING COUNT(*) &gt; 1)</span><br><span class="line">        AND</span><br><span class="line">        ID NOT IN (SELECT MIN(ID) FROM TABLE GROUP BY FIELD HAVING COUNT(*) &gt; 1)</span><br><span class="line">    ) AS A</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="mysql查询表中两个字段数据完全一样的数据"><a href="#mysql查询表中两个字段数据完全一样的数据" class="headerlink" title="mysql查询表中两个字段数据完全一样的数据"></a>mysql查询表中两个字段数据完全一样的数据</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">select distinct *  from table_name A </span><br><span class="line">where A.createTime between UNIX_TIMESTAMP(&#x27;2018-04-08&#x27;) and UNIX_TIMESTAMP(&#x27;2018-04-09&#x27;)</span><br><span class="line">and exists(select 1 from table_name B </span><br><span class="line">where A.id&lt;&gt;B.id and A.hid=B.hid and A.createTime=B.createTime </span><br><span class="line">and B.createTime between UNIX_TIMESTAMP(&#x27;2018-04-08&#x27;) and UNIX_TIMESTAMP(&#x27;2018-04-09&#x27;))</span><br></pre></td></tr></table></figure><h1 id="生成随机数"><a href="#生成随机数" class="headerlink" title="生成随机数"></a>生成随机数</h1><figure class="highlight isbl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title"><span class="built_in">round</span></span>(<span class="title">rand</span>() * (<span class="variable">max</span> - <span class="variable">min</span>) + <span class="variable">min</span>)</span></span><br><span class="line">获取<span class="number">0</span>-<span class="number">50</span>随机数 </span><br><span class="line"><span class="function"><span class="title"><span class="built_in">round</span></span>(<span class="title">rand</span>() * (<span class="number">50</span> - <span class="number">0</span>) + <span class="number">0</span>)</span></span><br></pre></td></tr></table></figure><h1 id="查询时-转换子段类型"><a href="#查询时-转换子段类型" class="headerlink" title="查询时,转换子段类型"></a>查询时,转换子段类型</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select city, convert(binary convert(city using latin5) using utf8mb4) from user_location where city like &#x27;%Ã%&#x27; collate utf8mb4_bin;</span><br><span class="line">select * from topics where name=&#x27;Harligt&#x27; COLLATE utf8_bin;</span><br></pre></td></tr></table></figure><h1 id="数据量大的情况下分页处理-效率比直接使用limit好"><a href="#数据量大的情况下分页处理-效率比直接使用limit好" class="headerlink" title="数据量大的情况下分页处理(效率比直接使用limit好)"></a>数据量大的情况下分页处理(效率比直接使用limit好)</h1><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * <span class="keyword">from</span> tbname <span class="keyword">where</span> <span class="built_in">id</span> &gt; <span class="built_in">offset</span> <span class="keyword">and</span> <span class="built_in">id</span> &lt; <span class="built_in">offset</span> + limit (<span class="built_in">id</span>为索引)</span><br></pre></td></tr></table></figure><h1 id="case-when-then"><a href="#case-when-then" class="headerlink" title="case when then"></a>case when then</h1><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CASE</span> jgdw <span class="keyword">WHEN</span> <span class="number">1</span> <span class="keyword">THEN</span> zujin <span class="keyword">WHEN</span> <span class="number">2</span> <span class="keyword">THEN</span> zujin * mj <span class="keyword">ELSE</span> zujin * mj * <span class="number">30</span> <span class="keyword">END</span> <span class="keyword">AS</span> zujinMon</span><br></pre></td></tr></table></figure><h1 id="对数据进行order-by后再进行group-by-默认情况下会导致数据按照自然排序"><a href="#对数据进行order-by后再进行group-by-默认情况下会导致数据按照自然排序" class="headerlink" title="对数据进行order by后再进行group by(默认情况下会导致数据按照自然排序)"></a>对数据进行order by后再进行group by(默认情况下会导致数据按照自然排序)</h1><p><a href="https://stackoverflow.com/questions/14770671/mysql-order-by-before-group-by">MySQL order by before group by</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">SELECT p1.* </span><br><span class="line">FROM wp_posts AS p1</span><br><span class="line">INNER JOIN</span><br><span class="line">(</span><br><span class="line">    SELECT MAX(post_date) MaxPostDate, post_author</span><br><span class="line">    FROM wp_posts</span><br><span class="line">    WHERE post_status=&#x27;publish&#x27;</span><br><span class="line">       AND post_type=&#x27;post&#x27;</span><br><span class="line">    GROUP BY post_author</span><br><span class="line">) AS p2</span><br><span class="line">  ON p1.post_author = p2.post_author</span><br><span class="line">  AND p1.post_date = p2.MaxPostDate</span><br><span class="line">WHERE p1.post_status=&#x27;publish&#x27;</span><br><span class="line">  AND p1.post_type=&#x27;post&#x27;</span><br><span class="line">ORDER BY p1.post_date DESC;</span><br></pre></td></tr></table></figure><h1 id="获取表和字段以及注释"><a href="#获取表和字段以及注释" class="headerlink" title="获取表和字段以及注释"></a>获取表和字段以及注释</h1><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 表注释可以用</span><br><span class="line"><span class="keyword">SQL</span> code</span><br><span class="line"><span class="keyword">show</span> <span class="keyword">table</span> status <span class="keyword">like</span> <span class="string">&#x27;表名&#x27;</span></span><br><span class="line"># 字段注释可以用</span><br><span class="line"><span class="keyword">SQL</span> code</span><br><span class="line"><span class="keyword">show</span> <span class="keyword">full</span> <span class="keyword">columns</span> <span class="keyword">from</span> 表名</span><br><span class="line">这两个语句执行结果都会有<span class="keyword">Comment</span>字段。</span><br></pre></td></tr></table></figure><h1 id="备份"><a href="#备份" class="headerlink" title="备份"></a>备份</h1><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"># 根据条件导出指定表的数据</span><br><span class="line">mysqldump -u root -p -h <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> <span class="comment">--databases dataName --tables tableName --where=&quot; whereParam&quot; &gt; xxx/xxx.sql</span></span><br><span class="line"># 只导出数据</span><br><span class="line">mysqldump -t</span><br><span class="line"># 只导出结构</span><br><span class="line">mysqldump -d</span><br><span class="line"># 忽略指定表导出</span><br><span class="line">mysqldump <span class="comment">--ignore-table=database.tablex --ignore-table=database.tablexx</span></span><br><span class="line"></span><br><span class="line"># 全库备份</span><br><span class="line">[root@linuxidc ~]# mysqldump -uroot -p <span class="comment">--single-transaction -A --master-data=2 &gt;dump.sql</span></span><br><span class="line">只还原erp库的内容</span><br><span class="line">[root@linuxidc ~]# mysql -uroot -pMANAGER erp <span class="comment">--one-database &lt;dump.sql</span></span><br><span class="line">可以看出这里主要用到的参数是<span class="comment">--one-database简写-o的参数，极大方便了我们的恢复灵活性。</span></span><br><span class="line">那么如何从全库备份中抽取某张表呢，全库恢复，再恢复某张表小库还可以，大库就很麻烦了，那我们可以利用正则表达式来进行快速抽取，具体实现方法如下：</span><br><span class="line"></span><br><span class="line"># 从全库备份中抽取出t表的表结构</span><br><span class="line">[root@linuxidc ~]# sed -<span class="string">e&#x27;/./&#123;H;$!d;&#125;&#x27;</span> -e <span class="string">&#x27;x;/CREATE TABLE `t`/!d;q&#x27;</span> dump.<span class="keyword">sql</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span>`t`;</span><br><span class="line"><span class="comment">/*!40101 SET@saved_cs_client    =@@character_set_client */</span>;</span><br><span class="line"><span class="comment">/*!40101 SETcharacter_set_client = utf8 */</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `t` (</span><br><span class="line">  `id` <span class="type">int</span>(<span class="number">10</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  `age` tinyint(<span class="number">4</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span>,</span><br><span class="line">  `<span class="type">name</span>` <span class="type">varchar</span>(<span class="number">30</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY KEY</span> (`id`)</span><br><span class="line">) ENGINE=InnoDBAUTO_INCREMENT=<span class="number">4</span> <span class="keyword">DEFAULT</span> CHARSET=utf8;</span><br><span class="line"><span class="comment">/*!40101 SETcharacter_set_client = @saved_cs_client */</span>;</span><br><span class="line"> </span><br><span class="line"># 从全库备份中抽取出t表的内容</span><br><span class="line">[root@linuxidc ~]# grep<span class="string">&#x27;INSERT INTO `t`&#x27;</span> dump.<span class="keyword">sql</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `t`<span class="keyword">VALUES</span> (<span class="number">0</span>,<span class="number">0</span>,<span class="string">&#x27;&#x27;</span>),(<span class="number">1</span>,<span class="number">0</span>,<span class="string">&#x27;aa&#x27;</span>),(<span class="number">2</span>,<span class="number">0</span>,<span class="string">&#x27;bbb&#x27;</span>),(<span class="number">3</span>,<span class="number">25</span>,<span class="string">&#x27;helei&#x27;</span>);</span><br></pre></td></tr></table></figure><h1 id="表分区"><a href="#表分区" class="headerlink" title="表分区"></a>表分区</h1><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>新建<span class="type">int</span>字段(通过时间字段进行分区，非<span class="type">int</span>类型分区查询会存在bug)，并设置为主键，添加索引。</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> `tableName`</span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">COLUMN</span> `columnName` <span class="type">int</span>(<span class="number">8</span>) <span class="keyword">NULL</span> <span class="keyword">AFTER</span> `gid`,</span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">PRIMARY KEY</span> (` columnName `),</span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">INDEX</span> ` columnName ` (` columnName `) <span class="keyword">USING</span> BTREE ;</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>为字段填充数据</span><br><span class="line"></span><br><span class="line"><span class="number">3.</span>执行分区动作(已年月为单位)</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> tableName <span class="keyword">PARTITION BY RANGE</span>( columnName )</span><br><span class="line">(</span><br><span class="line">  <span class="keyword">PARTITION</span> p_201512 <span class="keyword">VALUES</span> LESS THAN (<span class="number">20160101</span>),</span><br><span class="line">  <span class="keyword">PARTITION</span> p_201601 <span class="keyword">VALUES</span> LESS THAN (<span class="number">20160201</span>),</span><br><span class="line">  <span class="keyword">PARTITION</span> p_201602 <span class="keyword">VALUES</span> LESS THAN (<span class="number">20160301</span>),</span><br><span class="line">  <span class="keyword">PARTITION</span> p_201603 <span class="keyword">VALUES</span> LESS THAN (<span class="number">20160401</span>),</span><br><span class="line">  <span class="keyword">PARTITION</span> p_201604 <span class="keyword">VALUES</span> LESS THAN (<span class="number">20160501</span>),</span><br><span class="line">  <span class="keyword">PARTITION</span> p_201605 <span class="keyword">VALUES</span> LESS THAN (<span class="number">20160601</span>),</span><br><span class="line">  <span class="keyword">PARTITION</span> p_201606 <span class="keyword">VALUES</span> LESS THAN (<span class="number">20160701</span>),</span><br><span class="line">  <span class="keyword">PARTITION</span> p_201607 <span class="keyword">VALUES</span> LESS THAN (<span class="number">20160801</span>),</span><br><span class="line">  <span class="keyword">PARTITION</span> p_201608 <span class="keyword">VALUES</span> LESS THAN (<span class="number">20160901</span>),</span><br><span class="line">  <span class="keyword">PARTITION</span> p_201609 <span class="keyword">VALUES</span> LESS THAN (<span class="number">20161001</span>),</span><br><span class="line">  <span class="keyword">PARTITION</span> p_201610 <span class="keyword">VALUES</span> LESS THAN (<span class="number">20161101</span>),</span><br><span class="line">  <span class="keyword">PARTITION</span> p_201611 <span class="keyword">VALUES</span> LESS THAN (<span class="number">20161201</span>),</span><br><span class="line">  <span class="keyword">PARTITION</span> p_201612 <span class="keyword">VALUES</span> LESS THAN (<span class="number">20170101</span>),</span><br><span class="line">  <span class="keyword">PARTITION</span> p_201701 <span class="keyword">VALUES</span> LESS THAN (<span class="number">20170201</span>),</span><br><span class="line">  <span class="keyword">PARTITION</span> p_201702 <span class="keyword">VALUES</span> LESS THAN (<span class="number">20170301</span>),</span><br><span class="line">  <span class="keyword">PARTITION</span> p_201703 <span class="keyword">VALUES</span> LESS THAN (<span class="number">20170401</span>),</span><br><span class="line">  <span class="keyword">PARTITION</span> p_catch_all <span class="keyword">VALUES</span> LESS THAN <span class="keyword">MAXVALUE</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="number">4.</span>执行查询 (<span class="keyword">where</span>需使用 columnName 才有效)</span><br><span class="line"><span class="keyword">EXPLAIN</span> PARTITIONS <span class="keyword">select</span> * <span class="keyword">from</span> tableName <span class="keyword">where</span> columnName &lt;=<span class="string">&#x27;20160202&#x27;</span> <span class="keyword">and</span> columnName &gt;=<span class="string">&#x27;20160101&#x27;</span>;</span><br></pre></td></tr></table></figure><h1 id="查看log"><a href="#查看log" class="headerlink" title="查看log"></a>查看log</h1><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># 进入数据库后</span></span><br><span class="line"><span class="meta"># 查看binlog</span></span><br><span class="line">show binlog events in &#x27;mysql-bin.<span class="number">000256</span>&#x27;<span class="punctuation">;</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># 查看replylog</span></span><br><span class="line">show replylog events in &#x27;mysql-reply-bin.<span class="number">000256</span>&#x27;<span class="punctuation">;</span></span><br></pre></td></tr></table></figure><h1 id="mysql-s-e无法查询结果"><a href="#mysql-s-e无法查询结果" class="headerlink" title="mysql -s -e无法查询结果"></a>mysql -s -e无法查询结果</h1><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">由于无法识别中文的情况下，可能导致查询结果不对</span><br><span class="line">例如<span class="attribute">name</span>=<span class="string">&#x27;a&#x27;</span>,会没有任何结果</span><br></pre></td></tr></table></figure><h1 id="JOIN-ON和USING"><a href="#JOIN-ON和USING" class="headerlink" title="JOIN ON和USING"></a>JOIN ON和USING</h1><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">JOIN ON A<span class="selector-class">.ID</span> = B<span class="selector-class">.ID</span> 会出现两表都有的字段</span><br><span class="line"><span class="function"><span class="title">USING</span><span class="params">(ID)</span></span> ID为两个表都有的字段。且只会显示第一张表的字段</span><br></pre></td></tr></table></figure><h1 id="select中变量赋值"><a href="#select中变量赋值" class="headerlink" title="select中变量赋值"></a>select中变量赋值</h1><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt;<span class="keyword">select</span> <span class="symbol">@found</span> := <span class="number">10</span><span class="comment">;</span></span><br></pre></td></tr></table></figure><h1 id="查看库总行数"><a href="#查看库总行数" class="headerlink" title="查看库总行数"></a>查看库总行数</h1><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> SUM(TABLE_ROWS) <span class="keyword">from</span> information_schema.<span class="keyword">TABLES</span> <span class="keyword">where</span> TABLE_SCHEMA=<span class="string">&#x27;city_cypher&#x27;</span>;</span><br></pre></td></tr></table></figure><h1 id="查看库表大小"><a href="#查看库表大小" class="headerlink" title="查看库表大小"></a>查看库表大小</h1><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">table_name</span>,round(sum(data_length/<span class="number">1024</span>/<span class="number">1024</span>),<span class="number">2</span>) <span class="keyword">as</span> data <span class="keyword">from</span> information_schema.<span class="keyword">tables</span> <span class="keyword">where</span> table_schema=<span class="string">&#x27;database name&#x27;</span> <span class="keyword">GROUP</span> <span class="keyword">by</span> <span class="built_in">table_name</span> <span class="keyword">order</span> <span class="keyword">by</span> data <span class="keyword">asc</span>;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> mysql </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>提供像访问数组一样访问对象的能力的接口</title>
      <link href="/posts/476587e9.html"/>
      <url>/posts/476587e9.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 提供像访问数组一样访问对象的能力的接口。</span></span><br><span class="line">Class ArrayAccessObj <span class="keyword">implements</span> <span class="built_in">ArrayAccess</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$container</span> = <span class="keyword">array</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;container = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&quot;one&quot;</span>   =&gt; <span class="number">1</span>,</span><br><span class="line">            <span class="string">&quot;two&quot;</span>   =&gt; <span class="number">2</span>,</span><br><span class="line">            <span class="string">&quot;three&quot;</span> =&gt; <span class="number">3</span>,</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">offsetSet</span> (<span class="params"><span class="variable">$offset</span>,<span class="variable">$value</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">is_null</span>(<span class="variable">$offset</span>)) &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;container[] = <span class="variable">$value</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;container[<span class="variable">$offset</span>] = <span class="variable">$value</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">offsetExists</span> (<span class="params"><span class="variable">$offset</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">isset</span>(<span class="variable language_">$this</span>-&gt;container[<span class="variable">$offset</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">offsetUnset</span> (<span class="params"><span class="variable">$offset</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">unset</span>(<span class="variable language_">$this</span>-&gt;container[<span class="variable">$offset</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">offsetGet</span> (<span class="params"><span class="variable">$offset</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">isset</span>(<span class="variable language_">$this</span>-&gt;container[<span class="variable">$offset</span>]) ? <span class="variable language_">$this</span>-&gt;container[<span class="variable">$offset</span>] : <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$obj</span> = <span class="keyword">new</span> <span class="title class_">ArrayAccessObj</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">//var_dump(isset($obj[&quot;two&quot;]));</span></span><br><span class="line"><span class="comment">//var_dump($obj[&quot;two&quot;]);</span></span><br><span class="line"><span class="comment">//unset($obj[&quot;two&quot;]);</span></span><br><span class="line"><span class="comment">//var_dump(isset($obj[&quot;two&quot;]));</span></span><br><span class="line"><span class="comment">//$obj[&quot;two&quot;] = &quot;A value&quot;;</span></span><br><span class="line"><span class="comment">//var_dump($obj[&quot;two&quot;]);</span></span><br><span class="line"><span class="variable">$obj</span>[] = <span class="string">&#x27;Append 1&#x27;</span>;</span><br><span class="line"><span class="variable">$obj</span>[] = <span class="string">&#x27;Append 2&#x27;</span>;</span><br><span class="line"><span class="variable">$obj</span>[] = <span class="string">&#x27;Append 3&#x27;</span>;</span><br><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="variable">$obj</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>协同yield</title>
      <link href="/posts/a51fc8aa.html"/>
      <url>/posts/a51fc8aa.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">gen</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="variable">$ret</span> = (<span class="keyword">yield</span> <span class="string">&#x27;yield1&#x27;</span>);</span><br><span class="line">    <span class="title function_ invoke__">var_dump</span>(<span class="variable">$ret</span>);</span><br><span class="line">    <span class="variable">$ret</span> = (<span class="keyword">yield</span> <span class="string">&#x27;yield2&#x27;</span>);</span><br><span class="line">    <span class="title function_ invoke__">var_dump</span>(<span class="variable">$ret</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$gen</span> = <span class="title function_ invoke__">gen</span>();</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$gen</span>-&gt;<span class="title function_ invoke__">current</span>());    <span class="comment">// string(6) &quot;yield1&quot;</span></span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$gen</span>-&gt;<span class="title function_ invoke__">send</span>(<span class="string">&#x27;ret1&#x27;</span>)); <span class="comment">// string(4) &quot;ret1&quot;   (the first var_dump in gen)</span></span><br><span class="line"><span class="comment">// string(6) &quot;yield2&quot; (the var_dump of the -&gt;send() return value)</span></span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$gen</span>-&gt;<span class="title function_ invoke__">send</span>(<span class="string">&#x27;ret2&#x27;</span>)); <span class="comment">// string(4) &quot;ret2&quot;   (again from within gen)</span></span><br><span class="line"><span class="comment">// NULL               (the return value of -&gt;send())</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>xml转数组</title>
      <link href="/posts/c0debf31.html"/>
      <url>/posts/c0debf31.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 类型转换</span></span><br><span class="line"><span class="comment"> * Class TypeChange</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TypeChange</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * xml转为数组</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $xml</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> array</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">xmlToArray</span>(<span class="params"><span class="variable">$xml</span></span>) </span>&#123;</span><br><span class="line">        <span class="comment">//禁止引用外部xml实体</span></span><br><span class="line">        <span class="title function_ invoke__">libxml_disable_entity_loader</span>(<span class="literal">true</span>);</span><br><span class="line">        <span class="variable">$array</span> = <span class="title function_ invoke__">json_decode</span>(<span class="title function_ invoke__">json_encode</span>(<span class="title function_ invoke__">simplexml_load_string</span>(<span class="variable">$xml</span>, <span class="string">&#x27;SimpleXMLElement&#x27;</span>, LIBXML_NOCDATA)), <span class="literal">true</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$array</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php 缓存查询与非缓存查询(处理大数据)</title>
      <link href="/posts/c64f7adf.html"/>
      <url>/posts/c64f7adf.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//缓存查询:php默认的查询方式，查询数据结果会一次全部提取到内存。</span></span><br><span class="line"><span class="comment">//非内存查询:数据库服务i去会一条一条的返回数据，这样的结果就是php程序消耗较少的内存，当会增加数据库服务器的压力，因为数据库会一直等待php来取数据，一直到数据全部取完。</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// 缓存查询适合小数据量的查询，非缓存查询适合大数据查询。</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//非缓存查询方法一：mysqli</span></span><br><span class="line"><span class="variable">$mysqli</span> = <span class="keyword">new</span> <span class="title function_ invoke__">mysqli</span>(<span class="string">&quot;localhost&quot;</span>,<span class="string">&quot;my_user&quot;</span>,<span class="string">&quot;my_pwd&quot;</span>,<span class="string">&quot;dbname&quot;</span>);</span><br><span class="line"><span class="variable">$uresult</span> = <span class="variable">$mysqli</span>-&gt;<span class="title function_ invoke__">query</span>(<span class="string">&quot;select * from table&quot;</span>,MYSQL_USER_RESULT);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$uresult</span>)&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="variable">$row</span> = <span class="variable">$uresule</span>-&gt;<span class="title function_ invoke__">fetch_assoc</span>())&#123;</span><br><span class="line">        <span class="keyword">echo</span>  <span class="variable">$row</span>[<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$uresule</span>-&gt;<span class="title function_ invoke__">close</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">//非缓存查询方法二：mysql</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//注释：mysql_unbuffered_query()的好处是有代价的：在mysql_unbuffered_query()返回的结果集之上不能使用</span></span><br><span class="line"><span class="comment">//mysql_num_rows()和mysql_data_seek()。此外在向MYSQL发送一条新的SQL查询之前，必须提取所有未缓存的</span></span><br><span class="line"><span class="comment">//SQL查询所产生的结果行。</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$coon</span> = <span class="title function_ invoke__">mysql_connect</span>(<span class="string">&quot;localhost&quot;</span>,<span class="string">&quot;my_user&quot;</span>,<span class="string">&quot;my_pwd&quot;</span>);</span><br><span class="line"><span class="variable">$db</span> = <span class="title function_ invoke__">mysql_select_db</span>(<span class="string">&quot;dbname&quot;</span>);</span><br><span class="line"><span class="variable">$uresule</span> = <span class="title function_ invoke__">mysql_unbuffered_query</span>(<span class="string">&quot;select * from table&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$uresult</span>)&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="variable">$row</span> = <span class="variable">$uresule</span>-&gt;<span class="title function_ invoke__">fetch_assoc</span>(<span class="variable">$uresult</span>))&#123;</span><br><span class="line">        <span class="keyword">echo</span>  <span class="variable">$row</span>[<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//非缓存查询方法三:pdo_mysql</span></span><br><span class="line"><span class="variable">$pdo</span> = <span class="keyword">new</span> <span class="title function_ invoke__">PDO</span>(<span class="string">&quot;mysql:localhost;dbname=dbname&quot;</span>, <span class="string">&quot;my_user&quot;</span>, <span class="string">&quot;my_pwd&quot;</span>);</span><br><span class="line"><span class="variable">$pdo</span>-&gt;<span class="title function_ invoke__">setAttribute</span>(PDO::<span class="variable constant_">MYSQL_ATTR_USE_BUFFERED_QUERY</span>,<span class="literal">false</span>);</span><br><span class="line"><span class="variable">$uresule</span> = <span class="variable">$pdo</span>-&gt;<span class="title function_ invoke__">query</span>(<span class="string">&quot;select * from table&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$uresule</span>)&#123;</span><br><span class="line">      <span class="keyword">while</span>(<span class="variable">$row</span> = <span class="variable">$uresule</span>-&gt;<span class="title function_ invoke__">fetch</span>(PDO::<span class="variable constant_">FETCH_ASSOC</span>))&#123;</span><br><span class="line">               <span class="keyword">echo</span>  <span class="variable">$row</span>[<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>反射类获取class下源码</title>
      <link href="/posts/226a5c44.html"/>
      <url>/posts/226a5c44.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 反射类获取class下的源码</span></span><br><span class="line"><span class="comment"> * Class reflectionUtil</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ReflectionUtil</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">getClassSourse</span>(<span class="params"> ReflectionClass <span class="variable">$class</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$path</span> = <span class="variable">$class</span>-&gt;<span class="title function_ invoke__">getFileName</span>();</span><br><span class="line">        <span class="variable">$lines</span> = @<span class="title function_ invoke__">file</span>(<span class="variable">$path</span>);</span><br><span class="line">        <span class="variable">$from</span> = <span class="variable">$class</span>-&gt;<span class="title function_ invoke__">getStartLine</span>();</span><br><span class="line">        <span class="variable">$to</span> = <span class="variable">$class</span>-&gt;<span class="title function_ invoke__">getEndLine</span>();</span><br><span class="line">        <span class="variable">$len</span> = <span class="variable">$to</span>-<span class="variable">$from</span>+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">implode</span>(<span class="title function_ invoke__">array_slice</span>(<span class="variable">$lines</span>, <span class="variable">$from</span>-<span class="number">1</span>,<span class="variable">$len</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Class className &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">hello</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;hello&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="title class_">ReflectionUtil</span>::<span class="title function_ invoke__">getClassSourse</span>( <span class="keyword">new</span> <span class="title class_">ReflectionClass</span>(<span class="string">&#x27;ClassName&#x27;</span>)));</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>排序算法</title>
      <link href="/posts/735e5788.html"/>
      <url>/posts/735e5788.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">sortClass</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Array Order</span></span><br><span class="line"><span class="comment">     * 二维数组排序函数</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span>   array $array 要排序的数组</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span>   string $field 要排序的字段名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span>   string $sortOrder 排序方式（默认升序）</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span>   string $sortOrder 排序类型（默认数组类型）</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span>  array</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">arraySort</span>(<span class="params"><span class="variable">$Array</span>, <span class="variable">$Field</span>, <span class="variable">$sortOrder</span> = SORT_ASC, <span class="variable">$sortFlags</span> = SORT_NUMERIC</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$Array</span> <span class="keyword">as</span> <span class="variable">$vo</span>) &#123;</span><br><span class="line">            <span class="variable">$t</span>[] = <span class="variable">$vo</span>[<span class="variable">$Field</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="title function_ invoke__">array_multisort</span>(<span class="variable">$t</span>, <span class="variable">$sortOrder</span>, <span class="variable">$sortFlags</span>, <span class="variable">$Array</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$Array</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 二维数组排序函数,保留键值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> array $array 要排序的数组</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $key 用来排序的键名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $type 默认为升序排序</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> array</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">array_sort</span>(<span class="params"><span class="variable">$array</span>, <span class="variable">$key</span>, <span class="variable">$type</span> = <span class="string">&#x27;asc&#x27;</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$keysValue</span> = <span class="variable">$newArray</span> = <span class="keyword">array</span>();</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$array</span> <span class="keyword">as</span> <span class="variable">$k</span> =&gt; <span class="variable">$v</span>) &#123;</span><br><span class="line">            <span class="variable">$keysValue</span>[<span class="variable">$k</span>] = <span class="variable">$v</span>[<span class="variable">$key</span>];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$type</span> == <span class="string">&#x27;asc&#x27;</span>) &#123;</span><br><span class="line">            <span class="title function_ invoke__">asort</span>(<span class="variable">$keysValue</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="title function_ invoke__">arsort</span>(<span class="variable">$keysValue</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="title function_ invoke__">reset</span>(<span class="variable">$keysValue</span>);</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$keysValue</span> <span class="keyword">as</span> <span class="variable">$k</span> =&gt; <span class="variable">$v</span>) &#123;</span><br><span class="line">            <span class="variable">$newArray</span>[<span class="variable">$k</span>] = <span class="variable">$array</span>[<span class="variable">$k</span>];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$newArray</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 数组中抽取出键为$field，单独成为一个数组作为多维数组的排序</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> array $array 需要排序的数组</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string $field 指定排序的键值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getSortArr</span>(<span class="params">&amp;<span class="variable">$array</span>,<span class="variable">$field</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$fieldArr</span> = <span class="keyword">array</span>();</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$array</span> <span class="keyword">as</span> <span class="variable">$key</span>=&gt;<span class="variable">$value</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="title function_ invoke__">array_key_exists</span>(<span class="variable">$field</span>, <span class="variable">$value</span>))&#123;</span><br><span class="line">                <span class="variable">$fieldArr</span>[] = <span class="variable">$value</span>[<span class="variable">$field</span>];</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">getSortArr</span>(<span class="variable">$value</span>,<span class="variable">$field</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">actionTest</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$array</span> = <span class="variable">$field</span> = <span class="keyword">array</span>();<span class="comment">//需要排序的数组</span></span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">getSortArr</span>(<span class="variable">$array</span>, <span class="variable">$field</span>);<span class="comment">//数组中抽取出键为$field，单独成为一个数组</span></span><br><span class="line">        <span class="title function_ invoke__">array_multisort</span>(<span class="variable">$fieldArr</span>, SORT_ASC, <span class="variable">$array</span>);<span class="comment">//进行排序</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;pre&gt;&quot;</span>;</span><br><span class="line">        <span class="title function_ invoke__">var_dump</span>(<span class="variable">$array</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;/pre&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 冒泡排序</span></span><br><span class="line"><span class="comment">     * 比较相邻的元素。如果第一个比第二个大，就交换他们两个。</span></span><br><span class="line"><span class="comment">     * 对每一对相邻元素作同样的工作，从开始第一对到结尾的最后一对。在这一点，最后的元素应该会是最大的数。</span></span><br><span class="line"><span class="comment">     * 针对所有的元素重复以上的步骤，除了最后一个。</span></span><br><span class="line"><span class="comment">     * 持续每次对越来越少的元素重复上面的步骤，直到没有任何一对数字需要比较。</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $arr</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">bubble</span>(<span class="params"><span class="variable">$arr</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$len</span> = <span class="title function_ invoke__">count</span>(<span class="variable">$arr</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$len</span> - <span class="number">1</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="variable">$j</span> = <span class="number">0</span>; <span class="variable">$j</span> &lt; <span class="variable">$len</span> - <span class="number">1</span> - <span class="variable">$i</span>; <span class="variable">$j</span>++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="variable">$arr</span>[<span class="variable">$j</span>] &gt; <span class="variable">$arr</span>[<span class="variable">$j</span> + <span class="number">1</span>]) &#123;</span><br><span class="line">                    <span class="variable">$temp</span> = <span class="variable">$arr</span>[<span class="variable">$j</span>];</span><br><span class="line">                    <span class="variable">$arr</span>[<span class="variable">$j</span>] = <span class="variable">$arr</span>[<span class="variable">$j</span> + <span class="number">1</span>];</span><br><span class="line">                    <span class="variable">$arr</span>[<span class="variable">$j</span> + <span class="number">1</span>] = <span class="variable">$temp</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$arr</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 快速排序</span></span><br><span class="line"><span class="comment">     * 从数列中挑出一个元素，称为 “基准”（pivot），</span></span><br><span class="line"><span class="comment">     * 重新排序数列，所有元素比基准值小的摆放在基准前面，所有元素比基准值大的摆在基准的后面（相同的数可以到任一边）。</span></span><br><span class="line"><span class="comment">     * 在这个分区退出之后，该基准就处于数列的中间位置。这个称为分区（partition）操作。</span></span><br><span class="line"><span class="comment">     * 递归地（recursive）把小于基准值元素的子数列和大于基准值元素的子数列排序。</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $arr</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">quick</span>(<span class="params"><span class="variable">$arr</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$len</span> = <span class="title function_ invoke__">count</span>(<span class="variable">$arr</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$len</span> &lt;= <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$arr</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$baseNum</span> = <span class="variable">$arr</span>[<span class="number">0</span>];</span><br><span class="line">        <span class="variable">$leftArray</span> = <span class="variable">$rightArray</span> = [];</span><br><span class="line">        <span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">1</span>; <span class="variable">$i</span> &lt; <span class="variable">$len</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$baseNum</span> &gt; <span class="variable">$arr</span>[<span class="variable">$i</span>]) &#123;</span><br><span class="line">                <span class="variable">$leftArray</span>[] = <span class="variable">$arr</span>[<span class="variable">$i</span>];</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$rightArray</span>[] = <span class="variable">$arr</span>[<span class="variable">$i</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$leftArray</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">quick</span>(<span class="variable">$leftArray</span>);</span><br><span class="line">        <span class="variable">$rightArray</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">quick</span>(<span class="variable">$rightArray</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">array_merge</span>(<span class="variable">$leftArray</span>, <span class="keyword">array</span>(<span class="variable">$baseNum</span>), <span class="variable">$rightArray</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 选择排序</span></span><br><span class="line"><span class="comment">     * 首先在未排序序列中找到最小元素，存放到排序序列的起始位置，</span></span><br><span class="line"><span class="comment">     * 然后，再从剩余未排序元素中继续寻找最小元素，</span></span><br><span class="line"><span class="comment">     * 然后放到排序序列末尾。以此类推，直到所有元素均排序完毕。</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $arr</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">select</span>(<span class="params"><span class="variable">$arr</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// 外层控制次数 内层控制次数</span></span><br><span class="line">        <span class="variable">$len</span> = <span class="title function_ invoke__">count</span>(<span class="variable">$arr</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$len</span> - <span class="number">1</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="comment">// 设置最小值的位置</span></span><br><span class="line">            <span class="variable">$p</span> = <span class="variable">$i</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="variable">$j</span> = <span class="variable">$i</span> + <span class="number">1</span>; <span class="variable">$j</span> &lt; <span class="variable">$len</span>; <span class="variable">$j</span>++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="variable">$arr</span>[<span class="variable">$p</span>] &gt; <span class="variable">$arr</span>[<span class="variable">$j</span>]) &#123;</span><br><span class="line">                    <span class="comment">// 发现更小的值, 修改最小的值的位置</span></span><br><span class="line">                    <span class="variable">$p</span> = <span class="variable">$j</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$p</span> != <span class="variable">$i</span>) &#123;</span><br><span class="line">                <span class="variable">$temp</span> = <span class="variable">$arr</span>[<span class="variable">$p</span>];</span><br><span class="line">                <span class="variable">$arr</span>[<span class="variable">$p</span>] = <span class="variable">$arr</span>[<span class="variable">$i</span>];</span><br><span class="line">                <span class="variable">$arr</span>[<span class="variable">$i</span>] = <span class="variable">$temp</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$arr</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 插入排序</span></span><br><span class="line"><span class="comment">     * 从第一个元素开始，该元素可以认为已经被排序</span></span><br><span class="line"><span class="comment">     * 取出下一个元素，在已经排序的元素序列中从后向前扫描</span></span><br><span class="line"><span class="comment">     * 如果该元素（已排序）大于新元素，将该元素移到下一位置</span></span><br><span class="line"><span class="comment">     * 重复步骤3，直到找到已排序的元素小于或者等于新元素的位置</span></span><br><span class="line"><span class="comment">     * 将新元素插入到该位置中</span></span><br><span class="line"><span class="comment">     * 重复步骤2</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $arr</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">insert</span>(<span class="params"><span class="variable">$arr</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$len</span> = <span class="title function_ invoke__">count</span>(<span class="variable">$arr</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">1</span>; <span class="variable">$i</span> &lt; <span class="variable">$len</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$temp</span> = <span class="variable">$arr</span>[<span class="variable">$i</span>];</span><br><span class="line">            <span class="keyword">for</span> (<span class="variable">$j</span> = <span class="variable">$i</span> - <span class="number">1</span>; <span class="variable">$j</span> &gt;= <span class="number">0</span>; <span class="variable">$j</span>--) &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="variable">$temp</span> &lt; <span class="variable">$arr</span>[<span class="variable">$j</span>]) &#123;</span><br><span class="line">                    <span class="variable">$arr</span>[<span class="variable">$j</span> + <span class="number">1</span>] = <span class="variable">$arr</span>[<span class="variable">$j</span>];</span><br><span class="line">                    <span class="variable">$arr</span>[<span class="variable">$j</span>] = <span class="variable">$temp</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$arr</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 二分查找 要求线性表必须采用顺序存储结构，而且表中元素按关键字有序排列。</span></span><br><span class="line"><span class="comment">     * 先取数组中间的值floor((low+top)/2),</span></span><br><span class="line"><span class="comment">     * 然后通过与所需查找的数字进行比较，若比中间值大，则将首值替换为中间位置下一个位置，继续第一步的操作；</span></span><br><span class="line"><span class="comment">     * 若比中间值小，则将尾值替换为中间位置上一个位置，继续第一步操作</span></span><br><span class="line"><span class="comment">     * 重复第二步操作直至找出目标数字</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $arr</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $low</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $top</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $target</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> int</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">binary</span>(<span class="params">&amp;<span class="variable">$arr</span>, <span class="variable">$low</span>, <span class="variable">$top</span>, <span class="variable">$target</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">while</span> (<span class="variable">$low</span> &lt;= <span class="variable">$top</span>) &#123;</span><br><span class="line">            <span class="variable">$mid</span> = <span class="title function_ invoke__">intval</span>((<span class="variable">$low</span> + <span class="variable">$top</span>) / <span class="number">2</span>);</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$arr</span>[<span class="variable">$mid</span>] == <span class="variable">$target</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="variable">$mid</span>;</span><br><span class="line">            &#125; <span class="keyword">elseif</span> (<span class="variable">$arr</span>[<span class="variable">$mid</span>] &lt; <span class="variable">$target</span>) &#123;</span><br><span class="line">                <span class="variable">$low</span> = <span class="variable">$mid</span> + <span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$top</span> = <span class="variable">$mid</span> - <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搜索引擎字符串处理</title>
      <link href="/posts/340c4b8f.html"/>
      <url>/posts/340c4b8f.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(E_ERROR);</span><br><span class="line"><span class="variable">$input</span>=<span class="string">&quot;php -销售  +客服   + java      平面,美工 酒店 ,汽车&quot;</span>;</span><br><span class="line"><span class="variable">$input</span>=<span class="string">&quot;php +销售  +客服   + java      平面,美工 酒店 ,汽车&quot;</span>;</span><br><span class="line"><span class="variable">$input</span>=<span class="string">&quot;++--php -,销售  -,-+,+客服   +, java      平面,美工 酒店 ,汽车--++|&quot;</span>;</span><br><span class="line"><span class="variable">$input</span>=<span class="string">&quot;++--php -,销售  -,-+,+\&quot;客服\&quot;   +, java      平面,美工 酒店 ,汽车--++| &quot;</span>;</span><br><span class="line"><span class="comment">/*将其转化成</span></span><br><span class="line"><span class="comment">+&quot;php&quot;-&quot;销售&quot;+&quot;客服&quot;+&quot;java&quot;|&quot;平面&quot;|&quot;美工&quot;|&quot;酒店&quot;|&quot;汽车&quot;</span></span><br><span class="line"><span class="comment">注意，$input中的空格是不定长的</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="variable">$t1</span>=<span class="title function_ invoke__">microtime</span>(<span class="literal">true</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="number">1000</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">    <span class="variable">$s</span>=<span class="title function_ invoke__">queryFormat</span>(<span class="variable">$input</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$t2</span>=<span class="title function_ invoke__">microtime</span>(<span class="literal">true</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;<span class="subst">$s</span>&lt;br&gt;&quot;</span>.(<span class="variable">$t2</span>-<span class="variable">$t1</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*只写函数体，上面的内容不要改变*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">queryFormat</span>(<span class="params"><span class="variable">$input</span></span>)</span>&#123;</span><br><span class="line">    <span class="comment">// 只获取指定类型数据</span></span><br><span class="line">    <span class="variable">$input</span> = <span class="title function_ invoke__">preg_replace</span>(<span class="string">&quot;/([^\x&#123;4e00&#125;-\x&#123;9fa5&#125;A-Za-z0-9-+]+)/u&quot;</span>, <span class="string">&#x27; &#x27;</span>, <span class="variable">$input</span>);</span><br><span class="line">    <span class="comment">// |,只匹配逗号</span></span><br><span class="line">    <span class="variable">$input</span> = <span class="title function_ invoke__">preg_replace</span>(<span class="string">&quot;/(\-|\+)(\+|\-|,|\s)*/u&quot;</span>, <span class="string">&#x27;$&#123;1&#125;&#x27;</span>, <span class="variable">$input</span>);</span><br><span class="line">    <span class="variable">$input</span> = <span class="title function_ invoke__">preg_replace</span>(<span class="string">&quot;/([\x&#123;4e00&#125;-\x&#123;9fa5&#125;A-Za-z0-9]+)/u&quot;</span>, <span class="string">&#x27;&quot;$&#123;1&#125;&quot;&#x27;</span>, <span class="variable">$input</span>);</span><br><span class="line">    <span class="variable">$input</span> = <span class="title function_ invoke__">preg_replace</span>(<span class="string">&quot;/(\&quot;)+(\s)+(\&quot;)+/u&quot;</span>, <span class="string">&#x27;&quot;|&quot;&#x27;</span>, <span class="variable">$input</span>);</span><br><span class="line">    <span class="variable">$input</span> = <span class="title function_ invoke__">preg_replace</span>(<span class="string">&quot;/\s+/&quot;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$input</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$input</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>导出excel</title>
      <link href="/posts/1f70a410.html"/>
      <url>/posts/1f70a410.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">Class excelExport</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 导出excel</span></span><br><span class="line"><span class="comment">     * windows默认为ASNI编码。当遇到一个字符串，不是unicode的时候，就用默认语言编码解释。</span></span><br><span class="line"><span class="comment">     * 如果出现中文乱码，使用ASNI编码尝试.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">export</span>(<span class="params"><span class="variable">$v</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$data</span> = <span class="string">&quot;ID,年月,商家,当月待收款&quot;</span> . <span class="string">&quot;\n&quot;</span>;<span class="comment">//表头</span></span><br><span class="line">        <span class="variable">$data</span> .= <span class="variable">$v</span>[<span class="string">&#x27;rece&#x27;</span>][<span class="string">&#x27;id&#x27;</span>] . <span class="string">&quot;,&quot;</span> . <span class="variable">$v</span>[<span class="string">&#x27;rece&#x27;</span>][<span class="string">&#x27;pay_date&#x27;</span>] . <span class="string">&quot;,&quot;</span> . <span class="variable">$v</span>[<span class="string">&#x27;vend_org&#x27;</span>][<span class="string">&#x27;org_name&#x27;</span>] . <span class="string">&quot;,&quot;</span> . <span class="variable">$v</span>[<span class="string">&#x27;rece&#x27;</span>][<span class="string">&#x27;pay_amt&#x27;</span>] . <span class="string">&quot;\n&quot;</span>;<span class="comment">//表身数据</span></span><br><span class="line">        <span class="variable">$name</span> = <span class="title function_ invoke__">iconv</span>(<span class="string">&#x27;utf-8&#x27;</span>, <span class="string">&#x27;gb2312&#x27;</span>, <span class="string">&#x27;filename&#x27;</span>);</span><br><span class="line">        <span class="variable">$filename</span> = <span class="variable">$name</span> . <span class="title function_ invoke__">date</span>(<span class="string">&#x27;Ymd&#x27;</span>, <span class="title function_ invoke__">time</span>()) . <span class="string">&quot;.csv&quot;</span>;</span><br><span class="line">        <span class="title function_ invoke__">header</span>(<span class="string">&quot;Content-type:text/csv; charset=utf-8&quot;</span>);</span><br><span class="line">        <span class="title function_ invoke__">header</span>(<span class="string">&quot;Content-Disposition:attachment;filename=&quot;</span> . <span class="variable">$filename</span>);</span><br><span class="line">        <span class="title function_ invoke__">header</span>(<span class="string">&#x27;Cache-Control:must-revalidate,post-check=0,pre-check=0&#x27;</span>);</span><br><span class="line">        <span class="title function_ invoke__">header</span>(<span class="string">&#x27;Expires:0&#x27;</span>);</span><br><span class="line">        <span class="title function_ invoke__">header</span>(<span class="string">&#x27;Pragma:public&#x27;</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$data</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文件二进制输出</title>
      <link href="/posts/f7a6ead2.html"/>
      <url>/posts/f7a6ead2.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 文件二进制输出</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="variable">$fileName</span>=<span class="string">&quot;a.txt&quot;</span>;</span><br><span class="line"><span class="variable">$handle</span>=<span class="title function_ invoke__">fopen</span>(<span class="variable">$fileName</span>,<span class="string">&quot;r&quot;</span>);<span class="comment">//使用打开模式为r</span></span><br><span class="line"><span class="variable">$content</span>=<span class="title function_ invoke__">fread</span>(<span class="variable">$handle</span>,<span class="title function_ invoke__">filesize</span>(<span class="variable">$fileName</span>));<span class="comment">//读为二进制</span></span><br><span class="line"><span class="variable">$hex</span> = <span class="title function_ invoke__">bin2hex</span>(<span class="variable">$content</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="title function_ invoke__">strlen</span>(<span class="variable">$hex</span>); <span class="variable">$i</span> = <span class="variable">$i</span>+<span class="number">2</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$i</span> != <span class="number">0</span> &amp;&amp; <span class="variable">$i</span> % <span class="number">16</span> == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">substr</span>(<span class="variable">$hex</span>, <span class="variable">$i</span>, <span class="number">2</span>).<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>杨辉三角</title>
      <link href="/posts/4ee864f8.html"/>
      <url>/posts/4ee864f8.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 杨会三角</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> $n</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> $k</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> int</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">bio</span>(<span class="params"><span class="variable">$n</span>, <span class="variable">$k</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$k</span> == <span class="number">1</span> || <span class="variable">$n</span> == <span class="variable">$k</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">bio</span>(<span class="variable">$n</span>-<span class="number">1</span>, <span class="variable">$k</span>) + <span class="title function_ invoke__">bio</span>(<span class="variable">$n</span>-<span class="number">1</span>, <span class="variable">$k</span>-<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">yanghui</span>(<span class="params"><span class="variable">$row</span>=<span class="number">5</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">1</span>; <span class="variable">$i</span> &lt; <span class="variable">$row</span>+<span class="number">1</span>; ++<span class="variable">$i</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$j</span> = <span class="number">1</span>; <span class="variable">$j</span> &lt;= <span class="variable">$i</span>; ++<span class="variable">$j</span>)</span><br><span class="line">            <span class="keyword">echo</span> <span class="title function_ invoke__">bio</span>(<span class="variable">$i</span>, <span class="variable">$j</span>).<span class="string">&quot;&amp;nbsp;&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">yanghui</span>(<span class="number">5</span>);<span class="comment">//输出5行 ;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>类中使用回调</title>
      <link href="/posts/5e9f4fa3.html"/>
      <url>/posts/5e9f4fa3.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 类中使用回调</span></span><br><span class="line"><span class="comment"> * Class callbackTest</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">callbackTest</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">test</span> (<span class="params"><span class="variable">$array</span></span>) </span>&#123;</span><br><span class="line">        <span class="comment">// 调用自身方法$this，调用指定class的方法[&#x27;指定class&#x27;]</span></span><br><span class="line">        <span class="title function_ invoke__">array_reduce</span>(<span class="variable">$array</span>, [<span class="variable">$this</span>, <span class="string">&#x27;callback&#x27;</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">callback</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="comment">//pass</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>生成指定位数的随机数</title>
      <link href="/posts/1fcb6e41.html"/>
      <url>/posts/1fcb6e41.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 生成指定位数的随机数</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> int $length</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> int</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">generate_code</span>(<span class="params"><span class="variable">$length</span> = <span class="number">4</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">rand</span>(<span class="title function_ invoke__">pow</span>(<span class="number">10</span>,(<span class="variable">$length</span>-<span class="number">1</span>)), <span class="title function_ invoke__">pow</span>(<span class="number">10</span>,<span class="variable">$length</span>)-<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>获取类以及内部方法的注释</title>
      <link href="/posts/6017eac7.html"/>
      <url>/posts/6017eac7.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * php获取类以及内部方法的注释</span></span><br><span class="line"><span class="comment"> * This is an Example class</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Example</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * This is an example function</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@array</span> array</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// void</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@This</span> is an a function</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> string</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// void</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取class注释和方法的注释</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@response</span> array</span></span><br><span class="line"><span class="comment"> * Array</span></span><br><span class="line"><span class="comment">(</span></span><br><span class="line"><span class="comment">[funcName] =&gt; Array</span></span><br><span class="line"><span class="comment">(</span></span><br><span class="line"><span class="comment">[0] =&gt; param string</span></span><br><span class="line"><span class="comment">[1] =&gt; array array</span></span><br><span class="line"><span class="comment">)</span></span><br><span class="line"><span class="comment">)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getDocCommentParams</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$class</span> = <span class="string">&#x27;Example&#x27;</span>;<span class="comment">//类的名字</span></span><br><span class="line">    <span class="variable">$reflector</span> = <span class="keyword">new</span> <span class="title class_">ReflectionClass</span>(<span class="variable">$class</span>);<span class="comment">//</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// to get the Class DocBlock</span></span><br><span class="line">    <span class="variable">$methods</span> = <span class="variable">$reflector</span>-&gt;<span class="title function_ invoke__">getMethods</span>();</span><br><span class="line">    <span class="keyword">foreach</span>(<span class="variable">$methods</span> <span class="keyword">as</span> <span class="variable">$value</span>)&#123;</span><br><span class="line">        <span class="variable">$funcName</span>[] = (<span class="keyword">array</span>)<span class="variable">$value</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">foreach</span>(<span class="variable">$funcName</span> <span class="keyword">as</span> <span class="variable">$value</span>)&#123;</span><br><span class="line">        <span class="comment">// to get the Method DocBlock</span></span><br><span class="line">        <span class="variable">$doc</span> = <span class="variable">$reflector</span>-&gt;<span class="title function_ invoke__">getMethod</span>(<span class="variable">$value</span>[<span class="string">&#x27;name&#x27;</span>])-&gt;<span class="title function_ invoke__">getDocComment</span>();<span class="comment">//获取class内的方法的注释 $value[&#x27;name&#x27;]方法的名字</span></span><br><span class="line">        <span class="variable">$falg</span> = <span class="title function_ invoke__">matchDocComment</span>(<span class="variable">$doc</span>,<span class="variable">$value</span>[<span class="string">&#x27;name&#x27;</span>],<span class="string">&#x27;@&#x27;</span>);<span class="comment">//方法注释中的参数</span></span><br><span class="line">        <span class="title function_ invoke__">print_r</span>(<span class="variable">$falg</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$reflector</span>-&gt;<span class="title function_ invoke__">getDocComment</span>();<span class="comment">//获取class的注释</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 通过正则获取参数：<span class="doctag">@param</span> string -&gt; echo param string</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@str</span> string 注释内容</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@tag</span> string 匹配的数据</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">matchDocComment</span>(<span class="params"><span class="variable">$str</span>, <span class="variable">$methodName</span>, <span class="variable">$tag</span> = <span class="string">&#x27;&#x27;</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable">$tag</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$str</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$matches</span> = <span class="keyword">array</span>();</span><br><span class="line">    <span class="title function_ invoke__">preg_match_all</span>(<span class="string">&quot;/&quot;</span>.<span class="variable">$tag</span>.<span class="string">&quot;(.*)(\\r\\n|\\r|\\n)/&quot;</span>, <span class="variable">$str</span>, <span class="variable">$matches</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$matches</span>[<span class="number">1</span>]))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">foreach</span>(<span class="variable">$matches</span>[<span class="number">1</span>] <span class="keyword">as</span> <span class="variable">$param</span>)&#123;</span><br><span class="line">            <span class="variable">$params</span>[<span class="variable">$methodName</span>][] = <span class="title function_ invoke__">trim</span>(<span class="variable">$param</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$params</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>错误与异常处理</title>
      <link href="/posts/4fe082bb.html"/>
      <url>/posts/4fe082bb.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="PHP错误与异常处理"><a href="#PHP错误与异常处理" class="headerlink" title="PHP错误与异常处理"></a>PHP错误与异常处理</h1><p>没有特殊说明：本例 PHP Version &lt; 7<br>说起PHP异常处理，大家首先会想到try-catch，那好，我们先看一段程序吧：有一个test.php文件，有一段简单的PHP程序，内容如下，然后命令行执行：php test.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$num</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">         <span class="keyword">echo</span> <span class="number">1</span>/<span class="variable">$num</span>;</span><br><span class="line">    </span><br><span class="line">     &#125; <span class="keyword">catch</span> (<span class="built_in">Exception</span> <span class="variable">$e</span>)&#123;</span><br><span class="line">         <span class="keyword">echo</span> <span class="variable">$e</span>-&gt;<span class="title function_ invoke__">getMessage</span>();</span><br><span class="line">     &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><ul><li>一、异常与错误的概述</li><li>二、ERROR的级别</li><li>三、PHP异常处理中的黑科技</li><li>四、巧妙的捕获错误和异常</li><li>五、自定义异常处理和异常嵌套</li><li>六、PHP7中的异常处理</li></ul><h2 id="一、异常与错误的概述"><a href="#一、异常与错误的概述" class="headerlink" title="一、异常与错误的概述"></a>一、异常与错误的概述</h2><p>   PHP中什么是异常：<br>   程序在运行中出现不符合预期的情况，允许发生（你也不想让他出现不正常的情况）但他是一种不正常的情况，按照我们的正常逻辑本不该出的错误，<br>   但仍然会出现的错误，属于逻辑和业务流程的错误，而不是编译或者语法上的错误。  </p><p>　　PHP中什么是错误：<br>　　属于php脚本自身的问题，大部分情况是由错误的语法，服务器环境导致，使得编译器无法通过检查，甚至无法运行的情况。warning、notice都是错误，<br>   只是他们的级别不同而已，并且错误是不能被try-catch捕获的。  </p><p>　　上面的说法是有前提条件的：<br>　　在PHP中，因为在其他语言中就不能这样下结论了，也就是说异常和错误的说法在不同的语言有不同的说法。在PHP中任何自身的错误或者是非正常的代码都会当做错误对待，并不会以异常的形式抛出，但是也有一些情况会当做异常和错误同时抛出(据说是，我没有找到合适的例子)。也就是说，你想在数据库连接失败的时候自动捕获异常是行不通的，因为这就不是异常，是错误。但是在java中就不一样了，他会把很多和预期不一致的行为当做异常来进行捕获。</p><p>　　PHP异常处理很鸡肋？<br>　　在上面的分析中我们可以看出，PHP并不能主动的抛出异常，但是你可以手动抛出异常，既然能手动抛出就证明这个不是异常，而是意料之中。以我的理解，这就是PHP异常处理鸡肋的地方（不一定对啊）。所以PHP的异常机制不是那么的完美，但是使用过框架的同学都知道有这个情况：你在框架中直接写开头那段php“自动”捕获异常的代码是可以的，这是为什么？看过源码的同学都知道框架中都会涉及三个函数：register_shutdown_function，set_error_handler，set_exception_handler后面我会重点讲解着三个黑科技，通过这几个函数我们可以实现PHP假自动捕获异常和错误。</p><h2 id="二、ERROR的级别"><a href="#二、ERROR的级别" class="headerlink" title="二、ERROR的级别"></a>二、ERROR的级别</h2><p>　　只有熟悉错误级别才能对错误捕捉有更好的认识。 <a href="http://www.cnblogs.com/zyf-zhaoyafei/p/3649434.html">ERROR有不同的错误级别</a><br>　　下面我再总结性的给出这几类错误级别：</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">Fatal <span class="keyword">Error</span>:致命错误（脚本终止运行）</span><br><span class="line">E_ERROR         <span class="comment">// 致命的运行错误，错误无法恢复，暂停执行脚本</span></span><br><span class="line">E_CORE_ERROR    <span class="comment">// PHP启动时初始化过程中的致命错误</span></span><br><span class="line">E_COMPILE_ERROR <span class="comment">// 编译时致命性错，就像由Zend脚本引擎生成了一个E_ERROR</span></span><br><span class="line">E_USER_ERROR    <span class="comment">// 自定义错误消息。像用PHP函数trigger_error（错误类型设置为：E_USER_ERROR）</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Parse</span> <span class="keyword">Error</span>：编译时解析错误，语法错误（脚本终止运行）</span><br><span class="line">E_PARSE  <span class="comment">//编译时的语法解析错误</span></span><br><span class="line"></span><br><span class="line">Warning <span class="keyword">Error</span>：警告错误（仅给出提示信息，脚本不终止运行）</span><br><span class="line">E_WARNING         <span class="comment">// 运行时警告 (非致命错误)。</span></span><br><span class="line">E_CORE_WARNING    <span class="comment">// PHP初始化启动过程中发生的警告 (非致命错误) 。</span></span><br><span class="line">E_COMPILE_WARNING <span class="comment">// 编译警告</span></span><br><span class="line">E_USER_WARNING    <span class="comment">// 用户产生的警告信息</span></span><br><span class="line"></span><br><span class="line">Notice <span class="keyword">Error</span>：通知错误（仅给出通知信息，脚本不终止运行）</span><br><span class="line">E_NOTICE      <span class="comment">// 运行时通知。表示脚本遇到可能会表现为错误的情况.</span></span><br><span class="line">E_USER_NOTICE <span class="comment">// 用户产生的通知信息。</span></span><br><span class="line"></span><br><span class="line">由此可知有5类是产生<span class="keyword">ERROR</span>级别的错误，这种错误直接导致PHP程序退出。  </span><br><span class="line">可以定义成：  </span><br><span class="line"><span class="keyword">ERROR</span> = E_ERROR | E_CORE_ERROR |  E_COMPILE_ERROR | E_USER_ERROR | E_PARSE</span><br></pre></td></tr></table></figure><h2 id="三、PHP异常处理中的黑科技"><a href="#三、PHP异常处理中的黑科技" class="headerlink" title="三、PHP异常处理中的黑科技"></a>三、PHP异常处理中的黑科技</h2><p>　　前面提到框架中是可以捕获所有的错误和异常的，之所以能实现应该是使用了黑科技，哈哈！其实也不是什么黑科技，主要是三个重要的函数：  </p><p>　　1：set_error_handler()<br>　　看到这个名字估计就知道什么意思了，这个函数用于捕获错误，设置一个用户自定义的错误处理函数。  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="title function_ invoke__">set_error_handler</span>(<span class="string">&#x27;zyferror&#x27;</span>);</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">zyferror</span>(<span class="params"><span class="variable">$type</span>, <span class="variable">$message</span>, <span class="variable">$file</span>, <span class="variable">$line</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">    　　<span class="title function_ invoke__">var_dump</span>(<span class="string">&#x27;&lt;b&gt;set_error_handler: &#x27;</span> . <span class="variable">$type</span> . <span class="string">&#x27;:&#x27;</span> . <span class="variable">$message</span> . <span class="string">&#x27; in &#x27;</span> . <span class="variable">$file</span> . <span class="string">&#x27; on &#x27;</span> . <span class="variable">$line</span> . <span class="string">&#x27; line .&lt;/b&gt;&lt;br /&gt;&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>　　当程序出现错误的时候自动调用此方法，不过需要注意一下两点：第一，如果存在该方法，相应的error_reporting()就不能在使用了。所有的错误都会交给自定义的函数处理。第二，此方法不能处理以下级别的错误：E_ERROR、 E_PARSE、 E_CORE_ERROR、 E_CORE_WARNING、 E_COMPILE_ERROR、 E_COMPILE_WARNING，set_error_handler() 函数所在文件中产生的E_STRICT，该函数只能捕获系统产生的一些Warning、Notice级别的错误。<br>　　并且他有多种调用的方法：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">     <span class="comment">// 直接传函数名 NonClassFunction</span></span><br><span class="line">     <span class="title function_ invoke__">set_error_handler</span>(<span class="string">&#x27;function_name&#x27;</span>); </span><br><span class="line"></span><br><span class="line">     <span class="comment">// 传 class_name &amp;&amp; function_name</span></span><br><span class="line">     <span class="title function_ invoke__">set_error_handler</span>(<span class="keyword">array</span>(<span class="string">&#x27;class_name&#x27;</span>, <span class="string">&#x27;function_name&#x27;</span>)); </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p> 　　2：register_shutdown_function()<br>　　捕获PHP的错误：Fatal Error、Parse Error等，这个方法是PHP脚本执行结束前最后一个调用的函数，比如脚本错误、die()、exit、异常、正常结束都会调用，多么牛逼的一个函数啊！通过这个函数就可以在脚本结束前判断这次执行是否有错误产生，这时就要借助于一个函数：error_get_last()；这个函数可以拿到本次执行产生的所有错误。error_get_last();返回的信息：</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">　　[type]</span>    - 错误类型</span><br><span class="line"><span class="string">　　[message]</span> - 错误消息</span><br><span class="line"><span class="string">　　[file]</span>    - 发生错误所在的文件</span><br><span class="line"><span class="string">　　[line]</span>    - 发生错误所在的行</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="title function_ invoke__">register_shutdown_function</span>(<span class="string">&#x27;zyfshutdownfunc&#x27;</span>);</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">zyfshutdownfunc</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$error</span> = <span class="title function_ invoke__">error_get_last</span>()) &#123;</span><br><span class="line">            <span class="title function_ invoke__">var_dump</span>(<span class="string">&#x27;&lt;b&gt;register_shutdown_function: Type:&#x27;</span> . <span class="variable">$error</span>[<span class="string">&#x27;type&#x27;</span>] . <span class="string">&#x27; Msg: &#x27;</span> . <span class="variable">$error</span>[<span class="string">&#x27;message&#x27;</span>] . <span class="string">&#x27; in &#x27;</span> . <span class="variable">$error</span>[<span class="string">&#x27;file&#x27;</span>] . <span class="string">&#x27; on line &#x27;</span> . <span class="variable">$error</span>[<span class="string">&#x27;line&#x27;</span>] . <span class="string">&#x27;&lt;/b&gt;&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">　通过这种方法就可以巧妙的打印出程序结束前所有的错误信息。但是我在测试的时候我发现并不是所有的错误终止后都会调用这个函数，可以看下面的一个测试文件，内容是：</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">     <span class="title function_ invoke__">register_shutdown_function</span>(<span class="string">&#x27;zyfshutdownfunc&#x27;</span>);</span><br><span class="line">     <span class="function"><span class="keyword">function</span> <span class="title">zyfshutdownfunc</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">     </span>&#123;</span><br><span class="line">         <span class="keyword">if</span> (<span class="variable">$error</span> = <span class="title function_ invoke__">error_get_last</span>()) &#123;</span><br><span class="line">             <span class="title function_ invoke__">var_dump</span>(<span class="string">&#x27;&lt;b&gt;register_shutdown_function: Type:&#x27;</span> . <span class="variable">$error</span>[<span class="string">&#x27;type&#x27;</span>] . <span class="string">&#x27; Msg: &#x27;</span> . <span class="variable">$error</span>[<span class="string">&#x27;message&#x27;</span>] . <span class="string">&#x27; in &#x27;</span> . <span class="variable">$error</span>[<span class="string">&#x27;file&#x27;</span>] . <span class="string">&#x27; on line &#x27;</span> . <span class="variable">$error</span>[<span class="string">&#x27;line&#x27;</span>] . <span class="string">&#x27;&lt;/b&gt;&#x27;</span>);</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="title function_ invoke__">var_dump</span>(<span class="number">23</span>+-+); <span class="comment">//此处语法错误</span></span><br><span class="line"> <span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"> 　　自己可以试一下，你可以看到根本就不会触发<span class="title function_ invoke__">zyfshutdownfunc</span>()函数，其实这是一个语法错误，直接报了一个：</span><br><span class="line">    Parse error: syntax error, unexpected <span class="string">&#x27;)&#x27;</span> in /www/mytest/exception/<span class="keyword">try</span>-<span class="keyword">catch</span>.php on line <span class="number">71</span></span><br><span class="line"></span><br><span class="line">　　由此引出一个奇葩的问题：问什么不能触发，为什么框架中是可以的？其实原因很简单，只在parse-time出错时是不会调用本函数的。只有在run-time出错的时候，才会调用本函数，我的理解是语法检查器前没有执行<span class="title function_ invoke__">register_shutdown_function</span>()去把需要注册的函数放到调用的堆栈中，所以就根本不会运行。那框架中为什么任何错误都能进入到<span class="title function_ invoke__">register_shutdown_function</span>()中呢，其实在框架中一般会有统一的入口index.php，然后每个类库文件都会通过<span class="keyword">include</span> ** 的方式加载到index.php中，相当与所有的程序都会在index.php中聚集，同样，你写的具有语法错误的文件也会被引入到入口文件中，这样的话，调用框架，执行index.php，index.php本身并没有语法错误，也就不会产生parse-time错误，而是 <span class="keyword">include</span> 文件出错了，是run-time的时候出错了，所以框架执行完之后就会触发<span class="title function_ invoke__">register_shutdown_function</span>();</span><br><span class="line">　　所以现在可是试一下这个写法，这样就会触发<span class="title function_ invoke__">zyfshutdownfunc</span>()回调了：</span><br><span class="line"></span><br><span class="line"> a.php文件</span><br><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"> 　　<span class="comment">// 模拟语法错误</span></span><br><span class="line"> 　　<span class="title function_ invoke__">var_dump</span>(<span class="number">23</span>+-+);</span><br><span class="line"> <span class="meta">?&gt;</span></span><br><span class="line"> </span><br><span class="line"> b.php文件</span><br><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line">     <span class="title function_ invoke__">register_shutdown_function</span>(<span class="string">&#x27;zyfshutdownfunc&#x27;</span>);</span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">zyfshutdownfunc</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">   </span>&#123;</span><br><span class="line">       <span class="keyword">if</span> (<span class="variable">$error</span> = <span class="title function_ invoke__">error_get_last</span>()) &#123;</span><br><span class="line">            <span class="title function_ invoke__">var_dump</span>(<span class="string">&#x27;&lt;b&gt;register_shutdown_function: Type:&#x27;</span> . <span class="variable">$error</span>[<span class="string">&#x27;type&#x27;</span>] . <span class="string">&#x27; Msg: &#x27;</span> . <span class="variable">$error</span>[<span class="string">&#x27;message&#x27;</span>] . <span class="string">&#x27; in &#x27;</span> . <span class="variable">$error</span>[<span class="string">&#x27;file&#x27;</span>] . <span class="string">&#x27; on line &#x27;</span> . <span class="variable">$error</span>[<span class="string">&#x27;line&#x27;</span>] . <span class="string">&#x27;&lt;/b&gt;&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">require</span> <span class="string">&#x27;a.php&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"> 　　<span class="number">3</span>：<span class="title function_ invoke__">set_exception_handler</span>()</span><br><span class="line">　　设置默认的异常处理程序，用在没有用<span class="keyword">try</span>/<span class="keyword">catch</span>块来捕获的异常，也就是说不管你抛出的异常有没有人捕获，如果没有人捕获就会进入到该方法中，并且在回调函数调用后异常会中止。看一下用法：</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="title function_ invoke__">set_exception_handler</span>(<span class="string">&#x27;zyfexception&#x27;</span>);</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">zyfexception</span>(<span class="params"><span class="variable">$exception</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">var_dump</span>(<span class="string">&quot;&lt;b&gt;set_exception_handler: Exception: &quot;</span> . <span class="variable">$exception</span>-&gt;<span class="title function_ invoke__">getMessage</span>()  . <span class="string">&#x27;&lt;/b&gt;&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Exception</span>(<span class="string">&quot;zyf exception&quot;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 四、巧妙的捕获错误和异常</span></span><br><span class="line">　　<span class="number">1</span>：把错误以异常的形式抛出(不能完全抛出)</span><br><span class="line">　　　　由上面的讲解我们知道，php中的错误是不能以异常的像是捕获的，但是我们需要让他们抛出，已达到扩展 <span class="keyword">try</span>-<span class="keyword">catch</span>的影响范围，我们前面讲到过<span class="title function_ invoke__">set_error_handler</span>() 方法，他是干嘛用的，他是捕获错误的，所以我们就可以借助他来吧错误捕获，然后再以异常的形式抛出，ok，试试下面的写法：</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="title function_ invoke__">set_error_handler</span>(<span class="string">&#x27;zyferror&#x27;</span>);</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">zyferror</span>(<span class="params"><span class="variable">$type</span>, <span class="variable">$message</span>, <span class="variable">$file</span>, <span class="variable">$line</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">\Exception</span>(<span class="variable">$message</span> . <span class="string">&#x27;zyf错误当做异常&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$num</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="number">1</span>/<span class="variable">$num</span>;</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">catch</span> (<span class="built_in">Exception</span> <span class="variable">$e</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$e</span>-&gt;<span class="title function_ invoke__">getMessage</span>();</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">　　好了，试一下，会打印出：</span><br><span class="line"></span><br><span class="line"><span class="number">1</span> Division by zero zyf123</span><br><span class="line">　　流程：本来是除<span class="number">0</span>错误，然后触发<span class="title function_ invoke__">set_error_handler</span>()，在<span class="title function_ invoke__">set_error_handler</span>()中相当与杀了个回马枪，再把错误信息以异常的形式抛出来，这样就可以实现错误以异常的形式抛出。大家要注意：这样做是有缺点的，会受到<span class="title function_ invoke__">set_error_handler</span>()函数捕获级别的限制。</span><br><span class="line"></span><br><span class="line">     <span class="number">2</span>：捕获所有的错误</span><br><span class="line">        由<span class="title function_ invoke__">set_error_handler</span>()可知，他能够捕获一部分错误，不能捕获系统级E_ERROR、E_PARSE等错误，但是这部分可以由<span class="title function_ invoke__">register_shutdown_function</span>()捕获。所以两者结合能出现很好的功能。</span><br><span class="line">        看下面的程序：</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> a.php内容：</span><br><span class="line"> <span class="meta">&lt;?</span></span><br><span class="line">     <span class="comment">// 模拟Fatal error错误</span></span><br><span class="line">     <span class="comment">//test();</span></span><br><span class="line"> </span><br><span class="line">     <span class="comment">// 模拟用户产生ERROR错误</span></span><br><span class="line">     <span class="comment">//trigger_error(&#x27;zyf-error&#x27;, E_USER_ERROR);</span></span><br><span class="line"> </span><br><span class="line">     <span class="comment">// 模拟语法错误</span></span><br><span class="line">    <span class="title function_ invoke__">var_dump</span>(<span class="number">23</span>+-+);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 模拟Notice错误</span></span><br><span class="line">    <span class="comment">//echo $f;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 模拟Warning错误</span></span><br><span class="line">    <span class="comment">//echo &#x27;123&#x27;;</span></span><br><span class="line">    <span class="comment">//ob_flush();</span></span><br><span class="line">    <span class="comment">//flush();</span></span><br><span class="line">    <span class="comment">//header(&quot;Content-type:text/html;charset=gb2312&quot;);</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">b.php内容：</span><br><span class="line"><span class="meta">&lt;?</span></span><br><span class="line">    <span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="title function_ invoke__">register_shutdown_function</span>(<span class="string">&#x27;zyfshutdownfunc&#x27;</span>);</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">zyfshutdownfunc</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$error</span> = <span class="title function_ invoke__">error_get_last</span>()) &#123;</span><br><span class="line">            <span class="title function_ invoke__">var_dump</span>(<span class="string">&#x27;&lt;b&gt;register_shutdown_function: Type:&#x27;</span> . <span class="variable">$error</span>[<span class="string">&#x27;type&#x27;</span>] . <span class="string">&#x27; Msg: &#x27;</span> . <span class="variable">$error</span>[<span class="string">&#x27;message&#x27;</span>] . <span class="string">&#x27; in &#x27;</span> . <span class="variable">$error</span>[<span class="string">&#x27;file&#x27;</span>] . <span class="string">&#x27; on line &#x27;</span> . <span class="variable">$error</span>[<span class="string">&#x27;line&#x27;</span>] . <span class="string">&#x27;&lt;/b&gt;&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_ invoke__">set_error_handler</span>(<span class="string">&#x27;zyferror&#x27;</span>);</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">zyferror</span>(<span class="params"><span class="variable">$type</span>, <span class="variable">$message</span>, <span class="variable">$file</span>, <span class="variable">$line</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">var_dump</span>(<span class="string">&#x27;&lt;b&gt;set_error_handler: &#x27;</span> . <span class="variable">$type</span> . <span class="string">&#x27;:&#x27;</span> . <span class="variable">$message</span> . <span class="string">&#x27; in &#x27;</span> . <span class="variable">$file</span> . <span class="string">&#x27; on &#x27;</span> . <span class="variable">$line</span> . <span class="string">&#x27; line .&lt;/b&gt;&lt;br /&gt;&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">require</span> <span class="string">&#x27;a.php&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"> 　　到此就可以解释开头的那个程序了吧，test.php 如果是单文件执行是不能捕获到错误的，如果你在框架中执行就是可以的，当然你按照我上面介绍的来扩展也是可以的。</span><br><span class="line"></span><br><span class="line"><span class="comment">## 五、自定义异常处理和异常嵌套</span></span><br><span class="line"></span><br><span class="line">　　<span class="number">1</span>：自定义异常处理</span><br><span class="line"></span><br><span class="line">　　在复杂的系统中，我们往往需要自己捕获我们需要特殊处理的异常，这些异常可能是特殊情况下抛出的。所以我们就自己定义一个异常捕获类，该类必须是 exception 类的一个扩展，该类继承了 PHP 的 exception 类的所有属性，并且我们可以添加自定义的函数，使用的时候其实和之前的一样，大致写法如下：</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line">     <span class="class"><span class="keyword">class</span> <span class="title">zyfException</span> <span class="keyword">extends</span> <span class="title">Exception</span></span></span><br><span class="line"><span class="class">     </span>&#123;</span><br><span class="line">         <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">errorzyfMessage</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">         </span>&#123;</span><br><span class="line">             <span class="keyword">return</span> <span class="string">&#x27;Error line &#x27;</span> . <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">getLine</span>().<span class="string">&#x27; in &#x27;</span> . <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">getFile</span>()</span><br><span class="line">                 .<span class="string">&#x27;: &lt;b&gt;&#x27;</span> . <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">getMessage</span>() . <span class="string">&#x27;&lt;/b&gt; Must in (0 - 60)&#x27;</span>;</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$age</span> = <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="variable">$age</span> = <span class="title function_ invoke__">intval</span>(<span class="variable">$age</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$age</span> &gt; <span class="number">60</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title function_ invoke__">zyfException</span>(<span class="variable">$age</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">catch</span> (zyfException <span class="variable">$e</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$e</span>-&gt;<span class="title function_ invoke__">errorzyfMessage</span>();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">　　<span class="number">2</span>：异常嵌套</span><br><span class="line"></span><br><span class="line">　　异常嵌套是比较常见的写法，在自定义的异常处理中，<span class="keyword">try</span> 块中可以定义多个异常捕获，然后分层传递异常，理解和冒泡差不多，看下面的实现：</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line">     <span class="variable">$age</span> = <span class="number">10</span>;</span><br><span class="line">     <span class="keyword">try</span> &#123;</span><br><span class="line">         <span class="variable">$age</span> = <span class="title function_ invoke__">intval</span>(<span class="variable">$age</span>);</span><br><span class="line">         <span class="keyword">if</span>(<span class="variable">$age</span> &gt; <span class="number">60</span>) &#123;</span><br><span class="line">             <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title function_ invoke__">zyfException</span>(<span class="variable">$age</span>);</span><br><span class="line">         &#125;</span><br><span class="line"> </span><br><span class="line">         <span class="keyword">if</span> (<span class="variable">$age</span> &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Exception</span>(<span class="variable">$age</span> . <span class="string">&#x27; must &gt; 0&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">catch</span> (zyfException <span class="variable">$e</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$e</span>-&gt;<span class="title function_ invoke__">errorzyfMessage</span>();</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">catch</span>(<span class="built_in">Exception</span> <span class="variable">$e</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$e</span>-&gt;<span class="title function_ invoke__">getMessage</span>();</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">　　当然也可以在<span class="keyword">catch</span>中再抛出异常给上层：</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line">     <span class="variable">$age</span> = <span class="number">100</span>;</span><br><span class="line">     <span class="keyword">try</span> &#123;</span><br><span class="line">         <span class="keyword">try</span> &#123;</span><br><span class="line">             <span class="variable">$age</span> = <span class="title function_ invoke__">intval</span>(<span class="variable">$age</span>);</span><br><span class="line">             <span class="keyword">if</span>(<span class="variable">$age</span> &gt; <span class="number">60</span>) &#123;</span><br><span class="line">                 <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Exception</span>(<span class="variable">$age</span>);</span><br><span class="line">             &#125;</span><br><span class="line"> </span><br><span class="line">        &#125; <span class="keyword">catch</span> (<span class="built_in">Exception</span> <span class="variable">$e</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title function_ invoke__">zyfException</span>(<span class="variable">$age</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">catch</span> (zyfException <span class="variable">$e</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$e</span>-&gt;<span class="title function_ invoke__">errorzyfMessage</span>();</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 六、PHP7中的异常处理</span></span><br><span class="line">　　现在写PHP必须考虑版本情况，上面的写法在PHP7中大部分都能实现，但是也会有不同点，在PHP7更新中有一条：更多的<span class="built_in">Error</span>变为可捕获的<span class="built_in">Exception</span>，现在的PHP7实现了一个全局的throwable接口，原来老的<span class="built_in">Exception</span>和其中一部分<span class="built_in">Error</span>实现了这个接口(<span class="class"><span class="keyword">interface</span>)，<span class="title">PHP7</span>中更多的<span class="title">Error</span>变为可捕获的<span class="title">Exception</span>返回给捕捉器，这样其实和前面提到的扩展<span class="title">try</span>-<span class="title">catch</span>影响范围一样，但是如果不捕获则还是按照<span class="title">Error</span>对待，看下面两个：</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"> &lt;?<span class="title">php</span></span></span><br><span class="line"><span class="class">     <span class="title">try</span> </span>&#123;</span><br><span class="line">         <span class="title function_ invoke__">test</span>();</span><br><span class="line"> </span><br><span class="line">     &#125; <span class="keyword">catch</span>(<span class="built_in">Throwable</span> <span class="variable">$e</span>) &#123;</span><br><span class="line">         <span class="keyword">echo</span> <span class="variable">$e</span>-&gt;<span class="title function_ invoke__">getMessage</span>() . <span class="string">&#x27; zyf&#x27;</span>;</span><br><span class="line">     &#125;</span><br><span class="line"> </span><br><span class="line">     <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="title function_ invoke__">test</span>();</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">catch</span>(<span class="built_in">Error</span> <span class="variable">$e</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$e</span>-&gt;<span class="title function_ invoke__">getMessage</span>() . <span class="string">&#x27; zyf&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"> 因为PHP7实现了throwable接口，那么就可以使用第一个这种方式来捕获异常。又因为部分<span class="built_in">Error</span>实现了接口，并且更多的<span class="built_in">Error</span>变为可捕获的<span class="built_in">Exception</span>，那么就可以使用第二种方式来捕获异常。下面是在网上找的PHP7的异常层次树：</span><br><span class="line"><span class="built_in">Throwable</span></span><br><span class="line">　　<span class="built_in">Exception</span> 异常</span><br><span class="line">　　　　...</span><br><span class="line">　　<span class="built_in">Error</span> 错误</span><br><span class="line">　　　　<span class="built_in">ArithmeticError</span> 算数错误</span><br><span class="line">　　　　　　<span class="built_in">DivisionByZeroError</span> 除数为<span class="number">0</span>的错误</span><br><span class="line">　　　　<span class="built_in">AssertionError</span> 声明错误</span><br><span class="line">　　　　<span class="built_in">ParseError</span> 解析错误</span><br><span class="line">　　　　<span class="built_in">TypeError</span> 类型错误</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php-fpm配置文件</title>
      <link href="/posts/4aa5794f.html"/>
      <url>/posts/4aa5794f.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">pid</span> = run/php-fpm.pid</span><br><span class="line"><span class="attr">error_log</span> = /data/logs/php-fpm.log</span><br><span class="line"></span><br><span class="line"><span class="comment">; 子进程等待master进程对信号的回应（默认单位：s秒），可选s秒，m分，h时，d天</span></span><br><span class="line"><span class="attr">process_control_timeout</span> = <span class="number">10</span></span><br><span class="line"></span><br><span class="line"><span class="attr">user</span> = www</span><br><span class="line"><span class="attr">group</span> = www</span><br><span class="line"></span><br><span class="line"><span class="comment">; 同一时刻能够存活的最大子进程的数量</span></span><br><span class="line"><span class="attr">pm.max_children</span> = <span class="number">256</span></span><br><span class="line"></span><br><span class="line"><span class="comment">; The number of child processes created on startup.</span></span><br><span class="line"><span class="comment">; <span class="doctag">Note:</span> Used only when pm is set to &#x27;dynamic&#x27;</span></span><br><span class="line"><span class="comment">; Default Value: min_spare_servers + (max_spare_servers - min_spare_servers) / 2</span></span><br><span class="line"><span class="comment">; 在启动时启动的子进程数量</span></span><br><span class="line"><span class="attr">pm.start_servers</span> = <span class="number">128</span></span><br><span class="line"></span><br><span class="line"><span class="comment">; The desired minimum number of idle server processes.</span></span><br><span class="line"><span class="comment">; <span class="doctag">Note:</span> Used only when pm is set to &#x27;dynamic&#x27;</span></span><br><span class="line"><span class="comment">; <span class="doctag">Note:</span> Mandatory when pm is set to &#x27;dynamic&#x27;</span></span><br><span class="line"><span class="comment">; 处于空闲&quot;idle&quot;状态的最小子进程，如果空闲进程数量小于这个值，那么相应的子进程会被创建</span></span><br><span class="line"><span class="attr">pm.min_spare_servers</span> = <span class="number">64</span></span><br><span class="line"></span><br><span class="line"><span class="comment">; The desired maximum number of idle server processes.</span></span><br><span class="line"><span class="comment">; <span class="doctag">Note:</span> Used only when pm is set to &#x27;dynamic&#x27;</span></span><br><span class="line"><span class="comment">; <span class="doctag">Note:</span> Mandatory when pm is set to &#x27;dynamic&#x27;</span></span><br><span class="line"><span class="comment">; 最大空闲子进程数量，空闲子进程数量超过这个值，那么相应的子进程会被杀掉。</span></span><br><span class="line"><span class="attr">pm.max_spare_servers</span> = <span class="number">256</span></span><br><span class="line"></span><br><span class="line"><span class="comment">; 在派生新的子进程前，每一个子进程应该处理的请求数目，在第三方库中解决内存溢出很有用，设置为0则不会限制</span></span><br><span class="line"><span class="attr">pm.max_requests</span> = <span class="number">10240</span></span><br><span class="line"></span><br><span class="line"><span class="comment">; 终止请求超时时间，在worker进程被杀掉之后，提供单个请求的超时间隔。由于某种原因不停止脚本执行时，应该使用该选项，0表示关闭不启用</span></span><br><span class="line"><span class="comment">; (在php.ini中，max_execution_time 一般设置为30，表示每一个脚本的最大执行时间)</span></span><br><span class="line"><span class="attr">request_terminate_timeout</span> = <span class="number">600</span>s</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> php </category>
          
          <category> php-fpm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置文件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>new self和new static区别</title>
      <link href="/posts/8ebbd94d.html"/>
      <url>/posts/8ebbd94d.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * new self()和new static()区别</span></span><br><span class="line"><span class="comment"> * new self(); 指定最底层父类名 方法以及变量同理</span></span><br><span class="line"><span class="comment"> * new static();当前类名</span></span><br><span class="line"><span class="comment"> * Class A</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">get_self</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">self</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">get_static</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">static</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span> <span class="keyword">extends</span> <span class="title">A</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">get_class</span>(A::<span class="title function_ invoke__">get_self</span>()); <span class="comment">// A</span></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">get_class</span>(B::<span class="title function_ invoke__">get_self</span>()); <span class="comment">// A</span></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">get_class</span>(A::<span class="title function_ invoke__">get_static</span>()); <span class="comment">// A</span></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">get_class</span>(B::<span class="title function_ invoke__">get_static</span>()); <span class="comment">// B</span></span><br><span class="line"><span class="comment">// new self(); 指定最底层父类名</span></span><br><span class="line"><span class="comment">// new static();当前类名</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// PHP 中const的常量使用 self调出和使用static调出有什么不同？</span></span><br><span class="line"><span class="comment">// self 是在编译时确定值，static 是在运行时确定值。</span></span><br><span class="line"><span class="comment">// 下面略微修改了一下你的代码，注意一下运行结果的不同。</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="variable constant_">A</span> = <span class="string">&quot;this&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">aaa</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="built_in">self</span>::<span class="variable constant_">A</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">bbb</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="built_in">static</span>::<span class="variable constant_">A</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">testX</span> <span class="keyword">extends</span> <span class="title">test</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="variable constant_">A</span> = <span class="string">&quot;that&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$test</span> = <span class="keyword">new</span> <span class="title function_ invoke__">testX</span>();</span><br><span class="line"><span class="variable">$test</span>-&gt;<span class="title function_ invoke__">aaa</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="variable">$test</span>-&gt;<span class="title function_ invoke__">bbb</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> test::<span class="variable constant_">A</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$test</span>::<span class="variable constant_">A</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AA</span> </span>&#123;</span><br><span class="line">    <span class="built_in">static</span> <span class="variable">$str</span> = <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">className</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">__CLASS__</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="built_in">self</span>::<span class="variable">$str</span>; <span class="comment">// A</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="built_in">static</span>::<span class="variable">$str</span>; <span class="comment">// B</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">self</span>::<span class="variable language_">class</span>Name(); <span class="comment">// A</span></span><br><span class="line">        <span class="built_in">static</span>::<span class="variable language_">class</span>Name(); <span class="comment">// B</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BB</span> <span class="keyword">extends</span> <span class="title">A</span></span>&#123;</span><br><span class="line">    <span class="built_in">static</span> <span class="variable">$str</span> = <span class="string">&#x27;B&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">className</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">__CLASS__</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="built_in">self</span>::<span class="variable">$str</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">B::<span class="title function_ invoke__">test</span>();</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php配置文件</title>
      <link href="/posts/75b32cb9.html"/>
      <url>/posts/75b32cb9.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">; http头里发现这样的信息：</span></span><br><span class="line"><span class="comment">; X-Powered-By:PHP/5.2.11</span></span><br><span class="line"><span class="comment">; PHP的版本号暴露无疑，攻击者很容易捕获到此信息,修改为关闭</span></span><br><span class="line"><span class="attr">expose_php</span> = <span class="literal">Off</span></span><br><span class="line"></span><br><span class="line"><span class="attr">max_execution_time</span> = <span class="number">600</span></span><br><span class="line"><span class="attr">error_reporting</span> = E_ALL &amp; ~E_NOTICE</span><br><span class="line"><span class="attr">error_log</span> = /data/logs/php-error.log</span><br><span class="line"></span><br><span class="line"><span class="comment">; $HTTP_RAW_POST_DATA 接收post raw data</span></span><br><span class="line"><span class="attr">always_populate_raw_post_data</span> = <span class="literal">On</span></span><br><span class="line"></span><br><span class="line"><span class="attr">date.timezone</span> = <span class="string">&quot;Asia/Chongqing&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">; 设置session用redis记录</span></span><br><span class="line"><span class="attr">session.save_handler</span> = redis</span><br><span class="line"><span class="attr">session.save_path</span> = <span class="string">&quot;tcp://127.0.0.1:6379&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">; 字节码缓存扩展性能加速</span></span><br><span class="line"><span class="attr">opcache.enable</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">opcache.enable_cli</span>=<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">; 增加扩展</span></span><br><span class="line"><span class="attr">extension</span> = <span class="string">&quot;redis.so&quot;</span></span><br><span class="line"><span class="attr">zend_extension</span> = <span class="string">&quot;opcache.so&quot;</span></span><br><span class="line"><span class="attr">extension</span> = <span class="string">&quot;curl.so&quot;</span></span><br><span class="line"><span class="attr">extension</span> = <span class="string">&quot;openssl.so&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">; php7 json浮点数精度丢失，设置成17精度会更加精确</span></span><br><span class="line"><span class="attr">serialize_precision</span> = <span class="number">17</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置文件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php xdebug安装</title>
      <link href="/posts/6c0c5b4b.html"/>
      <url>/posts/6c0c5b4b.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># 下载xdebug</span></span><br><span class="line">https:<span class="comment">//xdebug.org/download.php下载xdebug后</span></span><br><span class="line"><span class="meta"># 安装php扩展</span></span><br><span class="line">/usr/local/webserver/php7/bin/phpize</span><br><span class="line">./configure --<span class="keyword">with</span>-php-config=/usr/local/webserver/php7/bin/php-config</span><br><span class="line">make</span><br><span class="line">make install</span><br><span class="line"></span><br><span class="line"><span class="meta"># php.ini中追加</span></span><br><span class="line">[<span class="meta">Xdebug</span>]</span><br><span class="line">zend_extension=&lt;full_path_to_xdebug_extension&gt;</span><br><span class="line">xdebug.remote_enable=<span class="number">1</span></span><br><span class="line">xdebug.remote_host=&lt;<span class="function">the host <span class="keyword">where</span> PhpStorm <span class="keyword">is</span> <span class="title">running</span> (<span class="params">e.g. localhost</span>)&gt;</span></span><br><span class="line"><span class="function">xdebug.remote_port</span>=&lt;<span class="function">the port to which Xdebug tries to connect <span class="keyword">on</span> the host <span class="keyword">where</span> PhpStorm <span class="keyword">is</span> <span class="title">running</span> (<span class="params"><span class="literal">default</span> <span class="number">9000</span></span>)&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> php </category>
          
          <category> xdebug </category>
          
      </categories>
      
      
        <tags>
            
            <tag> debug </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>依赖注入</title>
      <link href="/posts/caca8281.html"/>
      <url>/posts/caca8281.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 依赖注入</span></span><br><span class="line"><span class="comment"> * Date: 2018/9/26 0026</span></span><br><span class="line"><span class="comment"> * Time: 下午 17:24</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Sword</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$length</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$length</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;length = <span class="variable">$length</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">useSword</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;use length&#x27;</span> . <span class="variable language_">$this</span>-&gt;length;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Soldier</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$sword</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params">Sword <span class="variable">$sword</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;sword = <span class="variable">$sword</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">fight</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;sword-&gt;<span class="title function_ invoke__">useSword</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$sword1</span> = <span class="keyword">new</span> <span class="title class_">Sword</span>(<span class="number">10</span>);</span><br><span class="line"><span class="variable">$sword2</span> = <span class="keyword">new</span> <span class="title class_">Sword</span>(<span class="number">20</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$soldier1</span> = <span class="keyword">new</span> <span class="title class_">Soldier</span>(<span class="variable">$sword1</span>);</span><br><span class="line"><span class="variable">$soldier2</span> = <span class="keyword">new</span> <span class="title class_">Soldier</span>(<span class="variable">$sword2</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$soldier1</span>-&gt;<span class="title function_ invoke__">fight</span>();</span><br><span class="line"><span class="variable">$soldier2</span>-&gt;<span class="title function_ invoke__">fight</span>();</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php7编译安装</title>
      <link href="/posts/96dc3726.html"/>
      <url>/posts/96dc3726.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="一、环境预安装"><a href="#一、环境预安装" class="headerlink" title="一、环境预安装"></a>一、环境预安装</h1><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">yum</span> install -y <span class="punctuation">\</span></span><br><span class="line"><span class="punctuation"></span>zlib-devel <span class="punctuation">\</span></span><br><span class="line"><span class="punctuation"></span>libxml2-devel <span class="punctuation">\</span></span><br><span class="line"><span class="punctuation"></span>libjpeg-devel <span class="punctuation">\</span></span><br><span class="line"><span class="punctuation"></span>freetype-devel <span class="punctuation">\</span></span><br><span class="line"><span class="punctuation"></span>libpng-devel <span class="punctuation">\</span></span><br><span class="line"><span class="punctuation"></span>gd-devel <span class="punctuation">\</span></span><br><span class="line"><span class="punctuation"></span>curl-devel <span class="punctuation">\</span></span><br><span class="line"><span class="punctuation"></span>libc-client-devel <span class="punctuation">\</span></span><br><span class="line"><span class="punctuation"></span>bzip2 <span class="punctuation">\</span></span><br><span class="line"><span class="punctuation"></span>bzip2-devel <span class="punctuation">\</span></span><br><span class="line"><span class="punctuation"></span>libxslt <span class="punctuation">\</span></span><br><span class="line"><span class="punctuation"></span>libsxl-devel</span><br></pre></td></tr></table></figure><h1 id="二、编译-如果需要支持mysql需要加–with-mysql-php7不支持mysql的连接方式"><a href="#二、编译-如果需要支持mysql需要加–with-mysql-php7不支持mysql的连接方式" class="headerlink" title="二、编译 (如果需要支持mysql需要加–with-mysql, php7不支持mysql的连接方式)"></a>二、编译 (如果需要支持mysql需要加–with-mysql, php7不支持mysql的连接方式)</h1><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">./configure <span class="string">\</span></span><br><span class="line">--prefix=/usr/local/webserver/php7                      <span class="string">\</span></span><br><span class="line">--<span class="keyword">with</span>-config-file-path=/usr/local/webserver/php7/etc   <span class="string">\</span></span><br><span class="line">--<span class="keyword">with</span>-zlib-dir                              <span class="string">\</span></span><br><span class="line">--<span class="keyword">with</span>-freetype-dir                          <span class="string">\</span></span><br><span class="line">--enable-mbstring                            <span class="string">\</span></span><br><span class="line">--<span class="keyword">with</span>-libxml-dir=/usr                       <span class="string">\</span></span><br><span class="line">--enable-soap                                <span class="string">\</span></span><br><span class="line">--enable-calendar                            <span class="string">\</span></span><br><span class="line">--<span class="keyword">with</span>-curl                                  <span class="string">\</span></span><br><span class="line">--<span class="keyword">with</span>-zlib                                  <span class="string">\</span></span><br><span class="line">--<span class="keyword">with</span>-gd                                    <span class="string">\</span></span><br><span class="line">--disable-rpath                              <span class="string">\</span></span><br><span class="line">--enable-inline-optimization                 <span class="string">\</span></span><br><span class="line">--<span class="keyword">with</span>-bz2                                   <span class="string">\</span></span><br><span class="line">--<span class="keyword">with</span>-zlib                                  <span class="string">\</span></span><br><span class="line">--enable-sockets                             <span class="string">\</span></span><br><span class="line">--enable-sysvsem                             <span class="string">\</span></span><br><span class="line">--enable-sysvshm                             <span class="string">\</span></span><br><span class="line">--enable-pcntl                               <span class="string">\</span></span><br><span class="line">--enable-mbregex                             <span class="string">\</span></span><br><span class="line">--enable-exif                                <span class="string">\</span></span><br><span class="line">--enable-bcmath                              <span class="string">\</span></span><br><span class="line">--<span class="keyword">with</span>-mhash                                 <span class="string">\</span></span><br><span class="line">--enable-zip                                 <span class="string">\</span></span><br><span class="line">--<span class="keyword">with</span>-pcre-regex                            <span class="string">\</span></span><br><span class="line">--<span class="keyword">with</span>-pdo-mysql                             <span class="string">\</span></span><br><span class="line">--<span class="keyword">with</span>-mysqli                                <span class="string">\</span></span><br><span class="line">--<span class="keyword">with</span>-mysql-sock=/tmp/mysql.sock <span class="string">\</span></span><br><span class="line">--<span class="keyword">with</span>-jpeg-dir=/usr                         <span class="string">\</span></span><br><span class="line">--<span class="keyword">with</span>-png-dir=/usr                          <span class="string">\</span></span><br><span class="line">--<span class="keyword">with</span>-openssl                               <span class="string">\</span></span><br><span class="line">--<span class="keyword">with</span>-fpm-user=nginx                     <span class="string">\</span></span><br><span class="line">--<span class="keyword">with</span>-fpm-group=nginx                    <span class="string">\</span></span><br><span class="line">--enable-ftp                                 <span class="string">\</span></span><br><span class="line">--<span class="keyword">with</span>-imap                                  <span class="string">\</span></span><br><span class="line">--<span class="keyword">with</span>-imap-ssl                              <span class="string">\</span></span><br><span class="line">--<span class="keyword">with</span>-kerberos                              <span class="string">\</span></span><br><span class="line">--<span class="keyword">with</span>-gettext                               <span class="string">\</span></span><br><span class="line">--<span class="keyword">with</span>-xmlrpc                                <span class="string">\</span></span><br><span class="line">--<span class="keyword">with</span>-xsl                                   <span class="string">\</span></span><br><span class="line">--enable-opcache                             <span class="string">\</span></span><br><span class="line">--<span class="keyword">with</span>-libdir=lib64                           <span class="string">\</span></span><br><span class="line">--enable-fpm</span><br></pre></td></tr></table></figure><p>编译出现的问题<br>Cannot find imap library (libc-client.a).</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ln</span> -s /usr/lib64/libc-client.so /usr/lib/libc-client.so</span><br></pre></td></tr></table></figure><p>xslt-config not found. Please reinstall the libxslt &gt;&#x3D; 1.1.0 distribution这个问题，没安装libxslt libxslt-devel软件包</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y <span class="keyword">install</span> libxslt libxslt-devel</span><br></pre></td></tr></table></figure><p>复制配置文件</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp <span class="regexp">/usr/</span>local<span class="regexp">/webserver/</span>php7<span class="regexp">/etc/</span>php-fpm.conf.<span class="keyword">default</span> <span class="regexp">/usr/</span>local<span class="regexp">/webserver/</span>php7<span class="regexp">/etc/</span>php-fpm.conf</span><br><span class="line">cp <span class="regexp">/usr/</span>local<span class="regexp">/webserver/</span>php7<span class="regexp">/etc/</span>php-fpm.d<span class="regexp">/www.conf.default /u</span>sr<span class="regexp">/local/</span>webserver<span class="regexp">/php7/</span>etc<span class="regexp">/php-fpm.d/</span>www.conf</span><br></pre></td></tr></table></figure><h1 id="开机启动"><a href="#开机启动" class="headerlink" title="开机启动"></a>开机启动</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;/usr/local/webserver/php7/sbin/php-fpm start&quot;</span> &gt;&gt; /etc/rc.local</span><br></pre></td></tr></table></figure><h1 id="重启php-fpm"><a href="#重启php-fpm" class="headerlink" title="重启php-fpm"></a>重启php-fpm</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">kill</span> -USR2 php-fpm 进程</span><br><span class="line"><span class="built_in">kill</span> -USR2 `<span class="built_in">cat</span> /usr/local/webserver/php7/var/run/php-fpm.pid`</span><br></pre></td></tr></table></figure><h1 id="关闭"><a href="#关闭" class="headerlink" title="关闭"></a>关闭</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">kill</span> -INT `<span class="built_in">cat</span> /usr/local/webserver/php7/var/run/php-fpm.pid`</span><br></pre></td></tr></table></figure><h1 id="添加环境变量"><a href="#添加环境变量" class="headerlink" title="添加环境变量"></a>添加环境变量</h1><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo <span class="operator">-</span>e &#x27;\nexport <span class="type">PATH</span><span class="operator">=/</span>usr<span class="regexp">/local/</span>webserver<span class="regexp">/php7/</span>bin:<span class="regexp">/usr/</span>local<span class="regexp">/webserver/</span>php7<span class="regexp">/sbin:$PATH\n&#x27; &gt;&gt; /</span>etc<span class="regexp">/profile &amp;&amp; source /</span>etc<span class="operator">/</span>profile</span><br></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cp php.ini-production <span class="regexp">/usr/</span>local<span class="regexp">/webserver/</span>php7<span class="regexp">/etc/</span>php.ini</span><br><span class="line">注意：需要修改php.ini配置中的参数，extension_dir改为自己的</span><br><span class="line">extension_dir = <span class="string">&quot;/usr/local/webserver/php7/lib/php/extensions/no-debug-non-zts-20151012/&quot;</span></span><br></pre></td></tr></table></figure><p>用户和nginx配置的用户一致 如果没有创建nginx用户则新建</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">groupadd -<span class="attribute">r</span> nginx &amp;&amp; useradd -<span class="attribute">r</span> -<span class="selector-tag">g</span> nginx -s /bin/false -M nginx</span><br></pre></td></tr></table></figure><p>设置PHP日志目录和php-fpm进程文件（php-fpm.sock）目录<br>其中，设置php-fpm进程目录的用户和用户组为nginx，并创建php会话session目录</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">mkdir</span> -p /<span class="keyword">var</span>/<span class="keyword">log</span>/php-fpm/ &amp;&amp; <span class="keyword">mkdir</span> -p /<span class="keyword">var</span>/<span class="keyword">run</span>/php-fpm &amp;&amp; <span class="keyword">cd</span> /<span class="keyword">var</span>/<span class="keyword">run</span>/ &amp;&amp; chown -R nginx:nginx php-fpm</span><br></pre></td></tr></table></figure><p>修改session的目录配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p /var/lib/php/session</span><br><span class="line"><span class="built_in">chown</span> -R nginx:nginx /var/lib/php</span><br></pre></td></tr></table></figure><p>配置开机自启动，增加到主机sysV服务</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">chmod +x /etc/<span class="keyword">init</span>.d/php-fpm</span><br><span class="line">chkconfig --<span class="keyword">add</span> php-fpm</span><br><span class="line">chkconfig php-fpm <span class="keyword">on</span></span><br></pre></td></tr></table></figure><p>nginx 支持php</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">location</span> <span class="regexp">~ \.php$</span> &#123;</span><br><span class="line">            <span class="attribute">root</span>           /data/html;</span><br><span class="line">            <span class="attribute">fastcgi_pass</span>   <span class="number">127.0.0.1:9000</span>;</span><br><span class="line">            <span class="attribute">fastcgi_index</span>  index.php;</span><br><span class="line">            <span class="attribute">fastcgi_param</span>  SCRIPT_FILENAME  <span class="variable">$document_root</span><span class="variable">$fastcgi_script_name</span>;</span><br><span class="line">            <span class="attribute">include</span>        fastcgi_params;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安装文档 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用函数</title>
      <link href="/posts/923c3c89.html"/>
      <url>/posts/923c3c89.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 生成指定长度的字符串</span></span><br><span class="line"><span class="title function_ invoke__">str_repeat</span>(<span class="string">&#x27;string&#x27;</span>, <span class="number">10</span>);</span><br><span class="line"><span class="comment">// 生成指定长度的数组</span></span><br><span class="line"><span class="title function_ invoke__">array_fill</span>(<span class="number">0</span>, <span class="number">10</span>, <span class="string">&#x27;string&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取传入的不确定数参数</span></span><br><span class="line"><span class="title function_ invoke__">func_num_args</span>(); <span class="comment">// 返回调用函数的传入参数个数,类型是整型</span></span><br><span class="line"><span class="title function_ invoke__">func_get_arg</span>(<span class="number">1</span>); <span class="comment">// 返回指定的参数值</span></span><br><span class="line"><span class="title function_ invoke__">func_get_args</span>(); <span class="comment">// 返回全部参数的值,类型是数组</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 数字位数不全</span></span><br><span class="line"><span class="title function_ invoke__">number_format</span>(<span class="number">1</span>,<span class="number">2</span>); <span class="comment">// 1.00;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常见问题处理</title>
      <link href="/posts/acb6d092.html"/>
      <url>/posts/acb6d092.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="php-readfile导出文件乱码"><a href="#php-readfile导出文件乱码" class="headerlink" title="php readfile导出文件乱码"></a>php readfile导出文件乱码</h1><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 加上一下两个方法,可以解决readfile乱码问题</span><br><span class="line"><span class="built_in">ob_clean</span>();</span><br><span class="line"><span class="built_in">flush</span>();</span><br><span class="line"><span class="built_in">readfile</span>($filename);</span><br></pre></td></tr></table></figure><h1 id="php7-json浮点数精度丢失，设置成17精度会更加精确"><a href="#php7-json浮点数精度丢失，设置成17精度会更加精确" class="headerlink" title="php7 json浮点数精度丢失，设置成17精度会更加精确"></a>php7 json浮点数精度丢失，设置成17精度会更加精确</h1><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">serialize_precision</span> = <span class="number">17</span></span><br></pre></td></tr></table></figure><h1 id="undefined-function-imagejpeg"><a href="#undefined-function-imagejpeg" class="headerlink" title="undefined function imagejpeg"></a>undefined function imagejpeg</h1><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装jpeg</span></span><br><span class="line"><span class="variable">$ </span>wget <span class="symbol">http:</span>/<span class="regexp">/www.ijg.org/files</span><span class="regexp">/jpegsrc.v9c.tar.gz</span></span><br><span class="line"><span class="regexp">$ tar zxvf jpegsrc.v9c.tar.gz</span></span><br><span class="line"><span class="regexp">$ cd jpeg-9c &amp;&amp; ./configure</span> --prefix=<span class="regexp">/usr/local</span><span class="regexp">/webserver/phpjpeglib</span> --enable-shared --enable-static &amp;&amp; make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重新编译gd，并且指定jpeg目录</span></span><br><span class="line"><span class="variable">$ </span>cd php-src/etx/gd &amp;&amp; phpize</span><br><span class="line"><span class="variable">$ </span>./configure --<span class="keyword">with</span>-php-config=<span class="regexp">/usr/local</span><span class="regexp">/webserver/php</span><span class="regexp">/bin/php</span>-config --<span class="keyword">with</span>-jpeg=<span class="regexp">/usr/local</span><span class="regexp">/webserver/phpjpeglib</span>  --<span class="keyword">with</span>-freetype</span><br><span class="line"><span class="variable">$ </span>make &amp;&amp; make install</span><br><span class="line"><span class="comment"># 检测效果</span></span><br><span class="line"><span class="variable">$ </span>php --re=gd | grep jpeg</span><br></pre></td></tr></table></figure><h1 id="undefined-function-imagettftext"><a href="#undefined-function-imagettftext" class="headerlink" title="undefined function imagettftext"></a>undefined function imagettftext</h1><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>cd php-src/etx/gd &amp;&amp; phpize</span><br><span class="line"><span class="variable">$ </span>./configure --<span class="keyword">with</span>-php-config=<span class="regexp">/usr/local</span><span class="regexp">/webserver/php</span><span class="regexp">/bin/php</span>-config --<span class="keyword">with</span>-jpeg=<span class="regexp">/usr/local</span><span class="regexp">/webserver/phpjpeglib</span>  --<span class="keyword">with</span>-freetype</span><br><span class="line"><span class="variable">$ </span>make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果还是不行则，编译安装freetype</span></span><br><span class="line"><span class="variable">$ </span>wget <span class="symbol">https:</span>/<span class="regexp">/download.savannah.gnu.org/releases</span><span class="regexp">/freetype/freetype</span>-<span class="number">2.12</span>.<span class="number">1</span>.tar.gz --no-check-certificate</span><br><span class="line"><span class="variable">$ </span>tar zxvf tar zxvf freetype-<span class="number">2.12</span>.<span class="number">1</span>.tar.gz &amp;&amp; cd freetype-<span class="number">2.12</span>.<span class="number">1</span></span><br><span class="line"><span class="variable">$ </span>./configure --prefix=<span class="regexp">/usr/local</span><span class="regexp">/webserver/freetype</span> &amp;&amp; make &amp;&amp; make install</span><br><span class="line"><span class="comment"># 然后编译gd时，参数指定路径 --with-freetype=/usr/local/webserver/freetype</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>杂记</title>
      <link href="/posts/430d67de.html"/>
      <url>/posts/430d67de.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="php数组遍历顺序"><a href="#php数组遍历顺序" class="headerlink" title="php数组遍历顺序"></a>php数组遍历顺序</h1><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">foreach</span>通过移动数组内部指针实现遍历顺序，遍历结束，指针指向末端。此时获取指针位置(使用移动指针的命令prev/next/<span class="keyword">current</span>/<span class="keyword">end</span>/<span class="keyword">each</span>)将失败,需要执行<span class="keyword">reset</span>才行。</span><br><span class="line"><span class="keyword">foreach</span>遍历顺序是根据元素插入数组的先后顺序遍历的。</span><br><span class="line">按照数字索引大小进行循环应该使用<span class="keyword">for</span>。</span><br></pre></td></tr></table></figure><h1 id="字符和0比较"><a href="#字符和0比较" class="headerlink" title="字符和0比较"></a>字符和0比较</h1><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0</span>和任意不可转化为数字的字符串比较(操作符为==), 均返回 <span class="literal">true</span></span><br></pre></td></tr></table></figure><h1 id="php-float写入redis导致精度丢失"><a href="#php-float写入redis导致精度丢失" class="headerlink" title="php float写入redis导致精度丢失"></a>php float写入redis导致精度丢失</h1><h1 id="php-配置中小数都是转换为double-读取14位数-第十五位四舍五入"><a href="#php-配置中小数都是转换为double-读取14位数-第十五位四舍五入" class="headerlink" title="php 配置中小数都是转换为double,读取14位数,第十五位四舍五入"></a>php 配置中小数都是转换为double,读取14位数,第十五位四舍五入</h1><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">; The number of significant digits displayed in floating point numbers.</span></span><br><span class="line"><span class="comment">; http://php.net/precision</span></span><br><span class="line"><span class="attribute">precision</span> <span class="operator">=</span> <span class="number">14</span></span><br></pre></td></tr></table></figure><h1 id="redis的小数会转换为double-double双精度浮点数据的有效位是16位-导致偏差"><a href="#redis的小数会转换为double-double双精度浮点数据的有效位是16位-导致偏差" class="headerlink" title="redis的小数会转换为double, double双精度浮点数据的有效位是16位,导致偏差"></a>redis的小数会转换为double, double双精度浮点数据的有效位是16位,导致偏差</h1><h1 id="php-float写入-hSet-zAdd-sAdd-lPush-redis时-需要转换为sting类型"><a href="#php-float写入-hSet-zAdd-sAdd-lPush-redis时-需要转换为sting类型" class="headerlink" title="php float写入(hSet zAdd sAdd lPush)redis时,需要转换为sting类型"></a>php float写入(hSet zAdd sAdd lPush)redis时,需要转换为sting类型</h1><h1 id="md5-file替代方式"><a href="#md5-file替代方式" class="headerlink" title="md5_file替代方式"></a>md5_file替代方式</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$url</span> = <span class="string">&#x27;http://pic.917.com/2019/07/23/02104856lkwlfyid76qiii.jpg&#x27;</span>;</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">md5_file</span>(<span class="variable">$url</span>));</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$url</span>)));</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">curl_content</span>(<span class="variable">$url</span>)));</span><br></pre></td></tr></table></figure><h1 id="取模计算方式"><a href="#取模计算方式" class="headerlink" title="取模计算方式"></a>取模计算方式</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 先将两个整数看作是正数，再作除法运算:</span></span><br><span class="line"><span class="comment">// 1、能整除时，其值为 0</span></span><br><span class="line"><span class="comment">// 2、不能整除时，其值=除数×(整商+1)-被除数</span></span><br><span class="line"><span class="comment">// 91/26=3.5取3, (3+1)*26 - 91 = 13 </span></span><br><span class="line"><span class="keyword">echo</span> <span class="number">91</span> % <span class="number">26</span>;</span><br></pre></td></tr></table></figure><h1 id="php-hash-hmac-sha256加密对应java加密"><a href="#php-hash-hmac-sha256加密对应java加密" class="headerlink" title="php hash_hmac sha256加密对应java加密"></a>php hash_hmac sha256加密对应java加密</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// php hash加密对应java加密，如果还是不行，可能加密的字符串中存在转义字符</span></span><br><span class="line"><span class="comment">// Java中sha256HMAC后得到的值为二进制,php 也需要转换为二进制</span></span><br><span class="line"><span class="variable">$signature</span> = <span class="title function_ invoke__">hash_hmac</span>(<span class="string">&#x27;sha256&#x27;</span>, <span class="variable">$callback_url</span>, <span class="variable">$akey</span>, <span class="literal">true</span>);</span><br><span class="line"><span class="variable">$signature</span> = <span class="title function_ invoke__">base64_encode</span>(<span class="variable">$signature</span>);</span><br><span class="line"><span class="comment">// java中Base64.encodeBase64URLSafeString(bytes) 会将 特殊字符‘+/’替换为&#x27;-_&#x27;,会将‘=’去掉</span></span><br><span class="line"><span class="comment">// php需要手动处理替换</span></span><br><span class="line"><span class="variable">$signature</span> = <span class="title function_ invoke__">str_replace</span>(<span class="keyword">array</span>(<span class="string">&#x27;+&#x27;</span>,<span class="string">&#x27;/&#x27;</span>),<span class="keyword">array</span>(<span class="string">&#x27;-&#x27;</span>,<span class="string">&#x27;_&#x27;</span>),<span class="variable">$signature</span>);</span><br></pre></td></tr></table></figure><h1 id="判断是否纯数字"><a href="#判断是否纯数字" class="headerlink" title="判断是否纯数字"></a>判断是否纯数字</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 判断数字，如果开头是数字的字符串也会判定为数字</span></span><br><span class="line"><span class="title function_ invoke__">is_number</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断纯数字</span></span><br><span class="line"><span class="title function_ invoke__">ctype_digit</span>();</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>redis多实例</title>
      <link href="/posts/bb0d3e20.html"/>
      <url>/posts/bb0d3e20.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><p>一、配置多实例<br>1.新增实例配置文件, 修改bind(如有需要)和port参数<br>2.运行新增的实例</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># windos</span><br><span class="line">runhiddenconsole.<span class="keyword">exe</span> redis-server redis.windows.<span class="keyword">conf</span></span><br><span class="line">runhiddenconsole.<span class="keyword">exe</span> redis-server redis.windows-<span class="keyword">new</span>.<span class="keyword">conf</span></span><br><span class="line">::runhiddenconsole.<span class="keyword">exe</span> redis-server redis.windows.<span class="keyword">conf</span> --service-start</span><br><span class="line">::runhiddenconsole.<span class="keyword">exe</span> redis-server redis.windows-<span class="keyword">new</span>.<span class="keyword">conf</span> --service-start</span><br><span class="line"></span><br><span class="line"># linux</span><br><span class="line">redis-server redis.<span class="keyword">conf</span></span><br><span class="line">redis-server redis-<span class="keyword">new</span>.<span class="keyword">conf</span></span><br></pre></td></tr></table></figure><p>二、PHP中使用多实例</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;REDIS_CONFIG&#x27;</span>, <span class="string">&#x27;redis://127.0.0.2:6379/0&#x27;</span>); <span class="comment">// 默认-网站配置信息</span></span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;REDIS_new&#x27;</span>, <span class="string">&#x27;redis://127.0.0.2:6370/0&#x27;</span>); <span class="comment">// 新实例</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">redis</span>(<span class="params"><span class="variable">$redisConfType</span> = <span class="string">&quot;REDIS_CONFIG&quot;</span></span>)</span>&#123;</span><br><span class="line"><span class="comment">//    static $redisList=[];//用于判断redis一个php生命周期内是否要重新连接</span></span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$redisList</span>;</span><br><span class="line">    <span class="comment">//判断redis是否已连接</span></span><br><span class="line">    <span class="keyword">if</span>( <span class="keyword">empty</span>(<span class="variable">$redisList</span>[<span class="variable">$redisConfType</span>]) )&#123;</span><br><span class="line">        <span class="variable">$cfg</span> = <span class="title function_ invoke__">parse_url</span>( <span class="title function_ invoke__">constant</span>(<span class="variable">$redisConfType</span>) );</span><br><span class="line">        <span class="keyword">if</span>( <span class="keyword">empty</span>(<span class="variable">$cfg</span>[<span class="string">&#x27;path&#x27;</span>]) )&#123;</span><br><span class="line">            <span class="title function_ invoke__">trigger_error</span>(<span class="string">&#x27;Invalid redis db name&#x27;</span>,E_USER_ERROR);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$cfg</span>[<span class="string">&#x27;path&#x27;</span>] = <span class="title function_ invoke__">intval</span>( <span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;/&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$cfg</span>[<span class="string">&#x27;path&#x27;</span>]));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>( <span class="keyword">isset</span>(<span class="variable">$cfg</span>[<span class="string">&#x27;scheme&#x27;</span>]) &amp;&amp; <span class="variable">$cfg</span>[<span class="string">&#x27;scheme&#x27;</span>]==<span class="string">&#x27;redis&#x27;</span> )&#123;</span><br><span class="line">            <span class="keyword">try</span>&#123;</span><br><span class="line">                <span class="variable">$redisList</span>[<span class="variable">$redisConfType</span>] = <span class="keyword">new</span> <span class="title class_">Redis</span>();</span><br><span class="line">                <span class="variable">$ret</span> = <span class="variable">$redisList</span>[<span class="variable">$redisConfType</span>]-&gt;<span class="title function_ invoke__">pconnect</span>(<span class="variable">$cfg</span>[<span class="string">&#x27;host&#x27;</span>], <span class="variable">$cfg</span>[<span class="string">&#x27;port&#x27;</span>], <span class="number">0.3</span>);</span><br><span class="line">                <span class="variable">$redisList</span>[<span class="variable">$redisConfType</span>]-&gt;<span class="title function_ invoke__">select</span>(<span class="variable">$cfg</span>[<span class="string">&#x27;path&#x27;</span>]);</span><br><span class="line">            &#125;<span class="keyword">catch</span>(<span class="built_in">Exception</span> <span class="variable">$e</span>)&#123;</span><br><span class="line">                <span class="variable">$redisList</span>[<span class="variable">$redisConfType</span>] = <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$redisList</span>[<span class="variable">$redisConfType</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>scan</title>
      <link href="/posts/c4b3b3ae.html"/>
      <url>/posts/c4b3b3ae.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;<br>    <span id="more"></span><br>    &lt;The rest of contents | 余下全文&gt;</p><pre><code><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 使用scan替代keys</span></span><br><span class="line"><span class="comment"> * Date: 2018/9/26 0026</span></span><br><span class="line"><span class="comment"> * Time: 下午 12:00</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 命令行方式 redis-cli --scan --pattern &#x27;*&#x27;</span></span><br><span class="line"><span class="variable">$redis</span> = <span class="keyword">new</span> <span class="title class_">Redis</span>();</span><br><span class="line"><span class="variable">$redis</span>-&gt;<span class="title function_ invoke__">connect</span>(<span class="string">&#x27;127.0.0.1&#x27;</span>);</span><br><span class="line"><span class="comment">// 如果scan为空，将重试直到遍历结束</span></span><br><span class="line"><span class="variable">$redis</span>-&gt;<span class="title function_ invoke__">setOption</span>(<span class="title class_">Redis</span>::<span class="variable constant_">OPT_SCAN</span>, <span class="title class_">Redis</span>::<span class="variable constant_">SCAN_RETRY</span>);</span><br><span class="line"><span class="variable">$iterator</span> = <span class="literal">null</span>;</span><br><span class="line"><span class="variable">$list</span> = [];</span><br><span class="line"><span class="variable">$match</span> = <span class="string">&#x27;sell:*&#x27;</span>;</span><br><span class="line"><span class="keyword">while</span>(<span class="variable">$keys</span> = <span class="variable">$redis</span>-&gt;<span class="title function_ invoke__">scan</span>(<span class="variable">$iterator</span>, <span class="variable">$match</span>, <span class="number">10</span>)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;item:<span class="subst">&#123;$iterator&#125;</span>\n&quot;</span>;</span><br><span class="line">    <span class="keyword">foreach</span>(<span class="variable">$keys</span> <span class="keyword">as</span> <span class="variable">$key</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$key</span> . PHP_EOL;</span><br><span class="line">        <span class="variable">$list</span>[] = <span class="variable">$key</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">count</span>(<span class="variable">$list</span>) . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span>(<span class="title function_ invoke__">count</span>(<span class="variable">$redis</span>-&gt;<span class="title function_ invoke__">keys</span>(<span class="variable">$match</span>)));</span><br></pre></td></tr></table></figure></code></pre>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>redis config</title>
      <link href="/posts/32c151bb.html"/>
      <url>/posts/32c151bb.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="redis以守护进程的方式运行"><a href="#redis以守护进程的方式运行" class="headerlink" title="redis以守护进程的方式运行"></a>redis以守护进程的方式运行</h1><h1 id="no表示不以守护进程的方式运行-会占用一个终端"><a href="#no表示不以守护进程的方式运行-会占用一个终端" class="headerlink" title="no表示不以守护进程的方式运行(会占用一个终端)"></a>no表示不以守护进程的方式运行(会占用一个终端)</h1><p>daemonize yes</p><h1 id="修改目录"><a href="#修改目录" class="headerlink" title="修改目录"></a>修改目录</h1><p>dir &#x2F;data&#x2F;redis&#x2F;</p><h1 id><a href="#" class="headerlink" title></a></h1><p>appendonly yes</p><h1 id="Save-the-DB-on-disk"><a href="#Save-the-DB-on-disk" class="headerlink" title="Save the DB on disk:"></a>Save the DB on disk:</h1><h1 id="关闭"><a href="#关闭" class="headerlink" title="关闭"></a>关闭</h1><p>#save 900 1<br>#save 300 10<br>#save 60 10000</p>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>curl封装</title>
      <link href="/posts/7dafab05.html"/>
      <url>/posts/7dafab05.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="curl封装"><a href="#curl封装" class="headerlink" title="curl封装"></a>curl封装</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * curl获取信息</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> $url</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> array $curl_data post数据</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> int $timeout 连接超时时间</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> bool|int|mixed|string</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">curl_get_content</span>(<span class="params"><span class="variable">$url</span>, <span class="keyword">array</span> <span class="variable">$curl_data</span> = [], <span class="variable">$conTimeout</span> = <span class="number">5</span>, <span class="variable">$timeout</span> = <span class="number">60</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable">$curl_data</span>[<span class="string">&#x27;user_agent&#x27;</span>])) &#123;</span><br><span class="line">        <span class="variable">$curl_data</span>[<span class="string">&#x27;user_agent&#x27;</span>] = <span class="string">&#x27;Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.101 Safari/537.36&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$Curl</span>=<span class="title function_ invoke__">curl_init</span>();<span class="comment">//实例化cURL</span></span><br><span class="line">    <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$Curl</span>, CURLOPT_URL, <span class="variable">$url</span>);<span class="comment">//初始化路径</span></span><br><span class="line">    <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$Curl</span>, CURLOPT_USERAGENT, <span class="variable">$curl_data</span>[<span class="string">&#x27;user_agent&#x27;</span>]);</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$curl_data</span>[<span class="string">&#x27;post_data&#x27;</span>])&#123;</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span> (<span class="variable">$Curl</span>, CURLOPT_POST, <span class="number">1</span>);</span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$Curl</span>, CURLOPT_POSTFIELDS, <span class="variable">$curl_data</span>[<span class="string">&#x27;post_data&#x27;</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$Curl</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);<span class="comment">//0获取后直接打印出来</span></span><br><span class="line">    <span class="title function_ invoke__">curl_setopt</span> (<span class="variable">$Curl</span>, CURLOPT_CONNECTTIMEOUT, <span class="variable">$conTimeout</span>);</span><br><span class="line">    <span class="title function_ invoke__">curl_setopt</span> (<span class="variable">$Curl</span>, CURLOPT_TIMEOUT, <span class="variable">$timeout</span>);</span><br><span class="line">    <span class="comment">//转码、解释gzip内容</span></span><br><span class="line">    <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$Curl</span>, CURLOPT_HTTPHEADER,<span class="keyword">array</span>(<span class="string">&#x27;Accept-Encoding: gzip, deflate&#x27;</span>));</span><br><span class="line">    <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$Curl</span>, CURLOPT_ENCODING, <span class="string">&#x27;gzip,deflate&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$Curl</span>, CURLOPT_HEADER, <span class="number">0</span>);<span class="comment">//0关闭打印相应头,直接打印需为1,</span></span><br><span class="line">    <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$Curl</span>, CURLOPT_SSL_VERIFYPEER , <span class="literal">false</span>);</span><br><span class="line">    <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$Curl</span>, CURLOPT_SSL_VERIFYHOST , <span class="literal">false</span>);</span><br><span class="line">    <span class="variable">$result</span>=<span class="title function_ invoke__">curl_exec</span>(<span class="variable">$Curl</span>);<span class="comment">//执行一个cURL会话</span></span><br><span class="line">    <span class="comment">//转码</span></span><br><span class="line">    <span class="variable">$result</span>=<span class="title function_ invoke__">mb_convert_encoding</span>(<span class="variable">$result</span>, <span class="string">&#x27;UTF-8&#x27;</span>, <span class="string">&#x27;UTF-8,GBK,gb2312,BIG5&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$result</span> === <span class="literal">false</span>) &#123;</span><br><span class="line">        <span class="variable">$result</span>[<span class="string">&#x27;error&#x27;</span>] = <span class="title function_ invoke__">curl_error</span>(<span class="variable">$Curl</span>);</span><br><span class="line">        <span class="variable">$result</span>[<span class="string">&#x27;info&#x27;</span>] = <span class="title function_ invoke__">curl_getinfo</span>(<span class="variable">$Curl</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$lastUrl</span> =  <span class="title function_ invoke__">curl_getinfo</span>(<span class="variable">$Curl</span>, CURLINFO_EFFECTIVE_URL);</span><br><span class="line">    <span class="title function_ invoke__">curl_close</span>(<span class="variable">$Curl</span>);<span class="comment">//关闭cURL会话</span></span><br><span class="line">    <span class="comment">//callback为验证码</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">strpos</span>(<span class="variable">$lastUrl</span> , <span class="string">&#x27;callback&#x27;</span>) !== <span class="literal">false</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$result</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h1 id="php-curl-调用curl-exec-返回-bool-false-；"><a href="#php-curl-调用curl-exec-返回-bool-false-；" class="headerlink" title="php curl 调用curl_exec() 返回 bool(false)；"></a>php curl 调用curl_exec() 返回 bool(false)；</h1><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">原因<span class="symbol">:SSl</span>证书问题</span><br><span class="line">解决方法:</span><br><span class="line">curl_setopt(<span class="variable">$ch</span>, <span class="title class_">CURLOPT_SSL_VERIFYPEER</span> , <span class="literal">false</span>);</span><br><span class="line">curl_setopt(<span class="variable">$ch</span>, <span class="title class_">CURLOPT_SSL_VERIFYHOST</span> , <span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line"><span class="title class_">CURLOPT_CONNECTTIMEOUT</span>用来告诉<span class="title class_">PHP</span>脚本在成功连接服务器前等待多久（连接成功之后就会开始缓冲输出），这个参数是为了应对目标服务器的过载，下线，或者崩溃等可能状况；</span><br><span class="line"><span class="title class_">CURLOPT_TIMEOUT</span>用来告诉成功<span class="title class_">PHP</span>脚本，从服务器接收缓冲完成前需要等待多长时间。如果目标是个巨大的文件，生成内容速度过慢或者链路速度过慢，这个参数就会很有用。</span><br><span class="line">使用cURL下载<span class="title class_">MP3</span>文件是一个对开发人员来说不错的例子。</span><br><span class="line"><span class="title class_">CURLOPT_CONNECTTIMEOUT</span> 可以设置为<span class="number">10</span>秒，标识如果服务器<span class="number">10</span>秒内没有响应，脚本就会断开连接；<span class="title class_">CURLOPT_TIMEOUT</span>可以设置为<span class="number">100</span>，如果<span class="title class_">MP3</span>文件<span class="number">100</span>秒内没有下载完成，脚本将会断开连接。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>header方法</title>
      <link href="/posts/b49d2b45.html"/>
      <url>/posts/b49d2b45.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="php的header函数之设置content-type"><a href="#php的header函数之设置content-type" class="headerlink" title="php的header函数之设置content-type"></a>php的header函数之设置content-type</h1><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line">引用地址</span><br><span class="line"><span class="comment">//定义编码</span></span><br><span class="line"><span class="built_in">header</span>( &#x27;Content-<span class="built_in">Type</span>:text/html;charset=utf<span class="number">-8</span> &#x27;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//Atom</span></span><br><span class="line"><span class="built_in">header</span>(&#x27;Content-<span class="built_in">type</span>: application/atom+xml&#x27;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//CSS</span></span><br><span class="line"><span class="built_in">header</span>(&#x27;Content-<span class="built_in">type</span>: text/css&#x27;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//Javascript</span></span><br><span class="line"><span class="built_in">header</span>(&#x27;Content-<span class="built_in">type</span>: text/javascript&#x27;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//JPEG Image</span></span><br><span class="line"><span class="built_in">header</span>(&#x27;Content-<span class="built_in">type</span>: image/jpeg&#x27;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//JSON</span></span><br><span class="line"><span class="built_in">header</span>(&#x27;Content-<span class="built_in">type</span>: application/json&#x27;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//PDF</span></span><br><span class="line"><span class="built_in">header</span>(&#x27;Content-<span class="built_in">type</span>: application/pdf&#x27;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//RSS</span></span><br><span class="line"><span class="built_in">header</span>(&#x27;Content-<span class="built_in">Type</span>: application/rss+xml; charset=ISO<span class="number">-8859</span><span class="number">-1</span>&#x27;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//Text (Plain)</span></span><br><span class="line"><span class="built_in">header</span>(&#x27;Content-<span class="built_in">type</span>: text/plain&#x27;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//XML</span></span><br><span class="line"><span class="built_in">header</span>(&#x27;Content-<span class="built_in">type</span>: text/xml&#x27;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// ok</span></span><br><span class="line"><span class="built_in">header</span>(&#x27;HTTP/<span class="number">1.1</span> <span class="number">200</span> OK&#x27;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//设置一个404头:</span></span><br><span class="line"><span class="built_in">header</span>(&#x27;HTTP/<span class="number">1.1</span> <span class="number">404</span> Not Found&#x27;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//设置地址被永久的重定向</span></span><br><span class="line"><span class="built_in">header</span>(&#x27;HTTP/<span class="number">1.1</span> <span class="number">301</span> Moved Permanently&#x27;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//转到一个新地址</span></span><br><span class="line"><span class="built_in">header</span>(&#x27;Location: http://www.example.org/&#x27;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//文件延迟转向:</span></span><br><span class="line"><span class="built_in">header</span>(&#x27;Refresh: <span class="number">10</span>; url=http://www.example.org/&#x27;);</span><br><span class="line"><span class="keyword">print</span> &#x27;You will be redirected in <span class="number">10</span> seconds&#x27;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//当然，也可以使用html语法实现</span></span><br><span class="line"><span class="comment">// &lt;meta http-equiv=&quot;refresh&quot; content=&quot;10;http://www.example.org/ /&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// override X-Powered-By: PHP:</span></span><br><span class="line"><span class="built_in">header</span>(&#x27;X-Powered-By: PHP/<span class="number">4.4</span><span class="number">.0</span>&#x27;);</span><br><span class="line"><span class="built_in">header</span>(&#x27;X-Powered-By: Brain/<span class="number">0.6</span>b&#x27;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//文档语言</span></span><br><span class="line"><span class="built_in">header</span>(&#x27;Content-language: en&#x27;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//告诉浏览器最后一次修改时间</span></span><br><span class="line">$time = <span class="built_in">time</span>() - <span class="number">60</span>; <span class="comment">// or filemtime($fn), etc</span></span><br><span class="line"><span class="built_in">header</span>(&#x27;Last-Modified: &#x27;.<span class="built_in">gmdate</span>(&#x27;D, d M Y H:i:s&#x27;, $<span class="built_in">time</span>).&#x27; GMT&#x27;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//告诉浏览器文档内容没有发生改变</span></span><br><span class="line"><span class="built_in">header</span>(&#x27;HTTP/<span class="number">1.1</span> <span class="number">304</span> Not Modified&#x27;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//设置内容长度</span></span><br><span class="line"><span class="built_in">header</span>(&#x27;Content-Length: <span class="number">1234</span>&#x27;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//设置为一个下载类型</span></span><br><span class="line"><span class="built_in">header</span>(&#x27;Content-<span class="built_in">Type</span>: application/octet-stream&#x27;);</span><br><span class="line"><span class="built_in">header</span>(&#x27;Content-Disposition: attachment; filename=<span class="string">&quot;example.zip&quot;</span>&#x27;);</span><br><span class="line"><span class="built_in">header</span>(&#x27;Content-Transfer-Encoding: binary&#x27;);</span><br><span class="line"><span class="comment">// load the file to send:</span></span><br><span class="line"><span class="built_in">readfile</span>(&#x27;example.zip&#x27;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 对当前文档禁用缓存</span></span><br><span class="line"><span class="built_in">header</span>(&#x27;Cache-Control: no-cache, no-store, max-age=<span class="number">0</span>, must-revalidate&#x27;);</span><br><span class="line"><span class="built_in">header</span>(&#x27;Expires: Mon, <span class="number">26</span> Jul <span class="number">1997</span> <span class="number">05</span>:<span class="number">00</span>:<span class="number">00</span> GMT&#x27;); <span class="comment">// Date in the past</span></span><br><span class="line"><span class="built_in">header</span>(&#x27;Pragma: no-cache&#x27;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//设置内容类型:</span></span><br><span class="line"><span class="built_in">header</span>(&#x27;Content-<span class="built_in">Type</span>: text/html; charset=iso<span class="number">-8859</span><span class="number">-1</span>&#x27;);</span><br><span class="line"><span class="built_in">header</span>(&#x27;Content-<span class="built_in">Type</span>: text/html; charset=utf<span class="number">-8</span>&#x27;);</span><br><span class="line"><span class="built_in">header</span>(&#x27;Content-<span class="built_in">Type</span>: text/plain&#x27;); <span class="comment">//纯文本格式</span></span><br><span class="line"><span class="built_in">header</span>(&#x27;Content-<span class="built_in">Type</span>: image/jpeg&#x27;); <span class="comment">//JPG***</span></span><br><span class="line"><span class="built_in">header</span>(&#x27;Content-<span class="built_in">Type</span>: application/zip&#x27;); <span class="comment">// ZIP文件</span></span><br><span class="line"><span class="built_in">header</span>(&#x27;Content-<span class="built_in">Type</span>: application/pdf&#x27;); <span class="comment">// PDF文件</span></span><br><span class="line"><span class="built_in">header</span>(&#x27;Content-<span class="built_in">Type</span>: audio/mpeg&#x27;); <span class="comment">// 音频文件</span></span><br><span class="line"><span class="built_in">header</span>(&#x27;Content-<span class="built_in">Type</span>: application/x-shockw**e-flash&#x27;); <span class="comment">//Flash动画</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//显示登陆对话框</span></span><br><span class="line"><span class="built_in">header</span>(&#x27;HTTP/<span class="number">1.1</span> <span class="number">401</span> Unauthorized&#x27;);</span><br><span class="line"><span class="built_in">header</span>(&#x27;WWW-Authenticate: Basic realm=<span class="string">&quot;Top Secret&quot;</span>&#x27;);</span><br><span class="line"><span class="keyword">print</span> &#x27;Text that will be displayed <span class="keyword">if</span> the user hits cancel <span class="keyword">or</span> &#x27;;</span><br><span class="line"><span class="keyword">print</span> &#x27;enters wrong login data&#x27;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">下载xls文件</span><br><span class="line">$filename = <span class="built_in">rtrim</span>($_SERVER[&#x27;DOCUMENT_ROOT&#x27;],&#x27;/&#x27;).&#x27;/app/files/payment_status.csv&#x27;;</span><br><span class="line"><span class="built_in">header</span>(&#x27;Content-Disposition: attachment; filename=payment_status.xlsx&#x27;);</span><br><span class="line"><span class="built_in">header</span>(&#x27;Content-<span class="built_in">Type</span>: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet&#x27;);</span><br><span class="line"><span class="built_in">header</span>(&#x27;Content-Length: &#x27; . <span class="built_in">filesize</span>($filename));</span><br><span class="line"><span class="built_in">header</span>(&#x27;Content-Transfer-Encoding: binary&#x27;);</span><br><span class="line"><span class="built_in">header</span>(&#x27;Cache-Control: must-revalidate&#x27;);</span><br><span class="line"><span class="built_in">header</span>(&#x27;Pragma: public&#x27;);</span><br><span class="line"><span class="built_in">readfile</span>($filename);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>set_time_limit</title>
      <link href="/posts/410d7417.html"/>
      <url>/posts/410d7417.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 命令行中curl方式配置脚本时间无效</span></span><br><span class="line"><span class="comment"># php.ini</span></span><br><span class="line"><span class="attribute">max_execution_time</span> = <span class="number">300</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># php-fpm.conf</span></span><br><span class="line">request_terminate_timeout = <span class="number">300</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># nginx.conf</span></span><br><span class="line"><span class="comment"># 所有站点</span></span><br><span class="line">http &#123;</span><br><span class="line"><span class="attribute">fastcgi_read_timeout</span> <span class="number">300</span>; </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># 指定站点</span></span><br><span class="line"><span class="section">location</span> <span class="regexp">~ \.php$</span> &#123;</span><br><span class="line"><span class="attribute">include</span> /etc/nginx/fastcgi_params;</span><br><span class="line">        <span class="attribute">fastcgi_pass</span>  unix:/var/run/php5-fpm.sock;</span><br><span class="line"><span class="attribute">fastcgi_read_timeout</span> <span class="number">300</span>; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启php-fpm和nginx</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>strtotime</title>
      <link href="/posts/b9cb5dc4.html"/>
      <url>/posts/b9cb5dc4.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="令人困惑的strtotime"><a href="#令人困惑的strtotime" class="headerlink" title="令人困惑的strtotime"></a>令人困惑的strtotime</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">date</span>(<span class="string">&#x27;Y-m-d&#x27;</span>, <span class="title function_ invoke__">strtotime</span>(<span class="string">&#x27;-1 month&#x27;</span>, <span class="title function_ invoke__">strtotime</span>(<span class="string">&#x27;2018-07-31&#x27;</span>)));</span><br><span class="line"><span class="comment">// 输出2018-07-01</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>模拟下date内部的对于这种事情的处理逻辑:</p><ol><li>先做-1 month, 那么当前是07-31, 减去一以后就是06-31.</li><li>再做日期规范化, 因为6月没有31号, 所以就好像2点60等于3点一样, 6月31就等于了7月1<br>也就是说, 只要涉及到大小月的最后一天, 都可能会有这个迷惑, 我们也可以很轻松的验证类似的其他月份, 印证这个结论:<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">date</span>(<span class="string">&quot;Y-m-d&quot;</span>, <span class="title function_ invoke__">strtotime</span>(<span class="string">&quot;-1 month&quot;</span>, <span class="title function_ invoke__">strtotime</span>(<span class="string">&quot;2017-03-31&quot;</span>))));</span><br><span class="line"><span class="comment">//输出2017-03-03</span></span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">date</span>(<span class="string">&quot;Y-m-d&quot;</span>, <span class="title function_ invoke__">strtotime</span>(<span class="string">&quot;+1 month&quot;</span>, <span class="title function_ invoke__">strtotime</span>(<span class="string">&quot;2017-08-31&quot;</span>))));</span><br><span class="line"><span class="comment">//输出2017-10-01</span></span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">date</span>(<span class="string">&quot;Y-m-d&quot;</span>, <span class="title function_ invoke__">strtotime</span>(<span class="string">&quot;next month&quot;</span>, <span class="title function_ invoke__">strtotime</span>(<span class="string">&quot;2017-01-31&quot;</span>))));</span><br><span class="line"><span class="comment">//输出2017-03-03</span></span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">date</span>(<span class="string">&quot;Y-m-d&quot;</span>, <span class="title function_ invoke__">strtotime</span>(<span class="string">&quot;last month&quot;</span>, <span class="title function_ invoke__">strtotime</span>(<span class="string">&quot;2017-03-31&quot;</span>))));</span><br><span class="line"><span class="comment">//输出2017-03-03</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></li></ol><p>从PHP5.3开始呢, date新增了一系列修正短语, 来明确这个问题, 那就是”first day of” 和 “last day of”, 也就是你可以限定好不要让date自动”规范化”:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">date</span>(<span class="string">&quot;Y-m-d&quot;</span>, <span class="title function_ invoke__">strtotime</span>(<span class="string">&quot;last day of -1 month&quot;</span>, <span class="title function_ invoke__">strtotime</span>(<span class="string">&quot;2017-03-31&quot;</span>))));</span><br><span class="line"><span class="comment">//输出2017-02-28</span></span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">date</span>(<span class="string">&quot;Y-m-d&quot;</span>, <span class="title function_ invoke__">strtotime</span>(<span class="string">&quot;first day of +1 month&quot;</span>, <span class="title function_ invoke__">strtotime</span>(<span class="string">&quot;2017-08-31&quot;</span>))));</span><br><span class="line"><span class="comment">////输出2017-09-01</span></span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">date</span>(<span class="string">&quot;Y-m-d&quot;</span>, <span class="title function_ invoke__">strtotime</span>(<span class="string">&quot;first day of next month&quot;</span>, <span class="title function_ invoke__">strtotime</span>(<span class="string">&quot;2017-01-31&quot;</span>))));</span><br><span class="line"><span class="comment">////输出2017-02-01</span></span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">date</span>(<span class="string">&quot;Y-m-d&quot;</span>, <span class="title function_ invoke__">strtotime</span>(<span class="string">&quot;last day of last month&quot;</span>, <span class="title function_ invoke__">strtotime</span>(<span class="string">&quot;2017-03-31&quot;</span>))));</span><br><span class="line"><span class="comment">////输出2017-02-28</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> php </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>YII</title>
      <link href="/posts/b297c155.html"/>
      <url>/posts/b297c155.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 记录数据差集</span></span><br><span class="line"><span class="comment"> * Class className</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">className</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">actionUpdate</span>(<span class="params"><span class="variable">$id</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$model</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">findModel</span>(<span class="variable">$id</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$old</span> = <span class="variable">$model</span>-&gt;attributes;</span><br><span class="line">        <span class="variable">$old</span>[<span class="string">&#x27;add_uid&#x27;</span>] = <span class="string">&#x27;uid&#x27;</span>;</span><br><span class="line">        <span class="variable">$post</span> = <span class="title class_">Yii</span>::<span class="variable">$app</span>-&gt;request-&gt;<span class="title function_ invoke__">post</span>();</span><br><span class="line">        <span class="variable">$new</span> = <span class="variable">$post</span>[<span class="string">&#x27;Message&#x27;</span>];</span><br><span class="line"></span><br><span class="line">        <span class="variable">$old_value</span> = <span class="title function_ invoke__">array_intersect_key</span>(<span class="variable">$old</span>, <span class="variable">$new</span>);</span><br><span class="line">        <span class="variable">$new_value</span> = <span class="title function_ invoke__">array_intersect_key</span>(<span class="variable">$new</span>, <span class="variable">$old</span>);</span><br><span class="line">        <span class="variable">$old_values</span> = <span class="title function_ invoke__">array_diff</span>(<span class="variable">$old_value</span>, <span class="variable">$new_value</span>);</span><br><span class="line">        <span class="variable">$new_values</span> = <span class="title function_ invoke__">array_diff</span>(<span class="variable">$new_value</span>, <span class="variable">$old_value</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">createLog</span>(<span class="variable">$old_values</span>, <span class="variable">$new_values</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$model</span>-&gt;<span class="title function_ invoke__">load</span>(<span class="title class_">Yii</span>::<span class="variable">$app</span>-&gt;request-&gt;<span class="title function_ invoke__">post</span>()) &amp;&amp; <span class="variable">$model</span>-&gt;<span class="title function_ invoke__">save</span>()) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">redirect</span>([<span class="string">&#x27;view&#x27;</span>, <span class="string">&#x27;id&#x27;</span> =&gt; <span class="variable">$model</span>-&gt;id]);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">render</span>(<span class="string">&#x27;update&#x27;</span>, [</span><br><span class="line">                <span class="string">&#x27;model&#x27;</span> =&gt; <span class="variable">$model</span>,</span><br><span class="line">            ]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">createLog</span>(<span class="params"><span class="variable">$old_values</span> = <span class="literal">null</span>, <span class="variable">$new_values</span> = <span class="literal">null</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$log</span> = <span class="keyword">new</span> <span class="title class_">Log</span>();</span><br><span class="line">        <span class="variable">$log</span>-&gt;title = <span class="variable">$old_values</span>[<span class="string">&#x27;title&#x27;</span>];</span><br><span class="line">        <span class="variable">$log</span>-&gt;<span class="title function_ invoke__">save</span>();</span><br><span class="line"></span><br><span class="line">        <span class="variable">$model</span> = <span class="keyword">new</span> <span class="title class_">Message</span>();</span><br><span class="line">        <span class="variable">$field_name</span> = <span class="variable">$model</span>-&gt;<span class="title function_ invoke__">attributeLabels</span>();</span><br><span class="line">        <span class="variable">$value</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="variable">$i</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$old_values</span> <span class="keyword">as</span> <span class="variable">$k</span> =&gt; <span class="variable">$v</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$i</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="variable">$value</span> .= <span class="string">&quot;,&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$value</span> .= <span class="string">&quot;(<span class="subst">$log</span>-&gt;id,&#x27;&quot;</span> . <span class="variable">$k</span> . <span class="string">&quot;&#x27;,&#x27;&quot;</span> . <span class="variable">$field_name</span>[<span class="variable">$k</span>] . <span class="string">&quot;&#x27;,&#x27;&quot;</span> . <span class="variable">$v</span> . <span class="string">&quot;&#x27;,&#x27;&quot;</span> . <span class="variable">$new_values</span>[<span class="variable">$k</span>] . <span class="string">&quot;&#x27;)&quot;</span>;</span><br><span class="line">            <span class="variable">$i</span> += <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="title class_">Yii</span>::<span class="variable">$app</span>-&gt;db-&gt;<span class="title function_ invoke__">createCommand</span>(<span class="string">&quot;insert into y2bg_detail (log_id,field,field_name,old_value,new_value) values <span class="subst">&#123;$value&#125;</span>&quot;</span>)-&gt;<span class="title function_ invoke__">execute</span>();</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 多数据库操作</span></span><br><span class="line"><span class="comment">//新增数据库如下:</span></span><br><span class="line">[</span><br><span class="line">    <span class="string">&#x27;db1&#x27;</span>=&gt;<span class="keyword">array</span>(</span><br><span class="line">        <span class="string">&#x27;class&#x27;</span>=&gt;<span class="string">&#x27;CDbConnection&#x27;</span>,<span class="comment">//一定需要这个</span></span><br><span class="line">        <span class="string">&#x27;connectionString&#x27;</span> =&gt; <span class="string">&#x27;mysql:host=localhost;dbname=test&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;emulatePrepare&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&#x27;username&#x27;</span> =&gt; <span class="string">&#x27;root&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;password&#x27;</span> =&gt; <span class="string">&#x27;123456&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;charset&#x27;</span> =&gt; <span class="string">&#x27;utf8&#x27;</span>,</span><br><span class="line"></span><br><span class="line">    ),</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="comment">//DAO方式:</span></span><br><span class="line"><span class="title class_">Yii</span>::<span class="title function_ invoke__">app</span>()-&gt;db1;</span><br><span class="line"></span><br><span class="line">AR方式：</span><br><span class="line">通过GII新建model，在db中选择db1→创建。</span><br><span class="line"></span><br><span class="line"><span class="comment">//在创建的model中出现如下代码，指定了连接的数据库，以此达到AR多数据库</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getDbConnection</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Yii</span>::<span class="title function_ invoke__">app</span>()-&gt;db1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">YII PDOStatement::bindParam的一个陷阱</span></span><br><span class="line"><span class="comment">http://www.laruence.com/2012/10/16/2831.html</span></span><br><span class="line"><span class="comment">详情：</span></span><br><span class="line"><span class="comment">方法 bindParam() 和 bindValue() 非常相似。唯一的区别就是前者使用一个 PHP 变量绑定参数(&amp;$value)， 而后者使用一个值。对于那些内存中的大数据块参数，处于性能的考虑，应优先使用前者。</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> php </category>
          
          <category> 框架 </category>
          
          <category> YII </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>YII日志功能</title>
      <link href="/posts/ed51fe4e.html"/>
      <url>/posts/ed51fe4e.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><figure class="highlight zephir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">yii日志功能详解：</span><br><span class="line">一、基本日志功能</span><br><span class="line"></span><br><span class="line">详细的介绍查看官网的document：http:<span class="comment">//www.yiiframework.com/doc/guide/1.1/en/topics.logging</span></span><br><span class="line"></span><br><span class="line">也可以看 Yii <span class="number">1.1</span> Application Development Cookbook     这本书很好</span><br><span class="line"></span><br><span class="line">默认的日志是输出到<span class="keyword">protected</span>/runtime/application.log </span><br><span class="line"></span><br><span class="line">如果需要修改那么需要在main.php里面的 components 下面增加log配置，如下：</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;preload&#x27;</span> =&gt; <span class="keyword">array</span>(<span class="string">&#x27;log&#x27;</span>),<span class="comment">//这句也必须加上</span></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;components&#x27;</span> =&gt; <span class="keyword">array</span>( </span><br><span class="line">        <span class="string">&#x27;log&#x27;</span>=&gt;<span class="keyword">array</span>( </span><br><span class="line">            <span class="string">&#x27;class&#x27;</span>=&gt;<span class="string">&#x27;CLogRouter&#x27;</span>, </span><br><span class="line">            <span class="string">&#x27;routes&#x27;</span>=&gt;<span class="keyword">array</span>(</span><br><span class="line">               <span class="comment">//这是一个文件route表示category为test开头的所有类型的输出都会记录到runtime/test.log下面 </span></span><br><span class="line">                 <span class="keyword">array</span>( </span><br><span class="line">                     <span class="string">&#x27;class&#x27;</span>=&gt;<span class="string">&#x27;CFileLogRoute&#x27;</span>, </span><br><span class="line">                     <span class="string">&#x27;levels&#x27;</span>=&gt;<span class="string">&#x27;trace, info, debug, warn, error, fatal, profile&#x27;</span>, </span><br><span class="line">                     <span class="string">&#x27;categories&#x27;</span>=&gt;<span class="string">&#x27;test.*&#x27;</span>, </span><br><span class="line">                     <span class="string">&#x27;maxFileSize&#x27;</span>=&gt;<span class="number">1048576</span>,<span class="comment">//单文件最大1G </span></span><br><span class="line">                     <span class="string">&#x27;logFile&#x27;</span>=&gt;<span class="string">&#x27;test.log&#x27;</span>, </span><br><span class="line">                 ), </span><br><span class="line">                  <span class="comment">// </span></span><br><span class="line">  </span><br><span class="line"><span class="comment">//                开发过程中所有日志直接输出到浏览器了，这样不需要登录服务器看日志了    </span></span><br><span class="line"></span><br><span class="line">                     </span><br><span class="line">                 <span class="keyword">array</span>( </span><br><span class="line">                    <span class="string">&#x27;class&#x27;</span> =&gt; <span class="string">&#x27;CWebLogRoute&#x27;</span>, <span class="comment">//在页面上显示日志</span></span><br><span class="line">                    <span class="string">&#x27;categories&#x27;</span> =&gt; <span class="string">&#x27;test.*&#x27;</span>, </span><br><span class="line">                    <span class="string">&#x27;levels&#x27;</span> =&gt; CLogger::LEVEL_PROFILE, </span><br><span class="line">                    <span class="string">&#x27;showInFireBug&#x27;</span> =&gt; <span class="keyword">true</span>, <span class="comment">//在console显示日志</span></span><br><span class="line">                    <span class="string">&#x27;ignoreAjaxInFireBug&#x27;</span> =&gt; <span class="keyword">true</span>, </span><br><span class="line">                ), </span><br><span class="line">                <span class="keyword">array</span>( </span><br><span class="line">                    <span class="string">&#x27;class&#x27;</span> =&gt; <span class="string">&#x27;CWebLogRoute&#x27;</span>, </span><br><span class="line">                    <span class="string">&#x27;categories&#x27;</span> =&gt; <span class="string">&#x27;test.* &#x27;</span>, </span><br><span class="line">                ), </span><br><span class="line"></span><br><span class="line">                <span class="keyword">array</span>( </span><br><span class="line">                    <span class="string">&#x27;class&#x27;</span>=&gt;<span class="string">&#x27;CEmailLogRoute&#x27;</span>, </span><br><span class="line">                    <span class="string">&#x27;levels&#x27;</span>=&gt;<span class="string">&#x27;error, warning&#x27;</span>, </span><br><span class="line">                    <span class="string">&#x27;emails&#x27;</span>=&gt;<span class="string">&#x27;admin@example.com&#x27;</span>, </span><br><span class="line">                ), </span><br><span class="line">            ), </span><br><span class="line">        ), </span><br><span class="line">  </span><br><span class="line">    ),</span><br><span class="line"></span><br><span class="line">如果在某处调用了Yii::log(<span class="string">&quot;jdkshgds&quot;</span>,<span class="string">&quot;info&quot;</span>,<span class="string">&#x27;test.xx&#x27;</span>);</span><br><span class="line"></span><br><span class="line">这个log首先被记录在了内存中一个CLogger类的<span class="keyword">array</span>中，然后会逐一的判断每个LogRoute，判断是否需要输出，注意是逐一判断，不是其中一个输出下一个就不管了。</span><br><span class="line"></span><br><span class="line">拿上面的配置来说：</span><br><span class="line"></span><br><span class="line">第一个CFileLogRoute，<span class="string">&#x27;categories&#x27;</span>=&gt;<span class="string">&#x27;test.*&#x27;</span>,levels里包含了info, test.xx满足条件，所以会执行，将这条log输出到test.log中，然后下一个CWebLogRoute， <span class="string">&#x27;levels&#x27;</span> =&gt; CLogger::LEVEL_PROFILE,。而这条log是info的，所以不会执行，再下一个CWebLogRoute，<span class="string">&#x27;categories&#x27;</span> =&gt; <span class="string">&#x27;test.* &#x27;</span>,levels没指定，那就说不过滤，所以这个也会被执行，所以这条log将被输出到浏览器中。</span><br><span class="line"></span><br><span class="line">二、profile功能</span><br><span class="line">另外logger还有一个很强大的功能:profile, </span><br><span class="line"></span><br><span class="line">Yii::beginProfile(<span class="string">&#x27;blockID&#x27;</span>);</span><br><span class="line">...code block being profiled...</span><br><span class="line">Yii::endProfile(<span class="string">&#x27;blockID&#x27;</span>);</span><br><span class="line">这样就能测试这个code block的执行效率了，非常的方便啊。</span><br><span class="line"></span><br><span class="line">更详细的配置查看：http:<span class="comment">//www.yiiframework.com/doc/api/1.1/CProfileLogRoute</span></span><br><span class="line"></span><br><span class="line">然后还有一个很BUG的功能，Profiling SQL Executions</span><br><span class="line"></span><br><span class="line">很多时候sql语句写的不好会非常影响效率的，但是要确定哪一条语句影响了效率就需要profiling了。YII也提供了这个bug级别的功能。具体参看http:<span class="comment">//www.yiiframework.com/doc/api/1.1/CDbConnection#enableProfiling-detail</span></span><br><span class="line"></span><br><span class="line">下面是截取的片段：</span><br><span class="line"></span><br><span class="line">Profiling is especially useful when working with database since SQL executions are often the main performance bottleneck of an application. While we can manually insert   beginProfile   and   endProfile   statements at appropriate places to measure the time spent in each SQL execution, Yii provides a more systematic approach to solve this problem.</span><br><span class="line"></span><br><span class="line">By setting   CDbConnection::enableProfiling   to be <span class="keyword">true</span> in the application configuration, every SQL statement being executed will be profiled. The results can be readily displayed using the aforementioned   CProfileLogRoute , which can show us how much time is spent in executing what SQL statement. We can also call  CDbConnection::getStats()   to retrieve the total number SQL statements executed and their total execution time.</span><br><span class="line"></span><br><span class="line">三、BUG级功能：调试sql query每个语句执行的耗时</span><br><span class="line"></span><br><span class="line">在配置中的log下加上下面这个Route</span><br><span class="line"></span><br><span class="line"><span class="comment">//这个配置专门负责数据库操作的profile </span></span><br><span class="line"><span class="keyword">array</span>( </span><br><span class="line">       <span class="string">&#x27;class&#x27;</span>=&gt;<span class="string">&#x27;CProfileLogRoute&#x27;</span>, </span><br><span class="line">       <span class="string">&#x27;levels&#x27;</span> =&gt; CLogger::LEVEL_PROFILE, </span><br><span class="line">       <span class="string">&#x27;showInFireBug&#x27;</span> =&gt; <span class="keyword">true</span>, </span><br><span class="line">       <span class="string">&#x27;ignoreAjaxInFireBug&#x27;</span> =&gt; <span class="keyword">true</span>, </span><br><span class="line">       <span class="string">&#x27;categories&#x27;</span> =&gt; <span class="string">&#x27;system.db.* &#x27;</span>, <span class="comment">//只记录db的操作日志，其他的忽略 </span></span><br><span class="line">),</span><br><span class="line"></span><br><span class="line">然后在某个controller的某个action中加入：</span><br><span class="line"></span><br><span class="line">Yii::beginProfile(<span class="string">&#x27;db&#x27;</span>, <span class="string">&#x27;pocketpet&#x27;</span>); </span><br><span class="line"><span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;<span class="number">1000</span>;$i++)&#123; </span><br><span class="line">      $user = UserModel::model()-&gt;findByPk(<span class="string">&quot;1&quot;</span>);<span class="comment">//这里只要是数据库操作就行，这个只是个例子 </span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Yii::endProfile(<span class="string">&#x27;db&#x27;</span>, <span class="string">&#x27;pocketpet&#x27;</span>);</span><br><span class="line"></span><br><span class="line">在浏览器中访问这个action，记得先打开firebug，然后firebug中就能看到如下图的记录：</span><br></pre></td></tr></table></figure><p><img src="/images/%E5%90%8E%E7%AB%AF/php/YII/Yii%E6%97%A5%E5%BF%97.jpg" alt="Tii日志"></p><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">相同的query会进行归类，计算total和<span class="keyword">average</span>，这个对于分析还是非常有帮助的。</span><br><span class="line"></span><br><span class="line">也可以将db的日志写到文件，配置如下（不建议使用，还是到浏览器用firebug方便）：</span><br><span class="line"></span><br><span class="line"><span class="built_in">array</span>( </span><br><span class="line">    <span class="string">&#x27;class&#x27;</span>=&gt;<span class="string">&#x27;CFileLogRoute&#x27;</span>, </span><br><span class="line">    <span class="string">&#x27;levels&#x27;</span> =&gt; CLogger<span class="type">::LEVEL_PROFILE</span>, </span><br><span class="line">    <span class="string">&#x27;categories&#x27;</span> =&gt; <span class="string">&#x27;system.db.* &#x27;</span>, <span class="comment">//只记录db的操作日志，其他的忽略 </span></span><br><span class="line">    <span class="string">&#x27;logFile&#x27;</span>=&gt;<span class="string">&#x27;db.log&#x27;</span>, </span><br><span class="line">),</span><br><span class="line"></span><br><span class="line">当然，想要生效还得有下面两步配置:</span><br><span class="line"></span><br><span class="line"><span class="number">1</span> . 记得在index.php, 中加入以下配置，高亮的那些</span><br><span class="line"></span><br><span class="line">$yii = dirname(__FILE__).<span class="string">&#x27;/../yii/framework/yii.php&#x27;</span>;</span><br><span class="line">$config = dirname(__FILE__).<span class="string">&#x27;/protected/config/main.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line">defined(<span class="string">&#x27;YII_DEBUG&#x27;</span>) <span class="literal">or</span> <span class="class"><span class="keyword">define</span></span>(<span class="string">&#x27;YII_DEBUG&#x27;</span>,<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">defined(<span class="string">&#x27;YII_DEBUG_SHOW_PROFILER&#x27;</span>) <span class="literal">or</span> <span class="class"><span class="keyword">define</span></span>(<span class="string">&#x27;YII_DEBUG_SHOW_PROFILER&#x27;</span>,<span class="literal">true</span>);</span><br><span class="line"><span class="comment">//enable profiling</span></span><br><span class="line">defined(<span class="string">&#x27;YII_DEBUG_PROFILING&#x27;</span>) <span class="literal">or</span> <span class="class"><span class="keyword">define</span></span>(<span class="string">&#x27;YII_DEBUG_PROFILING&#x27;</span>,<span class="literal">true</span>);</span><br><span class="line"><span class="comment">//trace level</span></span><br><span class="line">defined(<span class="string">&#x27;YII_TRACE_LEVEL&#x27;</span>) <span class="literal">or</span> <span class="class"><span class="keyword">define</span></span>(<span class="string">&#x27;YII_TRACE_LEVEL&#x27;</span>,<span class="number">3</span>);</span><br><span class="line"><span class="comment">//execution time</span></span><br><span class="line">defined(<span class="string">&#x27;YII_DEBUG_DISPLAY_TIME&#x27;</span>) <span class="literal">or</span> <span class="class"><span class="keyword">define</span></span>(<span class="string">&#x27;YII_DEBUG_DISPLAY_TIME&#x27;</span>,<span class="literal">false</span>);</span><br><span class="line">require_once($yii);</span><br><span class="line">Yii<span class="type">::createWebApplication</span>($config)-&gt;run();</span><br><span class="line"><span class="number">2.</span> 在main.php主配置文件里面，的components db 里将enableProfiling设置为<span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;components&#x27;</span> =&gt; <span class="built_in">array</span>(</span><br><span class="line"><span class="string">&#x27;db&#x27;</span> =&gt; <span class="built_in">array</span>(</span><br><span class="line">        <span class="string">&#x27;enableProfiling&#x27;</span> =&gt; <span class="literal">true</span>, <span class="comment">//这个是用来记录日志的，会记录每一条语句执行的时间</span></span><br><span class="line">        <span class="string">&#x27;enableParamLogging&#x27;</span> =&gt; <span class="literal">true</span>,<span class="comment">//true表示包括sql语句的参数在内的信息都会记录到日志里，非常详细</span></span><br><span class="line">    ),</span><br><span class="line">)</span><br><span class="line">四、调用示例</span><br><span class="line">Yii<span class="type">::log</span>(<span class="string">&quot;dfdf&quot;</span>,CLogger<span class="type">::LEVEL_INFO</span>,<span class="string">&quot;example&quot;</span>); </span><br><span class="line">Yii<span class="type">::log</span>(<span class="string">&quot;dfdf&quot;</span>,CLogger<span class="type">::LEVEL_INFO</span>,<span class="string">&quot;example&quot;</span>); </span><br><span class="line">Yii<span class="type">::log</span>(<span class="string">&quot;dfdf&quot;</span>,CLogger<span class="type">::LEVEL_ERROR</span>,<span class="string">&quot;example&quot;</span>); </span><br><span class="line">Yii<span class="type">::trace</span>(<span class="string">&quot;dfdf&quot;</span>, <span class="string">&quot;example&quot;</span>); </span><br><span class="line">Yii<span class="type">::trace</span>(<span class="string">&#x27;example trace message&#x27;</span>, <span class="string">&#x27;example&#x27;</span>); </span><br><span class="line">Yii<span class="type">::log</span>(<span class="string">&#x27;info&#x27;</span>, CLogger<span class="type">::LEVEL_INFO</span>, <span class="string">&#x27;example&#x27;</span>); </span><br><span class="line">Yii<span class="type">::log</span>(<span class="string">&#x27;error&#x27;</span>, CLogger<span class="type">::LEVEL_ERROR</span>, <span class="string">&#x27;example&#x27;</span>); </span><br><span class="line">Yii<span class="type">::log</span>(<span class="string">&#x27;trace&#x27;</span>, CLogger<span class="type">::LEVEL_TRACE</span>, <span class="string">&#x27;example&#x27;</span>); </span><br><span class="line">Yii<span class="type">::log</span>(<span class="string">&#x27;warning&#x27;</span>, CLogger<span class="type">::LEVEL_WARNING</span>, <span class="string">&#x27;example&#x27;</span>); </span><br><span class="line">Yii<span class="type">::beginProfile</span>(<span class="string">&#x27;db&#x27;</span>, <span class="string">&#x27;example&#x27;</span>); </span><br><span class="line">for($i=<span class="number">0</span>;$i&lt;<span class="number">1000</span>;$i++)&#123; </span><br><span class="line">    $user = UserModel<span class="type">::model</span>()-&gt;findByPk(<span class="string">&quot;1&quot;</span>); </span><br><span class="line">&#125; </span><br><span class="line">Yii<span class="type">::endProfile</span>(<span class="string">&#x27;db&#x27;</span>, <span class="string">&#x27;example&#x27;</span>); </span><br><span class="line">echo <span class="string">&#x27;done&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> php </category>
          
          <category> 框架 </category>
          
          <category> YII </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>thinkphp</title>
      <link href="/posts/b96f5dfe.html"/>
      <url>/posts/b96f5dfe.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ThinkPHP中的__initialize()和类的构造函数__construct()</span></span><br><span class="line">地址：http://www.thinkphp.cn/code/367.html</span><br><span class="line">1、__initialize()不是php类中的函数，php类的构造函数只有__construct().</span><br><span class="line">2、类的初始化：子类如果有自己的构造函数（__construct()）,则调用自己的进行初始化，如果没有，则调用父类的构造函数进行自己的初始化。</span><br><span class="line">3、当子类和父类都有__construct()函数的时候，如果要在初始化子类的时候同时调用父类的__constrcut()，则可以在子类中使用parent::__construct().</span><br><span class="line">4、_initialize()函数是在任何方法执行之前，都要执行的，当然也包括_ _construct构造函数，注意，_ _construct这里是双划线，而_initialize()函数是单划线。</span><br><span class="line">5、如果父子类均有_initialize()函数，则子类覆盖了父类的，如果子类没有而父类有，则子类继承父类的。在调用子类对象的_initialize()时，不会导致自动调用父类的_initialize()。</span><br><span class="line">6、默认情况下，子类的构造函数也不会自动调用父类的构造函数，这一点与Java不同。实际编写子类的构造函数时，一般都要加上父类构造函数的主动调用parent::_ _construct()，否则会导致子类对象空指针的异常，如Call to a member <span class="keyword">function</span> assign() on a non-object。</span><br><span class="line">7、_initialize()函数是在“任何”方法调用之前都要调用的，也就是说如果存在_initialize()函数，调用对象的任何方法都会导致_initialize()函数的自动调用，而_ _construct构造函数仅仅在创建对象的时候调用一次，跟其它方法调用没有关系。</span><br><span class="line"></span><br><span class="line"><span class="comment"># 字段排除</span></span><br><span class="line">如果我希望获取排除数据表中的content字段（文本字段的值非常耗内存）之外的所有字段值，我们就可以使用field方法的排除功能，例如下面的方式就可以实现所说的功能：</span><br><span class="line"><span class="variable">$Model</span>-&gt;field(<span class="string">&#x27;content&#x27;</span>,<span class="literal">true</span>)-&gt;<span class="keyword">select</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment"># thinkphp volist 中的empty增加样式</span></span><br><span class="line">为空的时候输出提示：</span><br><span class="line">&lt;volist name=<span class="string">&quot;list&quot;</span> <span class="built_in">id</span>=<span class="string">&quot;vo&quot;</span> empty=<span class="string">&quot;暂时没有数据&quot;</span> &gt;</span><br><span class="line">&#123;<span class="variable">$vo</span>.<span class="built_in">id</span>&#125;|&#123;<span class="variable">$vo</span>.name&#125;</span><br><span class="line"> &lt;/volist&gt;</span><br><span class="line">empty属性不支持直接传入html语法，但可以支持变量输出，例如：</span><br><span class="line"><span class="variable">$this</span>-&gt;assign(<span class="string">&#x27;empty&#x27;</span>,<span class="string">&#x27;&lt;span class=&quot;empty&quot;&gt;没有数据&lt;/span&gt;&#x27;</span>);</span><br><span class="line"><span class="variable">$this</span>-&gt;assign(<span class="string">&#x27;list&#x27;</span>,<span class="variable">$list</span>);</span><br><span class="line">然后在模板中使用：</span><br><span class="line">&lt;volist name=<span class="string">&quot;list&quot;</span> <span class="built_in">id</span>=<span class="string">&quot;vo&quot;</span> empty=<span class="string">&quot;<span class="variable">$empty</span>&quot;</span> &gt;</span><br><span class="line">&#123;<span class="variable">$vo</span>.<span class="built_in">id</span>&#125;|&#123;<span class="variable">$vo</span>.name&#125;</span><br><span class="line">&lt;/volist&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># thinkphp关闭字段缓存</span></span><br><span class="line">可以通过设置DB_FIELDS_CACHE 参数来关闭字段自动缓存，如果在开发的时候经常变动数据库的结构，而不希望进行数据表的字段缓存，可以在项目配置文件中增加如下配置：</span><br><span class="line"><span class="string">&#x27;DB_FIELDS_CACHE&#x27;</span>=&gt;<span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># thinkPhp U方法中使用js变量</span></span><br><span class="line">&lt;script&gt;</span><br><span class="line">    var uid = ...;// js中获得<span class="built_in">id</span></span><br><span class="line">    var url = <span class="string">&quot;&#123;:U(&#x27;Cate/add&#x27;)&#125;?id=&quot;</span> + uid; // ate/add方法中就可以I(<span class="string">&quot;id&quot;</span>)获取了</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> php </category>
          
          <category> 框架 </category>
          
          <category> thinkphp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>工具</title>
      <link href="/posts/93c14ecb.html"/>
      <url>/posts/93c14ecb.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="一、终端软件"><a href="#一、终端软件" class="headerlink" title="一、终端软件"></a>一、终端软件</h1><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1.MobaXterm</span><br></pre></td></tr></table></figure><h1 id="二-接口测试软件"><a href="#二-接口测试软件" class="headerlink" title="二.接口测试软件"></a>二.接口测试软件</h1><ol><li>postman<figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">https</span>://dl.pstmn.io/download/version/<span class="number">7</span>.<span class="number">36</span>.<span class="number">7</span>/win64</span><br><span class="line"><span class="attribute">https</span>://dl.pstmn.io/download/version/<span class="number">7</span>.<span class="number">36</span>.<span class="number">7</span>/win32</span><br><span class="line"><span class="attribute">https</span>://dl.pstmn.io/download/version/<span class="number">7</span>.<span class="number">36</span>.<span class="number">7</span>/osx64</span><br><span class="line"><span class="attribute">https</span>://dl.pstmn.io/download/version/<span class="number">7</span>.<span class="number">36</span>.<span class="number">7</span>/linux64</span><br><span class="line"></span><br><span class="line"><span class="attribute">https</span>://dl.pstmn.io/download/version/<span class="number">9</span>.<span class="number">31</span>.<span class="number">28</span>/win64</span><br><span class="line"><span class="attribute">https</span>://dl.pstmn.io/download/version/<span class="number">9</span>.<span class="number">31</span>.<span class="number">28</span>/osx64</span><br><span class="line"><span class="attribute">https</span>://dl.pstmn.io/download/version/<span class="number">9</span>.<span class="number">31</span>.<span class="number">28</span>/osx_arm64</span><br><span class="line"><span class="attribute">https</span>://dl.pstmn.io/download/version/<span class="number">9</span>.<span class="number">31</span>.<span class="number">28</span>/linux_64</span><br><span class="line"><span class="attribute">https</span>://dl.pstmn.io/download/version/<span class="number">9</span>.<span class="number">31</span>.<span class="number">28</span>/linux_arm64</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> 其他 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 其他 </tag>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>redis编译安装</title>
      <link href="/posts/6f5ba107.html"/>
      <url>/posts/6f5ba107.html</url>
      
        <content type="html"><![CDATA[<p>&lt;Excerpt in index | 首页摘要&gt;</p><span id="more"></span><p>&lt;The rest of contents | 余下全文&gt;</p><h1 id="编译以及指定安装路径"><a href="#编译以及指定安装路径" class="headerlink" title="编译以及指定安装路径"></a>编译以及指定安装路径</h1><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">make</span></span><br><span class="line"><span class="built_in">make</span> PREFIX=/usr/<span class="keyword">local</span>/webserver/redis install</span><br></pre></td></tr></table></figure><h1 id="配置文件移动"><a href="#配置文件移动" class="headerlink" title="配置文件移动"></a>配置文件移动</h1><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir <span class="regexp">/usr/</span>local<span class="regexp">/webserver/</span>redis<span class="regexp">/etc/</span></span><br><span class="line">cp redis.conf <span class="regexp">/usr/</span>local<span class="regexp">/webserver/</span>redis<span class="regexp">/etc/</span></span><br></pre></td></tr></table></figure><p>#修改redis配置</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">vim <span class="keyword">/usr/</span>local<span class="keyword">/webserver/</span>redis<span class="keyword">/etc/</span>redis.conf</span><br><span class="line"></span><br><span class="line"><span class="meta"># 修改一下配置</span></span><br><span class="line"><span class="meta"># redis以守护进程的方式运行</span></span><br><span class="line"><span class="meta"># no表示不以守护进程的方式运行(会占用一个终端)  </span></span><br><span class="line">daemonize yes</span><br><span class="line"></span><br><span class="line"><span class="meta"># 客户端闲置多长时间后断开连接，默认为0关闭此功能                                      </span></span><br><span class="line">timeout <span class="number">300</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># 设置redis日志级别，默认级别：notice                    </span></span><br><span class="line">loglevel verbose</span><br><span class="line"></span><br><span class="line"><span class="meta"># 设置日志文件的输出方式,如果以守护进程的方式运行redis 默认:<span class="string">&quot;&quot;</span> </span></span><br><span class="line"><span class="meta"># 并且日志输出设置为stdout,那么日志信息就输出到/dev/null里面去了 </span></span><br><span class="line">logfile stdout</span><br></pre></td></tr></table></figure><h1 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h1><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim /etc<span class="built_in">/profile</span></span><br><span class="line"><span class="built_in"></span><span class="built_in">export</span> <span class="attribute">PATH</span>=<span class="string">&quot;<span class="variable">$PATH</span>:/usr/local/webserver/redis/bin&quot;</span></span><br></pre></td></tr></table></figure><h1 id="保存退出"><a href="#保存退出" class="headerlink" title="保存退出"></a>保存退出</h1><h1 id="让环境变量立即生效"><a href="#让环境变量立即生效" class="headerlink" title="让环境变量立即生效"></a>让环境变量立即生效</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure><p>#开机启动</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim <span class="regexp">/etc/</span>rc.local</span><br><span class="line"><span class="regexp">/usr/</span>local<span class="regexp">/webserver/</span>redis<span class="regexp">/bin/</span>redis-server <span class="regexp">/usr/</span>local<span class="regexp">/webserver/</span>redis<span class="regexp">/etc/</span>redis.conf</span><br></pre></td></tr></table></figure><p>#重启</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">kill</span> -HUP `<span class="built_in">cat</span> /var/run/redis.pid`</span><br></pre></td></tr></table></figure><p>#关闭</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">kill</span> 进程<span class="built_in">id</span>或者./redis-cli shutdown</span><br></pre></td></tr></table></figure><h1 id="防火墙配置"><a href="#防火墙配置" class="headerlink" title="防火墙配置"></a>防火墙配置</h1><p> 打开防火墙规则</p><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/sysconfig/iptables</span><br><span class="line"></span><br><span class="line"><span class="comment"># 增加内容</span></span><br><span class="line">-A INPUT -m <span class="keyword">state</span> --state NEW -m tcp -p tcp --dport <span class="number">6379</span> -j ACCEPT</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启火墙规则立即生效</span></span><br><span class="line">service iptables restart </span><br></pre></td></tr></table></figure><h1 id="安装php-redis扩展包"><a href="#安装php-redis扩展包" class="headerlink" title="安装php redis扩展包"></a>安装php redis扩展包</h1><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">unzip</span> phpredis-develop.zip</span><br></pre></td></tr></table></figure><p>生成扩展配置</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd phpredis-develop</span><br><span class="line"><span class="regexp">/usr/</span>local<span class="regexp">/webserver/</span>php7<span class="regexp">/bin/</span>phpize</span><br></pre></td></tr></table></figure><p>编译Redis</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">./configure --<span class="keyword">with</span>-php-<span class="keyword">config</span>=/usr/<span class="keyword">local</span>/webserver/php7/bin/php-<span class="keyword">config</span></span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><h1 id="安装完成，返回模块所在路径"><a href="#安装完成，返回模块所在路径" class="headerlink" title="安装完成，返回模块所在路径"></a>安装完成，返回模块所在路径</h1><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd <span class="regexp">/usr/</span>local<span class="regexp">/webserver/</span>php<span class="regexp">/lib/</span>php<span class="regexp">/extensions/</span>no-debug-non-zts-<span class="number">20100525</span>/</span><br></pre></td></tr></table></figure><p>#配置PHP支持redis</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">vim <span class="regexp">/usr/</span>local<span class="regexp">/webserver/</span>php<span class="regexp">/etc/</span>php.ini</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改以下内容</span></span><br><span class="line">extension_dir = <span class="string">&quot;/usr/local/webserver/php/lib/php/extensions/no-debug-non-zts-20100525/&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 增加扩展到php</span></span><br><span class="line">extension = redis.so</span><br><span class="line"><span class="comment">#重新启动php-fpm</span></span><br><span class="line"></span><br><span class="line">kill -USR2 php-fpm 进程</span><br><span class="line">kill -USR2 `cat <span class="regexp">/usr/</span>local<span class="regexp">/webserver/</span>php7<span class="regexp">/var/</span>run/php-fpm.pid`</span><br></pre></td></tr></table></figure><p>在php测试下是否成功</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
          <category> redis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
